{
    "RT": {
        "feature_desc": "Record Type",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "feature_notes": "P denotes person record and H denotes housing record",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "RT",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "P": 0
                },
                "alpha": 0
            }
        },
        "dependencies": []
    },
    "SERIALNO": {
        "feature_desc": "Housing unit/GQ person serial number",
        "feature_type": "obj",
        "field_length": 7,
        "contains_null": false,
        "field_density": "dense",
        "feature_notes": "Use this column to link to the housing file.  7 digit number that contains leading zeros. Does not contain null values.",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "SERIALNO",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "000000139": 0,
                    "000000580": 1,
                    "000000670": 2,
                    "000001012": 3,
                    "000001620": 4,
                    "000003056": 5,
                    "000003442": 6,
                    "000003461": 7,
                    "000003619": 8,
                    "000003634": 9,
                    "000003920": 10,
                    "000004506": 11,
                    "000005284": 12,
                    "000006405": 13,
                    "000006631": 14,
                    "000007154": 15,
                    "000007494": 16,
                    "000007758": 17,
                    "000008902": 18,
                    "000009345": 19,
                    "000009638": 20,
                    "000009950": 21,
                    "000010616": 22,
                    "000011035": 23,
                    "000011937": 24,
                    "000012206": 25,
                    "000014600": 26,
                    "000016380": 27,
                    "000016389": 28,
                    "000016904": 29,
                    "000017049": 30,
                    "000017330": 31,
                    "000017335": 32,
                    "000018341": 33,
                    "000018544": 34,
                    "000018696": 35,
                    "000018832": 36,
                    "000019019": 37,
                    "000019056": 38,
                    "000019489": 39,
                    "000019719": 40,
                    "000020115": 41,
                    "000022009": 42,
                    "000022510": 43,
                    "000023217": 44,
                    "000023222": 45,
                    "000023537": 46,
                    "000023772": 47,
                    "000023808": 48,
                    "000023982": 49,
                    "000023995": 50,
                    "000024319": 51,
                    "000024686": 52,
                    "000025053": 53,
                    "000025710": 54,
                    "000027069": 55,
                    "000028481": 56,
                    "000028698": 57,
                    "000029067": 58,
                    "000030663": 59,
                    "000032189": 60,
                    "000032460": 61,
                    "000033619": 62,
                    "000034111": 63,
                    "000034449": 64,
                    "000034526": 65,
                    "000034808": 66,
                    "000035019": 67,
                    "000035699": 68,
                    "000035708": 69,
                    "000036471": 70,
                    "000036983": 71,
                    "000037497": 72,
                    "000038140": 73,
                    "000038319": 74,
                    "000038639": 75,
                    "000039074": 76,
                    "000039085": 77,
                    "000039240": 78,
                    "000039543": 79,
                    "000040008": 80,
                    "000041531": 81,
                    "000041656": 82,
                    "000044872": 83,
                    "000045568": 84,
                    "000046776": 85,
                    "000046872": 86,
                    "000047050": 87,
                    "000047340": 88,
                    "000047785": 89,
                    "000048078": 90,
                    "000048321": 91,
                    "000048591": 92,
                    "000049778": 93,
                    "000050033": 94,
                    "000050145": 95,
                    "000050246": 96,
                    "000050486": 97,
                    "000050990": 98,
                    "000051610": 99,
                    "000052158": 100,
                    "000052925": 101,
                    "000053156": 102,
                    "000053465": 103,
                    "000053815": 104,
                    "000053944": 105,
                    "000054128": 106,
                    "000054678": 107,
                    "000054875": 108,
                    "000055635": 109,
                    "000056389": 110,
                    "000057956": 111,
                    "000058684": 112,
                    "000058940": 113,
                    "000059593": 114,
                    "000060361": 115,
                    "000060956": 116,
                    "000060981": 117,
                    "000061824": 118,
                    "000061934": 119,
                    "000062491": 120,
                    "000062978": 121,
                    "000063702": 122,
                    "000064465": 123,
                    "000064626": 124,
                    "000064966": 125,
                    "000065877": 126,
                    "000066724": 127,
                    "000066854": 128,
                    "000067832": 129,
                    "000068853": 130,
                    "000069079": 131,
                    "000069132": 132,
                    "000071016": 133,
                    "000071919": 134,
                    "000072560": 135,
                    "000072798": 136,
                    "000072820": 137,
                    "000073333": 138,
                    "000073525": 139,
                    "000074911": 140,
                    "000075339": 141,
                    "000075802": 142,
                    "000077716": 143,
                    "000080247": 144,
                    "000080334": 145,
                    "000080676": 146,
                    "000081107": 147,
                    "000081110": 148,
                    "000081657": 149,
                    "000081665": 150,
                    "000081998": 151,
                    "000082332": 152,
                    "000082455": 153,
                    "000082952": 154,
                    "000083569": 155,
                    "000083831": 156,
                    "000085263": 157,
                    "000085520": 158,
                    "000085799": 159,
                    "000087016": 160,
                    "000087386": 161,
                    "000087826": 162,
                    "000088500": 163,
                    "000088568": 164,
                    "000089134": 165,
                    "000089930": 166,
                    "000090228": 167,
                    "000090658": 168,
                    "000090885": 169,
                    "000091885": 170,
                    "000091991": 171,
                    "000092661": 172,
                    "000093475": 173,
                    "000093728": 174,
                    "000094314": 175,
                    "000094362": 176,
                    "000094413": 177,
                    "000094545": 178,
                    "000095319": 179,
                    "000095415": 180,
                    "000095755": 181,
                    "000095861": 182,
                    "000095978": 183,
                    "000095988": 184,
                    "000096507": 185,
                    "000097710": 186,
                    "000098010": 187,
                    "000099041": 188,
                    "000099997": 189,
                    "000100429": 190,
                    "000101872": 191,
                    "000102340": 192,
                    "000102656": 193,
                    "000102996": 194,
                    "000103003": 195,
                    "000103296": 196,
                    "000103714": 197,
                    "000104465": 198,
                    "000104573": 199,
                    "000104928": 200,
                    "000105854": 201,
                    "000106030": 202,
                    "000107385": 203,
                    "000107456": 204,
                    "000108575": 205,
                    "000108625": 206,
                    "000108744": 207,
                    "000109274": 208,
                    "000109859": 209,
                    "000110011": 210,
                    "000110185": 211,
                    "000114113": 212,
                    "000114898": 213,
                    "000115202": 214,
                    "000115554": 215,
                    "000115711": 216,
                    "000116300": 217,
                    "000117493": 218,
                    "000117970": 219,
                    "000118726": 220,
                    "000118727": 221,
                    "000118740": 222,
                    "000119097": 223,
                    "000119304": 224,
                    "000120607": 225,
                    "000120842": 226,
                    "000120867": 227,
                    "000120982": 228,
                    "000121156": 229,
                    "000121297": 230,
                    "000121340": 231,
                    "000122588": 232,
                    "000123037": 233,
                    "000123115": 234,
                    "000123126": 235,
                    "000123385": 236,
                    "000123386": 237,
                    "000123417": 238,
                    "000125508": 239,
                    "000125509": 240,
                    "000125965": 241,
                    "000126806": 242,
                    "000127124": 243,
                    "000127464": 244,
                    "000127833": 245,
                    "000128453": 246,
                    "000129041": 247,
                    "000129110": 248,
                    "000129295": 249,
                    "000129459": 250,
                    "000129478": 251,
                    "000129505": 252,
                    "000130181": 253,
                    "000130247": 254,
                    "000130254": 255,
                    "000130758": 256,
                    "000131112": 257,
                    "000131208": 258,
                    "000131220": 259,
                    "000131471": 260,
                    "000131835": 261,
                    "000131933": 262,
                    "000131991": 263,
                    "000132061": 264,
                    "000132405": 265,
                    "000133259": 266,
                    "000134078": 267,
                    "000134414": 268,
                    "000134416": 269,
                    "000136284": 270,
                    "000136880": 271,
                    "000137545": 272,
                    "000137617": 273,
                    "000138608": 274,
                    "000138721": 275,
                    "000139368": 276,
                    "000140603": 277,
                    "000141689": 278,
                    "000141851": 279,
                    "000142192": 280,
                    "000142334": 281,
                    "000142752": 282,
                    "000143303": 283,
                    "000143538": 284,
                    "000144283": 285,
                    "000144514": 286,
                    "000144556": 287,
                    "000146137": 288,
                    "000146444": 289,
                    "000146963": 290,
                    "000147186": 291,
                    "000148136": 292,
                    "000148718": 293,
                    "000149184": 294,
                    "000150049": 295,
                    "000150057": 296,
                    "000150302": 297,
                    "000150511": 298,
                    "000150912": 299,
                    "000151635": 300,
                    "000152065": 301,
                    "000152751": 302,
                    "000152870": 303,
                    "000153159": 304,
                    "000153285": 305,
                    "000153809": 306,
                    "000154352": 307,
                    "000154415": 308,
                    "000155027": 309,
                    "000156776": 310,
                    "000156914": 311,
                    "000157276": 312,
                    "000157286": 313,
                    "000157397": 314,
                    "000157453": 315,
                    "000157726": 316,
                    "000157788": 317,
                    "000158048": 318,
                    "000158059": 319,
                    "000158161": 320,
                    "000158876": 321,
                    "000159746": 322,
                    "000160546": 323,
                    "000160796": 324,
                    "000160802": 325,
                    "000160864": 326,
                    "000160900": 327,
                    "000161021": 328,
                    "000162430": 329,
                    "000163119": 330,
                    "000163160": 331,
                    "000163258": 332,
                    "000163873": 333,
                    "000164396": 334,
                    "000164443": 335,
                    "000165242": 336,
                    "000166149": 337,
                    "000166254": 338,
                    "000166410": 339,
                    "000166531": 340,
                    "000166893": 341,
                    "000167478": 342,
                    "000167726": 343,
                    "000168100": 344,
                    "000168614": 345,
                    "000168923": 346,
                    "000169502": 347,
                    "000170093": 348,
                    "000170155": 349,
                    "000171423": 350,
                    "000171658": 351,
                    "000172568": 352,
                    "000172954": 353,
                    "000175165": 354,
                    "000175298": 355,
                    "000175857": 356,
                    "000176551": 357,
                    "000176705": 358,
                    "000176713": 359,
                    "000176814": 360,
                    "000178647": 361,
                    "000178720": 362,
                    "000179433": 363,
                    "000180060": 364,
                    "000180257": 365,
                    "000181132": 366,
                    "000181352": 367,
                    "000181979": 368,
                    "000182803": 369,
                    "000183024": 370,
                    "000183171": 371,
                    "000183809": 372,
                    "000184344": 373,
                    "000184393": 374,
                    "000184558": 375,
                    "000185569": 376,
                    "000186347": 377,
                    "000187096": 378,
                    "000187349": 379,
                    "000187362": 380,
                    "000188087": 381,
                    "000188554": 382,
                    "000188803": 383,
                    "000188804": 384,
                    "000188834": 385,
                    "000189624": 386,
                    "000190022": 387,
                    "000190024": 388,
                    "000191019": 389,
                    "000191020": 390,
                    "000191118": 391,
                    "000191235": 392,
                    "000191533": 393,
                    "000191554": 394,
                    "000192394": 395,
                    "000193137": 396,
                    "000194031": 397,
                    "000194357": 398,
                    "000194545": 399,
                    "000195014": 400,
                    "000195099": 401,
                    "000195546": 402,
                    "000195586": 403,
                    "000196005": 404,
                    "000196663": 405,
                    "000197227": 406,
                    "000197639": 407,
                    "000198006": 408,
                    "000198350": 409,
                    "000198354": 410,
                    "000198361": 411,
                    "000199124": 412,
                    "000199514": 413,
                    "000199788": 414,
                    "000199881": 415,
                    "000199951": 416,
                    "000200319": 417,
                    "000200376": 418,
                    "000200500": 419,
                    "000200745": 420,
                    "000200830": 421,
                    "000201515": 422,
                    "000202002": 423,
                    "000202457": 424,
                    "000202895": 425,
                    "000202972": 426,
                    "000203210": 427,
                    "000203274": 428,
                    "000203975": 429,
                    "000204243": 430,
                    "000204253": 431,
                    "000204428": 432,
                    "000205509": 433,
                    "000206497": 434,
                    "000206751": 435,
                    "000207006": 436,
                    "000207373": 437,
                    "000207944": 438,
                    "000208751": 439,
                    "000209315": 440,
                    "000209344": 441,
                    "000209595": 442,
                    "000209625": 443,
                    "000210232": 444,
                    "000210525": 445,
                    "000211472": 446,
                    "000211571": 447,
                    "000211941": 448,
                    "000212418": 449,
                    "000212698": 450,
                    "000213848": 451,
                    "000213881": 452,
                    "000214310": 453,
                    "000215117": 454,
                    "000215168": 455,
                    "000215515": 456,
                    "000215824": 457,
                    "000215845": 458,
                    "000215863": 459,
                    "000216913": 460,
                    "000217667": 461,
                    "000218278": 462,
                    "000218511": 463,
                    "000218770": 464,
                    "000219166": 465,
                    "000219268": 466,
                    "000219572": 467,
                    "000219822": 468,
                    "000220349": 469,
                    "000220636": 470,
                    "000221356": 471,
                    "000221478": 472,
                    "000222014": 473,
                    "000222179": 474,
                    "000222365": 475,
                    "000222594": 476,
                    "000222882": 477,
                    "000223031": 478,
                    "000224254": 479,
                    "000224271": 480,
                    "000226118": 481,
                    "000226169": 482,
                    "000226771": 483,
                    "000226777": 484,
                    "000227150": 485,
                    "000227543": 486,
                    "000228296": 487,
                    "000228826": 488,
                    "000228935": 489,
                    "000228944": 490,
                    "000229250": 491,
                    "000230252": 492,
                    "000230427": 493,
                    "000230719": 494,
                    "000231274": 495,
                    "000231767": 496,
                    "000231986": 497,
                    "000231988": 498,
                    "000232001": 499,
                    "000232029": 500,
                    "000232033": 501,
                    "000233715": 502,
                    "000233741": 503,
                    "000234477": 504,
                    "000234936": 505,
                    "000235657": 506,
                    "000235808": 507,
                    "000237852": 508,
                    "000238053": 509,
                    "000239138": 510,
                    "000239176": 511,
                    "000240239": 512,
                    "000240663": 513,
                    "000241329": 514,
                    "000241679": 515,
                    "000242401": 516,
                    "000242538": 517,
                    "000243096": 518,
                    "000243676": 519,
                    "000244170": 520,
                    "000244254": 521,
                    "000244689": 522,
                    "000245221": 523,
                    "000245291": 524,
                    "000245521": 525,
                    "000246770": 526,
                    "000247165": 527,
                    "000247514": 528,
                    "000248116": 529,
                    "000248451": 530,
                    "000249863": 531,
                    "000250377": 532,
                    "000250617": 533,
                    "000251269": 534,
                    "000251616": 535,
                    "000251634": 536,
                    "000252484": 537,
                    "000253435": 538,
                    "000254503": 539,
                    "000254868": 540,
                    "000255556": 541,
                    "000255709": 542,
                    "000256339": 543,
                    "000256581": 544,
                    "000259912": 545,
                    "000260022": 546,
                    "000260435": 547,
                    "000260460": 548,
                    "000260490": 549,
                    "000261148": 550,
                    "000261555": 551,
                    "000263813": 552,
                    "000263821": 553,
                    "000264362": 554,
                    "000266027": 555,
                    "000266379": 556,
                    "000266470": 557,
                    "000268958": 558,
                    "000268975": 559,
                    "000269112": 560,
                    "000269480": 561,
                    "000271218": 562,
                    "000272273": 563,
                    "000272315": 564,
                    "000272472": 565,
                    "000272822": 566,
                    "000272998": 567,
                    "000273536": 568,
                    "000273553": 569,
                    "000274178": 570,
                    "000274314": 571,
                    "000274777": 572,
                    "000274981": 573,
                    "000275116": 574,
                    "000276431": 575,
                    "000276625": 576,
                    "000276896": 577,
                    "000277385": 578,
                    "000277629": 579,
                    "000278039": 580,
                    "000279679": 581,
                    "000280219": 582,
                    "000281913": 583,
                    "000284113": 584,
                    "000284415": 585,
                    "000284878": 586,
                    "000285120": 587,
                    "000285178": 588,
                    "000285340": 589,
                    "000286349": 590,
                    "000287152": 591,
                    "000287551": 592,
                    "000289540": 593,
                    "000290239": 594,
                    "000290258": 595,
                    "000290526": 596,
                    "000290693": 597,
                    "000291206": 598,
                    "000292064": 599,
                    "000292715": 600,
                    "000293013": 601,
                    "000293247": 602,
                    "000293332": 603,
                    "000294035": 604,
                    "000294719": 605,
                    "000294868": 606,
                    "000295309": 607,
                    "000295830": 608,
                    "000296412": 609,
                    "000296801": 610,
                    "000297721": 611,
                    "000297739": 612,
                    "000297753": 613,
                    "000298044": 614,
                    "000298327": 615,
                    "000298458": 616,
                    "000299479": 617,
                    "000301071": 618,
                    "000301189": 619,
                    "000302329": 620,
                    "000302834": 621,
                    "000302892": 622,
                    "000303383": 623,
                    "000303821": 624,
                    "000303962": 625,
                    "000304011": 626,
                    "000305469": 627,
                    "000305591": 628,
                    "000306045": 629,
                    "000306100": 630,
                    "000306259": 631,
                    "000306332": 632,
                    "000306446": 633,
                    "000306612": 634,
                    "000307397": 635,
                    "000307976": 636,
                    "000308080": 637,
                    "000308239": 638,
                    "000308856": 639,
                    "000309058": 640,
                    "000309244": 641,
                    "000309439": 642,
                    "000310521": 643,
                    "000311408": 644,
                    "000312278": 645,
                    "000313776": 646,
                    "000314377": 647,
                    "000314450": 648,
                    "000314968": 649,
                    "000315074": 650,
                    "000315792": 651,
                    "000316108": 652,
                    "000316113": 653,
                    "000316636": 654,
                    "000317392": 655,
                    "000317704": 656,
                    "000318044": 657,
                    "000318183": 658,
                    "000318978": 659,
                    "000319295": 660,
                    "000319354": 661,
                    "000319600": 662,
                    "000320780": 663,
                    "000320817": 664,
                    "000321012": 665,
                    "000321078": 666,
                    "000321477": 667,
                    "000321914": 668,
                    "000322056": 669,
                    "000322193": 670,
                    "000322326": 671,
                    "000322915": 672,
                    "000323118": 673,
                    "000323282": 674,
                    "000324253": 675,
                    "000324800": 676,
                    "000324939": 677,
                    "000325304": 678,
                    "000326195": 679,
                    "000326252": 680,
                    "000326273": 681,
                    "000326369": 682,
                    "000327372": 683,
                    "000327699": 684,
                    "000327758": 685,
                    "000328017": 686,
                    "000328366": 687,
                    "000329360": 688,
                    "000330774": 689,
                    "000331272": 690,
                    "000332164": 691,
                    "000334010": 692,
                    "000334186": 693,
                    "000334194": 694,
                    "000334755": 695,
                    "000335525": 696,
                    "000336512": 697,
                    "000336871": 698,
                    "000336908": 699,
                    "000336921": 700,
                    "000337206": 701,
                    "000337493": 702,
                    "000337807": 703,
                    "000337904": 704,
                    "000338012": 705,
                    "000338165": 706,
                    "000338480": 707,
                    "000339336": 708,
                    "000339473": 709,
                    "000339808": 710,
                    "000340640": 711,
                    "000340941": 712,
                    "000341162": 713,
                    "000341210": 714,
                    "000342034": 715,
                    "000342374": 716,
                    "000342816": 717,
                    "000343192": 718,
                    "000343293": 719,
                    "000343331": 720,
                    "000343340": 721,
                    "000343502": 722,
                    "000343982": 723,
                    "000344310": 724,
                    "000344567": 725,
                    "000344807": 726,
                    "000345015": 727,
                    "000345035": 728,
                    "000345696": 729,
                    "000345850": 730,
                    "000346198": 731,
                    "000346401": 732,
                    "000346421": 733,
                    "000346461": 734,
                    "000346787": 735,
                    "000346989": 736,
                    "000348020": 737,
                    "000348677": 738,
                    "000348967": 739,
                    "000349461": 740,
                    "000349732": 741,
                    "000349793": 742,
                    "000350489": 743,
                    "000350918": 744,
                    "000351347": 745,
                    "000352633": 746,
                    "000353303": 747,
                    "000353341": 748,
                    "000353388": 749,
                    "000353750": 750,
                    "000355325": 751,
                    "000355451": 752,
                    "000356095": 753,
                    "000356690": 754,
                    "000356819": 755,
                    "000358127": 756,
                    "000358370": 757,
                    "000358587": 758,
                    "000358940": 759,
                    "000359012": 760,
                    "000360333": 761,
                    "000360613": 762,
                    "000360785": 763,
                    "000361893": 764,
                    "000362943": 765,
                    "000363446": 766,
                    "000363610": 767,
                    "000363928": 768,
                    "000363951": 769,
                    "000365519": 770,
                    "000365527": 771,
                    "000366097": 772,
                    "000367199": 773,
                    "000368324": 774,
                    "000368801": 775,
                    "000368972": 776,
                    "000369197": 777,
                    "000369609": 778,
                    "000371544": 779,
                    "000372016": 780,
                    "000372532": 781,
                    "000373037": 782,
                    "000373075": 783,
                    "000373835": 784,
                    "000373870": 785,
                    "000374463": 786,
                    "000374489": 787,
                    "000375028": 788,
                    "000375077": 789,
                    "000376009": 790,
                    "000376521": 791,
                    "000377273": 792,
                    "000377392": 793,
                    "000377621": 794,
                    "000377682": 795,
                    "000378205": 796,
                    "000378257": 797,
                    "000378311": 798,
                    "000378711": 799,
                    "000380017": 800,
                    "000380222": 801,
                    "000380774": 802,
                    "000381654": 803,
                    "000382180": 804,
                    "000382948": 805,
                    "000383122": 806,
                    "000383604": 807,
                    "000383894": 808,
                    "000384014": 809,
                    "000385502": 810,
                    "000386015": 811,
                    "000386165": 812,
                    "000386509": 813,
                    "000387036": 814,
                    "000387626": 815,
                    "000387924": 816,
                    "000388254": 817,
                    "000388679": 818,
                    "000389007": 819,
                    "000391063": 820,
                    "000391347": 821,
                    "000391586": 822,
                    "000391742": 823,
                    "000391931": 824,
                    "000393369": 825,
                    "000393957": 826,
                    "000394156": 827,
                    "000394327": 828,
                    "000395030": 829,
                    "000395047": 830,
                    "000396500": 831,
                    "000396839": 832,
                    "000396860": 833,
                    "000397143": 834,
                    "000397178": 835,
                    "000397605": 836,
                    "000398307": 837,
                    "000398347": 838,
                    "000398732": 839,
                    "000400181": 840,
                    "000400340": 841,
                    "000400761": 842,
                    "000401551": 843,
                    "000402559": 844,
                    "000403044": 845,
                    "000403060": 846,
                    "000403098": 847,
                    "000403158": 848,
                    "000403694": 849,
                    "000403945": 850,
                    "000404467": 851,
                    "000406404": 852,
                    "000406567": 853,
                    "000407437": 854,
                    "000407449": 855,
                    "000407642": 856,
                    "000407706": 857,
                    "000408052": 858,
                    "000408374": 859,
                    "000408502": 860,
                    "000408920": 861,
                    "000409445": 862,
                    "000411708": 863,
                    "000412256": 864,
                    "000412598": 865,
                    "000414364": 866,
                    "000415652": 867,
                    "000416067": 868,
                    "000417270": 869,
                    "000417368": 870,
                    "000417402": 871,
                    "000417786": 872,
                    "000417848": 873,
                    "000418746": 874,
                    "000419734": 875,
                    "000422378": 876,
                    "000422549": 877,
                    "000422596": 878,
                    "000422698": 879,
                    "000422811": 880,
                    "000423337": 881,
                    "000423574": 882,
                    "000424457": 883,
                    "000424772": 884,
                    "000424875": 885,
                    "000424954": 886,
                    "000426170": 887,
                    "000426709": 888,
                    "000426745": 889,
                    "000426969": 890,
                    "000427564": 891,
                    "000428720": 892,
                    "000429155": 893,
                    "000429320": 894,
                    "000429495": 895,
                    "000429556": 896,
                    "000430090": 897,
                    "000430327": 898,
                    "000430403": 899,
                    "000431208": 900,
                    "000431494": 901,
                    "000431559": 902,
                    "000432551": 903,
                    "000432737": 904,
                    "000432879": 905,
                    "000433438": 906,
                    "000433682": 907,
                    "000433783": 908,
                    "000433821": 909,
                    "000434098": 910,
                    "000434455": 911,
                    "000434633": 912,
                    "000434848": 913,
                    "000436234": 914,
                    "000436274": 915,
                    "000436445": 916,
                    "000437422": 917,
                    "000437533": 918,
                    "000438182": 919,
                    "000439482": 920,
                    "000439770": 921,
                    "000440913": 922,
                    "000441616": 923,
                    "000443857": 924,
                    "000444051": 925,
                    "000444434": 926,
                    "000445741": 927,
                    "000446325": 928,
                    "000446375": 929,
                    "000446653": 930,
                    "000446819": 931,
                    "000446872": 932,
                    "000447911": 933,
                    "000448369": 934,
                    "000448914": 935,
                    "000449736": 936,
                    "000449910": 937,
                    "000450189": 938,
                    "000450552": 939,
                    "000450705": 940,
                    "000451507": 941,
                    "000451717": 942,
                    "000452372": 943,
                    "000453427": 944,
                    "000454799": 945,
                    "000455352": 946,
                    "000455534": 947,
                    "000455835": 948,
                    "000455844": 949,
                    "000456033": 950,
                    "000456701": 951,
                    "000456837": 952,
                    "000457148": 953,
                    "000457837": 954,
                    "000457926": 955,
                    "000459319": 956,
                    "000459610": 957,
                    "000461436": 958,
                    "000461552": 959,
                    "000461937": 960,
                    "000462018": 961,
                    "000462496": 962,
                    "000462499": 963,
                    "000462604": 964,
                    "000463040": 965,
                    "000463824": 966,
                    "000464108": 967,
                    "000464884": 968,
                    "000465107": 969,
                    "000465417": 970,
                    "000466167": 971,
                    "000466225": 972,
                    "000466717": 973,
                    "000467675": 974,
                    "000468294": 975,
                    "000468295": 976,
                    "000468758": 977,
                    "000468865": 978,
                    "000471699": 979,
                    "000471751": 980,
                    "000471946": 981,
                    "000472003": 982,
                    "000472656": 983,
                    "000472697": 984,
                    "000474172": 985,
                    "000474241": 986,
                    "000474315": 987,
                    "000475899": 988,
                    "000476038": 989,
                    "000477895": 990,
                    "000478801": 991,
                    "000478841": 992,
                    "000478891": 993,
                    "000479228": 994,
                    "000479867": 995,
                    "000480581": 996,
                    "000481057": 997,
                    "000481842": 998,
                    "000482100": 999,
                    "000482386": 1000,
                    "000482714": 1001,
                    "000482882": 1002,
                    "000483043": 1003,
                    "000483141": 1004,
                    "000484271": 1005,
                    "000484344": 1006,
                    "000484966": 1007,
                    "000487219": 1008,
                    "000487522": 1009,
                    "000487783": 1010,
                    "000487933": 1011,
                    "000491549": 1012,
                    "000492426": 1013,
                    "000492764": 1014,
                    "000493265": 1015,
                    "000493478": 1016,
                    "000496761": 1017,
                    "000497481": 1018,
                    "000498113": 1019,
                    "000498247": 1020,
                    "000498266": 1021,
                    "000498505": 1022,
                    "000499098": 1023,
                    "000499995": 1024,
                    "000501776": 1025,
                    "000502460": 1026,
                    "000502914": 1027,
                    "000503189": 1028,
                    "000503852": 1029,
                    "000504259": 1030,
                    "000504671": 1031,
                    "000504916": 1032,
                    "000506117": 1033,
                    "000507204": 1034,
                    "000509474": 1035,
                    "000509564": 1036,
                    "000510134": 1037,
                    "000510390": 1038,
                    "000510716": 1039,
                    "000510816": 1040,
                    "000510993": 1041,
                    "000511265": 1042,
                    "000511275": 1043,
                    "000511496": 1044,
                    "000513405": 1045,
                    "000514964": 1046,
                    "000516179": 1047,
                    "000516378": 1048,
                    "000517737": 1049,
                    "000518066": 1050,
                    "000518856": 1051,
                    "000518993": 1052,
                    "000519346": 1053,
                    "000519487": 1054,
                    "000519672": 1055,
                    "000520215": 1056,
                    "000521231": 1057,
                    "000521411": 1058,
                    "000523433": 1059,
                    "000523607": 1060,
                    "000523865": 1061,
                    "000524334": 1062,
                    "000525389": 1063,
                    "000525551": 1064,
                    "000526727": 1065,
                    "000526955": 1066,
                    "000527277": 1067,
                    "000528442": 1068,
                    "000528645": 1069,
                    "000528812": 1070,
                    "000530754": 1071,
                    "000532087": 1072,
                    "000533184": 1073,
                    "000533206": 1074,
                    "000533347": 1075,
                    "000534939": 1076,
                    "000535381": 1077,
                    "000535726": 1078,
                    "000535773": 1079,
                    "000536841": 1080,
                    "000537160": 1081,
                    "000537219": 1082,
                    "000537441": 1083,
                    "000538235": 1084,
                    "000538933": 1085,
                    "000539183": 1086,
                    "000539479": 1087,
                    "000540268": 1088,
                    "000541051": 1089,
                    "000542123": 1090,
                    "000542329": 1091,
                    "000543016": 1092,
                    "000543198": 1093,
                    "000544145": 1094,
                    "000544827": 1095,
                    "000545041": 1096,
                    "000545107": 1097,
                    "000545132": 1098,
                    "000545622": 1099,
                    "000546114": 1100,
                    "000546356": 1101,
                    "000547179": 1102,
                    "000547600": 1103,
                    "000549338": 1104,
                    "000549866": 1105,
                    "000550032": 1106,
                    "000551259": 1107,
                    "000551705": 1108,
                    "000552817": 1109,
                    "000553935": 1110,
                    "000554274": 1111,
                    "000554851": 1112,
                    "000554854": 1113,
                    "000554904": 1114,
                    "000555999": 1115,
                    "000556024": 1116,
                    "000556491": 1117,
                    "000556540": 1118,
                    "000556673": 1119,
                    "000557827": 1120,
                    "000558022": 1121,
                    "000558834": 1122,
                    "000559286": 1123,
                    "000559669": 1124,
                    "000560038": 1125,
                    "000560435": 1126,
                    "000561121": 1127,
                    "000561592": 1128,
                    "000561981": 1129,
                    "000562166": 1130,
                    "000562267": 1131,
                    "000562477": 1132,
                    "000563344": 1133,
                    "000563461": 1134,
                    "000563495": 1135,
                    "000564113": 1136,
                    "000564771": 1137,
                    "000564833": 1138,
                    "000565229": 1139,
                    "000565675": 1140,
                    "000566440": 1141,
                    "000566815": 1142,
                    "000567034": 1143,
                    "000567254": 1144,
                    "000567418": 1145,
                    "000567981": 1146,
                    "000568477": 1147,
                    "000568735": 1148,
                    "000569255": 1149,
                    "000569607": 1150,
                    "000569611": 1151,
                    "000570053": 1152,
                    "000570220": 1153,
                    "000570507": 1154,
                    "000570809": 1155,
                    "000571404": 1156,
                    "000572217": 1157,
                    "000575312": 1158,
                    "000575471": 1159,
                    "000576523": 1160,
                    "000576862": 1161,
                    "000577356": 1162,
                    "000577506": 1163,
                    "000577595": 1164,
                    "000578113": 1165,
                    "000578385": 1166,
                    "000578765": 1167,
                    "000579410": 1168,
                    "000580302": 1169,
                    "000580377": 1170,
                    "000580534": 1171,
                    "000580645": 1172,
                    "000581573": 1173,
                    "000581673": 1174,
                    "000581807": 1175,
                    "000582392": 1176,
                    "000582561": 1177,
                    "000583505": 1178,
                    "000584051": 1179,
                    "000585116": 1180,
                    "000585813": 1181,
                    "000585926": 1182,
                    "000586986": 1183,
                    "000587329": 1184,
                    "000587368": 1185,
                    "000588132": 1186,
                    "000590181": 1187,
                    "000591051": 1188,
                    "000591315": 1189,
                    "000591706": 1190,
                    "000591791": 1191,
                    "000593119": 1192,
                    "000593132": 1193,
                    "000593223": 1194,
                    "000593627": 1195,
                    "000593721": 1196,
                    "000593798": 1197,
                    "000594179": 1198,
                    "000594542": 1199,
                    "000594746": 1200,
                    "000595277": 1201,
                    "000595877": 1202,
                    "000595904": 1203,
                    "000596179": 1204,
                    "000596873": 1205,
                    "000597412": 1206,
                    "000598416": 1207,
                    "000598628": 1208,
                    "000599591": 1209,
                    "000601253": 1210,
                    "000601414": 1211,
                    "000601920": 1212,
                    "000602203": 1213,
                    "000602285": 1214,
                    "000602935": 1215,
                    "000603936": 1216,
                    "000604091": 1217,
                    "000604403": 1218,
                    "000604625": 1219,
                    "000604903": 1220,
                    "000605435": 1221,
                    "000606627": 1222,
                    "000606782": 1223,
                    "000607126": 1224,
                    "000608003": 1225,
                    "000608977": 1226,
                    "000609058": 1227,
                    "000609123": 1228,
                    "000609377": 1229,
                    "000609516": 1230,
                    "000610487": 1231,
                    "000611614": 1232,
                    "000611789": 1233,
                    "000612549": 1234,
                    "000612645": 1235,
                    "000613093": 1236,
                    "000613102": 1237,
                    "000613704": 1238,
                    "000613926": 1239,
                    "000614851": 1240,
                    "000615158": 1241,
                    "000615211": 1242,
                    "000615394": 1243,
                    "000615422": 1244,
                    "000615685": 1245,
                    "000616669": 1246,
                    "000616767": 1247,
                    "000617077": 1248,
                    "000617437": 1249,
                    "000617836": 1250,
                    "000618733": 1251,
                    "000618738": 1252,
                    "000619938": 1253,
                    "000619998": 1254,
                    "000620624": 1255,
                    "000621257": 1256,
                    "000621976": 1257,
                    "000622031": 1258,
                    "000622418": 1259,
                    "000622436": 1260,
                    "000622463": 1261,
                    "000624201": 1262,
                    "000624714": 1263,
                    "000624769": 1264,
                    "000625292": 1265,
                    "000625390": 1266,
                    "000625562": 1267,
                    "000625612": 1268,
                    "000626124": 1269,
                    "000626267": 1270,
                    "000626783": 1271,
                    "000627496": 1272,
                    "000628248": 1273,
                    "000629052": 1274,
                    "000629314": 1275,
                    "000630030": 1276,
                    "000630239": 1277,
                    "000630530": 1278,
                    "000630769": 1279,
                    "000630872": 1280,
                    "000631070": 1281,
                    "000632291": 1282,
                    "000632424": 1283,
                    "000632579": 1284,
                    "000632889": 1285,
                    "000633372": 1286,
                    "000634196": 1287,
                    "000635153": 1288,
                    "000635674": 1289,
                    "000636196": 1290,
                    "000636505": 1291,
                    "000636813": 1292,
                    "000639450": 1293,
                    "000639514": 1294,
                    "000639699": 1295,
                    "000640206": 1296,
                    "000640670": 1297,
                    "000640784": 1298,
                    "000642000": 1299,
                    "000642523": 1300,
                    "000643287": 1301,
                    "000643809": 1302,
                    "000644444": 1303,
                    "000645180": 1304,
                    "000646457": 1305,
                    "000649070": 1306,
                    "000650571": 1307,
                    "000651035": 1308,
                    "000652139": 1309,
                    "000652314": 1310,
                    "000652681": 1311,
                    "000653444": 1312,
                    "000654423": 1313,
                    "000654922": 1314,
                    "000655255": 1315,
                    "000655763": 1316,
                    "000656055": 1317,
                    "000656328": 1318,
                    "000657489": 1319,
                    "000657659": 1320,
                    "000657939": 1321,
                    "000658276": 1322,
                    "000658572": 1323,
                    "000659360": 1324,
                    "000660805": 1325,
                    "000661719": 1326,
                    "000661722": 1327,
                    "000661968": 1328,
                    "000662511": 1329,
                    "000662890": 1330,
                    "000664215": 1331,
                    "000664324": 1332,
                    "000664594": 1333,
                    "000664967": 1334,
                    "000665293": 1335,
                    "000666110": 1336,
                    "000666350": 1337,
                    "000666898": 1338,
                    "000668156": 1339,
                    "000668180": 1340,
                    "000668681": 1341,
                    "000669847": 1342,
                    "000670718": 1343,
                    "000671616": 1344,
                    "000671783": 1345,
                    "000671953": 1346,
                    "000673173": 1347,
                    "000673820": 1348,
                    "000673995": 1349,
                    "000674009": 1350,
                    "000674030": 1351,
                    "000674143": 1352,
                    "000674404": 1353,
                    "000675095": 1354,
                    "000675294": 1355,
                    "000675885": 1356,
                    "000676226": 1357,
                    "000679704": 1358,
                    "000680477": 1359,
                    "000680768": 1360,
                    "000681310": 1361,
                    "000681475": 1362,
                    "000682204": 1363,
                    "000682594": 1364,
                    "000682896": 1365,
                    "000683202": 1366,
                    "000683522": 1367,
                    "000684227": 1368,
                    "000684652": 1369,
                    "000685023": 1370,
                    "000685459": 1371,
                    "000686292": 1372,
                    "000686554": 1373,
                    "000687600": 1374,
                    "000687895": 1375,
                    "000688535": 1376,
                    "000688889": 1377,
                    "000689459": 1378,
                    "000690999": 1379,
                    "000691484": 1380,
                    "000691767": 1381,
                    "000692363": 1382,
                    "000692764": 1383,
                    "000693046": 1384,
                    "000694988": 1385,
                    "000696462": 1386,
                    "000698586": 1387,
                    "000698654": 1388,
                    "000699603": 1389,
                    "000700278": 1390,
                    "000700368": 1391,
                    "000701216": 1392,
                    "000701426": 1393,
                    "000701611": 1394,
                    "000701673": 1395,
                    "000701727": 1396,
                    "000702585": 1397,
                    "000702711": 1398,
                    "000702742": 1399,
                    "000703116": 1400,
                    "000703585": 1401,
                    "000703772": 1402,
                    "000704638": 1403,
                    "000705021": 1404,
                    "000705159": 1405,
                    "000705800": 1406,
                    "000706584": 1407,
                    "000707977": 1408,
                    "000708860": 1409,
                    "000711816": 1410,
                    "000712970": 1411,
                    "000713123": 1412,
                    "000713398": 1413,
                    "000713598": 1414,
                    "000713935": 1415,
                    "000715550": 1416,
                    "000716647": 1417,
                    "000717415": 1418,
                    "000717637": 1419,
                    "000717658": 1420,
                    "000718270": 1421,
                    "000718295": 1422,
                    "000718875": 1423,
                    "000719259": 1424,
                    "000720040": 1425,
                    "000720519": 1426,
                    "000720978": 1427,
                    "000722036": 1428,
                    "000723909": 1429,
                    "000723981": 1430,
                    "000724236": 1431,
                    "000724453": 1432,
                    "000724480": 1433,
                    "000724509": 1434,
                    "000724987": 1435,
                    "000725017": 1436,
                    "000725031": 1437,
                    "000726079": 1438,
                    "000726384": 1439,
                    "000726716": 1440,
                    "000726979": 1441,
                    "000727574": 1442,
                    "000728111": 1443,
                    "000730381": 1444,
                    "000730930": 1445,
                    "000731116": 1446,
                    "000731134": 1447,
                    "000731801": 1448,
                    "000731883": 1449,
                    "000732794": 1450,
                    "000732822": 1451,
                    "000734303": 1452,
                    "000734876": 1453,
                    "000735174": 1454,
                    "000736384": 1455,
                    "000736771": 1456,
                    "000737457": 1457,
                    "000738036": 1458,
                    "000738105": 1459,
                    "000738235": 1460,
                    "000740468": 1461,
                    "000740805": 1462,
                    "000740868": 1463,
                    "000740874": 1464,
                    "000740941": 1465,
                    "000741987": 1466,
                    "000742056": 1467,
                    "000743313": 1468,
                    "000743551": 1469,
                    "000743799": 1470,
                    "000744331": 1471,
                    "000745659": 1472,
                    "000745728": 1473,
                    "000745836": 1474,
                    "000746167": 1475,
                    "000746496": 1476,
                    "000747174": 1477,
                    "000747189": 1478,
                    "000747429": 1479,
                    "000748190": 1480,
                    "000749354": 1481,
                    "000749536": 1482,
                    "000749605": 1483,
                    "000749614": 1484,
                    "000749896": 1485,
                    "000750348": 1486,
                    "000750382": 1487,
                    "000751373": 1488,
                    "000751501": 1489,
                    "000752025": 1490,
                    "000752423": 1491,
                    "000752930": 1492,
                    "000753564": 1493,
                    "000753566": 1494,
                    "000753586": 1495,
                    "000753844": 1496,
                    "000754327": 1497,
                    "000754427": 1498,
                    "000754817": 1499,
                    "000755433": 1500,
                    "000756749": 1501,
                    "000757842": 1502,
                    "000758192": 1503,
                    "000758375": 1504,
                    "000758722": 1505,
                    "000758792": 1506,
                    "000759746": 1507,
                    "000760286": 1508,
                    "000760442": 1509,
                    "000760957": 1510,
                    "000761766": 1511,
                    "000761993": 1512,
                    "000762314": 1513,
                    "000763741": 1514,
                    "000764507": 1515,
                    "000765680": 1516,
                    "000765886": 1517,
                    "000766046": 1518,
                    "000766068": 1519,
                    "000767278": 1520,
                    "000767316": 1521,
                    "000767516": 1522,
                    "000767761": 1523,
                    "000767871": 1524,
                    "000768004": 1525,
                    "000768127": 1526,
                    "000768239": 1527,
                    "000768395": 1528,
                    "000768861": 1529,
                    "000769222": 1530,
                    "000770362": 1531,
                    "000770801": 1532,
                    "000771084": 1533,
                    "000771520": 1534,
                    "000771766": 1535,
                    "000772216": 1536,
                    "000772885": 1537,
                    "000773673": 1538,
                    "000774244": 1539,
                    "000774478": 1540,
                    "000775070": 1541,
                    "000775438": 1542,
                    "000776702": 1543,
                    "000776745": 1544,
                    "000776760": 1545,
                    "000777000": 1546,
                    "000777077": 1547,
                    "000777138": 1548,
                    "000777655": 1549,
                    "000778788": 1550,
                    "000778905": 1551,
                    "000779314": 1552,
                    "000779358": 1553,
                    "000779887": 1554,
                    "000781025": 1555,
                    "000781214": 1556,
                    "000781740": 1557,
                    "000782308": 1558,
                    "000782732": 1559,
                    "000783228": 1560,
                    "000783644": 1561,
                    "000783663": 1562,
                    "000784051": 1563,
                    "000784544": 1564,
                    "000784578": 1565,
                    "000784925": 1566,
                    "000786044": 1567,
                    "000786149": 1568,
                    "000786204": 1569,
                    "000786284": 1570,
                    "000786833": 1571,
                    "000788065": 1572,
                    "000788385": 1573,
                    "000788943": 1574,
                    "000789095": 1575,
                    "000789313": 1576,
                    "000789753": 1577,
                    "000790140": 1578,
                    "000790189": 1579,
                    "000790515": 1580,
                    "000790973": 1581,
                    "000791315": 1582,
                    "000793694": 1583,
                    "000793697": 1584,
                    "000793719": 1585,
                    "000794023": 1586,
                    "000794235": 1587,
                    "000794408": 1588,
                    "000794915": 1589,
                    "000796414": 1590,
                    "000796472": 1591,
                    "000798463": 1592,
                    "000798498": 1593,
                    "000798583": 1594,
                    "000799831": 1595,
                    "000800031": 1596,
                    "000800300": 1597,
                    "000800712": 1598,
                    "000800823": 1599,
                    "000800872": 1600,
                    "000801418": 1601,
                    "000802168": 1602,
                    "000802222": 1603,
                    "000802376": 1604,
                    "000803075": 1605,
                    "000803113": 1606,
                    "000803589": 1607,
                    "000804281": 1608,
                    "000805408": 1609,
                    "000806459": 1610,
                    "000806982": 1611,
                    "000807070": 1612,
                    "000807269": 1613,
                    "000808299": 1614,
                    "000808926": 1615,
                    "000810211": 1616,
                    "000810960": 1617,
                    "000810983": 1618,
                    "000811059": 1619,
                    "000811257": 1620,
                    "000811479": 1621,
                    "000812313": 1622,
                    "000812505": 1623,
                    "000812844": 1624,
                    "000813845": 1625,
                    "000814309": 1626,
                    "000814346": 1627,
                    "000814915": 1628,
                    "000815033": 1629,
                    "000815960": 1630,
                    "000816348": 1631,
                    "000816798": 1632,
                    "000817334": 1633,
                    "000818186": 1634,
                    "000818400": 1635,
                    "000819562": 1636,
                    "000819807": 1637,
                    "000819847": 1638,
                    "000821382": 1639,
                    "000822614": 1640,
                    "000822947": 1641,
                    "000824016": 1642,
                    "000825207": 1643,
                    "000825408": 1644,
                    "000825839": 1645,
                    "000826652": 1646,
                    "000826735": 1647,
                    "000827612": 1648,
                    "000827847": 1649,
                    "000828003": 1650,
                    "000828318": 1651,
                    "000828721": 1652,
                    "000829628": 1653,
                    "000829705": 1654,
                    "000829831": 1655,
                    "000830679": 1656,
                    "000830963": 1657,
                    "000831148": 1658,
                    "000831612": 1659,
                    "000831757": 1660,
                    "000832436": 1661,
                    "000832769": 1662,
                    "000832839": 1663,
                    "000833128": 1664,
                    "000833433": 1665,
                    "000833580": 1666,
                    "000833889": 1667,
                    "000834032": 1668,
                    "000834779": 1669,
                    "000835028": 1670,
                    "000835186": 1671,
                    "000835260": 1672,
                    "000836286": 1673,
                    "000836392": 1674,
                    "000836955": 1675,
                    "000837381": 1676,
                    "000838679": 1677,
                    "000838860": 1678,
                    "000839081": 1679,
                    "000839428": 1680,
                    "000839566": 1681,
                    "000839996": 1682,
                    "000840588": 1683,
                    "000841707": 1684,
                    "000843414": 1685,
                    "000843945": 1686,
                    "000844146": 1687,
                    "000844540": 1688,
                    "000844996": 1689,
                    "000846013": 1690,
                    "000846923": 1691,
                    "000847014": 1692,
                    "000847439": 1693,
                    "000847566": 1694,
                    "000848523": 1695,
                    "000849027": 1696,
                    "000849370": 1697,
                    "000849689": 1698,
                    "000850492": 1699,
                    "000852453": 1700,
                    "000853048": 1701,
                    "000853416": 1702,
                    "000853461": 1703,
                    "000853867": 1704,
                    "000854046": 1705,
                    "000854609": 1706,
                    "000854670": 1707,
                    "000856018": 1708,
                    "000856310": 1709,
                    "000856481": 1710,
                    "000859036": 1711,
                    "000859415": 1712,
                    "000859499": 1713,
                    "000859838": 1714,
                    "000860626": 1715,
                    "000860803": 1716,
                    "000861011": 1717,
                    "000861715": 1718,
                    "000862337": 1719,
                    "000862410": 1720,
                    "000862530": 1721,
                    "000862686": 1722,
                    "000863326": 1723,
                    "000863780": 1724,
                    "000864563": 1725,
                    "000865321": 1726,
                    "000865523": 1727,
                    "000868152": 1728,
                    "000868640": 1729,
                    "000868975": 1730,
                    "000868977": 1731,
                    "000869120": 1732,
                    "000869191": 1733,
                    "000869490": 1734,
                    "000870340": 1735,
                    "000871662": 1736,
                    "000873073": 1737,
                    "000873363": 1738,
                    "000873637": 1739,
                    "000873646": 1740,
                    "000873733": 1741,
                    "000873828": 1742,
                    "000875084": 1743,
                    "000875306": 1744,
                    "000875497": 1745,
                    "000875679": 1746,
                    "000876247": 1747,
                    "000877948": 1748,
                    "000878028": 1749,
                    "000878893": 1750,
                    "000879964": 1751,
                    "000880382": 1752,
                    "000880519": 1753,
                    "000881015": 1754,
                    "000881066": 1755,
                    "000882728": 1756,
                    "000882762": 1757,
                    "000883633": 1758,
                    "000884062": 1759,
                    "000884244": 1760,
                    "000884485": 1761,
                    "000884940": 1762,
                    "000885036": 1763,
                    "000885432": 1764,
                    "000885565": 1765,
                    "000886084": 1766,
                    "000886241": 1767,
                    "000886911": 1768,
                    "000886980": 1769,
                    "000887005": 1770,
                    "000887036": 1771,
                    "000887183": 1772,
                    "000888149": 1773,
                    "000888458": 1774,
                    "000888604": 1775,
                    "000889080": 1776,
                    "000889250": 1777,
                    "000889659": 1778,
                    "000889769": 1779,
                    "000890264": 1780,
                    "000890336": 1781,
                    "000891750": 1782,
                    "000893113": 1783,
                    "000893880": 1784,
                    "000894080": 1785,
                    "000894589": 1786,
                    "000895702": 1787,
                    "000896096": 1788,
                    "000896118": 1789,
                    "000896199": 1790,
                    "000896308": 1791,
                    "000897138": 1792,
                    "000897801": 1793,
                    "000897906": 1794,
                    "000897909": 1795,
                    "000898157": 1796,
                    "000899298": 1797,
                    "000899527": 1798,
                    "000899861": 1799,
                    "000900068": 1800,
                    "000900773": 1801,
                    "000900803": 1802,
                    "000901298": 1803,
                    "000901530": 1804,
                    "000902780": 1805,
                    "000902872": 1806,
                    "000905490": 1807,
                    "000906509": 1808,
                    "000906554": 1809,
                    "000908088": 1810,
                    "000908571": 1811,
                    "000909998": 1812,
                    "000910458": 1813,
                    "000911009": 1814,
                    "000911632": 1815,
                    "000911798": 1816,
                    "000912826": 1817,
                    "000912881": 1818,
                    "000913770": 1819,
                    "000914273": 1820,
                    "000914274": 1821,
                    "000914455": 1822,
                    "000916896": 1823,
                    "000917367": 1824,
                    "000917591": 1825,
                    "000917893": 1826,
                    "000917976": 1827,
                    "000919220": 1828,
                    "000919382": 1829,
                    "000919484": 1830,
                    "000919518": 1831,
                    "000920089": 1832,
                    "000920480": 1833,
                    "000921234": 1834,
                    "000922024": 1835,
                    "000922228": 1836,
                    "000922743": 1837,
                    "000924369": 1838,
                    "000925248": 1839,
                    "000925570": 1840,
                    "000925914": 1841,
                    "000926015": 1842,
                    "000926016": 1843,
                    "000926187": 1844,
                    "000927040": 1845,
                    "000927099": 1846,
                    "000927619": 1847,
                    "000927758": 1848,
                    "000928093": 1849,
                    "000929348": 1850,
                    "000929699": 1851,
                    "000929912": 1852,
                    "000930940": 1853,
                    "000932040": 1854,
                    "000933052": 1855,
                    "000934293": 1856,
                    "000934639": 1857,
                    "000935032": 1858,
                    "000935516": 1859,
                    "000936386": 1860,
                    "000936723": 1861,
                    "000936928": 1862,
                    "000937275": 1863,
                    "000937704": 1864,
                    "000938137": 1865,
                    "000938208": 1866,
                    "000939242": 1867,
                    "000939838": 1868,
                    "000939860": 1869,
                    "000939956": 1870,
                    "000940693": 1871,
                    "000940761": 1872,
                    "000940866": 1873,
                    "000941856": 1874,
                    "000942746": 1875,
                    "000942996": 1876,
                    "000943281": 1877,
                    "000943537": 1878,
                    "000943962": 1879,
                    "000944687": 1880,
                    "000945891": 1881,
                    "000946453": 1882,
                    "000946549": 1883,
                    "000947097": 1884,
                    "000947658": 1885,
                    "000947825": 1886,
                    "000948561": 1887,
                    "000949073": 1888,
                    "000949512": 1889,
                    "000949849": 1890,
                    "000950698": 1891,
                    "000950980": 1892,
                    "000951224": 1893,
                    "000951587": 1894,
                    "000951818": 1895,
                    "000951983": 1896,
                    "000954111": 1897,
                    "000954443": 1898,
                    "000954716": 1899,
                    "000955424": 1900,
                    "000956508": 1901,
                    "000956868": 1902,
                    "000957556": 1903,
                    "000957619": 1904,
                    "000957644": 1905,
                    "000959753": 1906,
                    "000959895": 1907,
                    "000960506": 1908,
                    "000960994": 1909,
                    "000961326": 1910,
                    "000961681": 1911,
                    "000961804": 1912,
                    "000962012": 1913,
                    "000962603": 1914,
                    "000964028": 1915,
                    "000964034": 1916,
                    "000964140": 1917,
                    "000964964": 1918,
                    "000965047": 1919,
                    "000965177": 1920,
                    "000965648": 1921,
                    "000965792": 1922,
                    "000965890": 1923,
                    "000966329": 1924,
                    "000966406": 1925,
                    "000966827": 1926,
                    "000966936": 1927,
                    "000966987": 1928,
                    "000968073": 1929,
                    "000968860": 1930,
                    "000968874": 1931,
                    "000968892": 1932,
                    "000969340": 1933,
                    "000969942": 1934,
                    "000970250": 1935,
                    "000970939": 1936,
                    "000972345": 1937,
                    "000972587": 1938,
                    "000972899": 1939,
                    "000973257": 1940,
                    "000973348": 1941,
                    "000974195": 1942,
                    "000975087": 1943,
                    "000975338": 1944,
                    "000975382": 1945,
                    "000976182": 1946,
                    "000976983": 1947,
                    "000978330": 1948,
                    "000978507": 1949,
                    "000979394": 1950,
                    "000979599": 1951,
                    "000979847": 1952,
                    "000980930": 1953,
                    "000981022": 1954,
                    "000981406": 1955,
                    "000981830": 1956,
                    "000981905": 1957,
                    "000982261": 1958,
                    "000982435": 1959,
                    "000983129": 1960,
                    "000983279": 1961,
                    "000983613": 1962,
                    "000983883": 1963,
                    "000985060": 1964,
                    "000985165": 1965,
                    "000985261": 1966,
                    "000985663": 1967,
                    "000985950": 1968,
                    "000986004": 1969,
                    "000987158": 1970,
                    "000987496": 1971,
                    "000988127": 1972,
                    "000989855": 1973,
                    "000989949": 1974,
                    "000991137": 1975,
                    "000991160": 1976,
                    "000991933": 1977,
                    "000991945": 1978,
                    "000993827": 1979,
                    "000993952": 1980,
                    "000994964": 1981,
                    "000995229": 1982,
                    "000995469": 1983,
                    "000996226": 1984,
                    "000996563": 1985,
                    "000996991": 1986,
                    "000997726": 1987,
                    "000998027": 1988,
                    "000998799": 1989,
                    "000998806": 1990,
                    "000998979": 1991,
                    "000999097": 1992,
                    "000999374": 1993,
                    "000999766": 1994,
                    "000999816": 1995,
                    "000999873": 1996,
                    "001000169": 1997,
                    "001000497": 1998,
                    "001001249": 1999,
                    "001001261": 2000,
                    "001001677": 2001,
                    "001003544": 2002,
                    "001004382": 2003,
                    "001004763": 2004,
                    "001004885": 2005,
                    "001005375": 2006,
                    "001005899": 2007,
                    "001007138": 2008,
                    "001008874": 2009,
                    "001010040": 2010,
                    "001010213": 2011,
                    "001010918": 2012,
                    "001011629": 2013,
                    "001011724": 2014,
                    "001012967": 2015,
                    "001013947": 2016,
                    "001014386": 2017,
                    "001014596": 2018,
                    "001014908": 2019,
                    "001015495": 2020,
                    "001016316": 2021,
                    "001017065": 2022,
                    "001017488": 2023,
                    "001018422": 2024,
                    "001019240": 2025,
                    "001019784": 2026,
                    "001019827": 2027,
                    "001020287": 2028,
                    "001023553": 2029,
                    "001023734": 2030,
                    "001025098": 2031,
                    "001025134": 2032,
                    "001025614": 2033,
                    "001026634": 2034,
                    "001027299": 2035,
                    "001027757": 2036,
                    "001027826": 2037,
                    "001027940": 2038,
                    "001028310": 2039,
                    "001029137": 2040,
                    "001029804": 2041,
                    "001030844": 2042,
                    "001031268": 2043,
                    "001031502": 2044,
                    "001031893": 2045,
                    "001031996": 2046,
                    "001032169": 2047,
                    "001032532": 2048,
                    "001032626": 2049,
                    "001033030": 2050,
                    "001033200": 2051,
                    "001035446": 2052,
                    "001035766": 2053,
                    "001037465": 2054,
                    "001037765": 2055,
                    "001038375": 2056,
                    "001038413": 2057,
                    "001038488": 2058,
                    "001039534": 2059,
                    "001039905": 2060,
                    "001040201": 2061,
                    "001040692": 2062,
                    "001041687": 2063,
                    "001042163": 2064,
                    "001042559": 2065,
                    "001043549": 2066,
                    "001043740": 2067,
                    "001044241": 2068,
                    "001045144": 2069,
                    "001046404": 2070,
                    "001047221": 2071,
                    "001047582": 2072,
                    "001047605": 2073,
                    "001047718": 2074,
                    "001047858": 2075,
                    "001049047": 2076,
                    "001049432": 2077,
                    "001049519": 2078,
                    "001049619": 2079,
                    "001050255": 2080,
                    "001050903": 2081,
                    "001051094": 2082,
                    "001051385": 2083,
                    "001052227": 2084,
                    "001052246": 2085,
                    "001052630": 2086,
                    "001052825": 2087,
                    "001053174": 2088,
                    "001054277": 2089,
                    "001054669": 2090,
                    "001055697": 2091,
                    "001055813": 2092,
                    "001056365": 2093,
                    "001056559": 2094,
                    "001057237": 2095,
                    "001057273": 2096,
                    "001057785": 2097,
                    "001057825": 2098,
                    "001058289": 2099,
                    "001058753": 2100,
                    "001059762": 2101,
                    "001059816": 2102,
                    "001060234": 2103,
                    "001060631": 2104,
                    "001060922": 2105,
                    "001061219": 2106,
                    "001061843": 2107,
                    "001061895": 2108,
                    "001062516": 2109,
                    "001062531": 2110,
                    "001062928": 2111,
                    "001063465": 2112,
                    "001063934": 2113,
                    "001063941": 2114,
                    "001064658": 2115,
                    "001065239": 2116,
                    "001067854": 2117,
                    "001068238": 2118,
                    "001068658": 2119,
                    "001069444": 2120,
                    "001069699": 2121,
                    "001070525": 2122,
                    "001070572": 2123,
                    "001071558": 2124,
                    "001071767": 2125,
                    "001071961": 2126,
                    "001072096": 2127,
                    "001073522": 2128,
                    "001073604": 2129,
                    "001073615": 2130,
                    "001074806": 2131,
                    "001074990": 2132,
                    "001075003": 2133,
                    "001075036": 2134,
                    "001075042": 2135,
                    "001075188": 2136,
                    "001075320": 2137,
                    "001075327": 2138,
                    "001077088": 2139,
                    "001077302": 2140,
                    "001077345": 2141,
                    "001077400": 2142,
                    "001077599": 2143,
                    "001077837": 2144,
                    "001077887": 2145,
                    "001079292": 2146,
                    "001079741": 2147,
                    "001079962": 2148,
                    "001080118": 2149,
                    "001080154": 2150,
                    "001080896": 2151,
                    "001081661": 2152,
                    "001081938": 2153,
                    "001082443": 2154,
                    "001083432": 2155,
                    "001083494": 2156,
                    "001083635": 2157,
                    "001083918": 2158,
                    "001084047": 2159,
                    "001084312": 2160,
                    "001086104": 2161,
                    "001086829": 2162,
                    "001087199": 2163,
                    "001087229": 2164,
                    "001087436": 2165,
                    "001088349": 2166,
                    "001088615": 2167,
                    "001088684": 2168,
                    "001089189": 2169,
                    "001089489": 2170,
                    "001089568": 2171,
                    "001089850": 2172,
                    "001090306": 2173,
                    "001090422": 2174,
                    "001091736": 2175,
                    "001092075": 2176,
                    "001092489": 2177,
                    "001093174": 2178,
                    "001093914": 2179,
                    "001093962": 2180,
                    "001094527": 2181,
                    "001094754": 2182,
                    "001095310": 2183,
                    "001095741": 2184,
                    "001096144": 2185,
                    "001096161": 2186,
                    "001096930": 2187,
                    "001097358": 2188,
                    "001097591": 2189,
                    "001098220": 2190,
                    "001098226": 2191,
                    "001098697": 2192,
                    "001098897": 2193,
                    "001099310": 2194,
                    "001099618": 2195,
                    "001100543": 2196,
                    "001101729": 2197,
                    "001101874": 2198,
                    "001102266": 2199,
                    "001103634": 2200,
                    "001103929": 2201,
                    "001104449": 2202,
                    "001106149": 2203,
                    "001106844": 2204,
                    "001107877": 2205,
                    "001109456": 2206,
                    "001109525": 2207,
                    "001110645": 2208,
                    "001110716": 2209,
                    "001110743": 2210,
                    "001111031": 2211,
                    "001111659": 2212,
                    "001111775": 2213,
                    "001111982": 2214,
                    "001112944": 2215,
                    "001113202": 2216,
                    "001114533": 2217,
                    "001116470": 2218,
                    "001117232": 2219,
                    "001117663": 2220,
                    "001118196": 2221,
                    "001119155": 2222,
                    "001119164": 2223,
                    "001119529": 2224,
                    "001119709": 2225,
                    "001119729": 2226,
                    "001119775": 2227,
                    "001120068": 2228,
                    "001120619": 2229,
                    "001121245": 2230,
                    "001121879": 2231,
                    "001122174": 2232,
                    "001122262": 2233,
                    "001122409": 2234,
                    "001123625": 2235,
                    "001124892": 2236,
                    "001126053": 2237,
                    "001126410": 2238,
                    "001126879": 2239,
                    "001126960": 2240,
                    "001127315": 2241,
                    "001127351": 2242,
                    "001127396": 2243,
                    "001127494": 2244,
                    "001128111": 2245,
                    "001128160": 2246,
                    "001128290": 2247,
                    "001128503": 2248,
                    "001129123": 2249,
                    "001129266": 2250,
                    "001129374": 2251,
                    "001129837": 2252,
                    "001130108": 2253,
                    "001130330": 2254,
                    "001130964": 2255,
                    "001131139": 2256,
                    "001131755": 2257,
                    "001131787": 2258,
                    "001132385": 2259,
                    "001132501": 2260,
                    "001133122": 2261,
                    "001134145": 2262,
                    "001134329": 2263,
                    "001134804": 2264,
                    "001135169": 2265,
                    "001135298": 2266,
                    "001135818": 2267,
                    "001136580": 2268,
                    "001136693": 2269,
                    "001138131": 2270,
                    "001138783": 2271,
                    "001139988": 2272,
                    "001140740": 2273,
                    "001141674": 2274,
                    "001142788": 2275,
                    "001144124": 2276,
                    "001144280": 2277,
                    "001144712": 2278,
                    "001144899": 2279,
                    "001145102": 2280,
                    "001145372": 2281,
                    "001145503": 2282,
                    "001145558": 2283,
                    "001145923": 2284,
                    "001148541": 2285,
                    "001149257": 2286,
                    "001149455": 2287,
                    "001149590": 2288,
                    "001149811": 2289,
                    "001150873": 2290,
                    "001151036": 2291,
                    "001151379": 2292,
                    "001151850": 2293,
                    "001151987": 2294,
                    "001152145": 2295,
                    "001152234": 2296,
                    "001153329": 2297,
                    "001153492": 2298,
                    "001153853": 2299,
                    "001153915": 2300,
                    "001154286": 2301,
                    "001154937": 2302,
                    "001155429": 2303,
                    "001155789": 2304,
                    "001156527": 2305,
                    "001157417": 2306,
                    "001157450": 2307,
                    "001158147": 2308,
                    "001158194": 2309,
                    "001158301": 2310,
                    "001158314": 2311,
                    "001158317": 2312,
                    "001158832": 2313,
                    "001159198": 2314,
                    "001159597": 2315,
                    "001160241": 2316,
                    "001161772": 2317,
                    "001161900": 2318,
                    "001163085": 2319,
                    "001163165": 2320,
                    "001163836": 2321,
                    "001163847": 2322,
                    "001164731": 2323,
                    "001165079": 2324,
                    "001165175": 2325,
                    "001165584": 2326,
                    "001165656": 2327,
                    "001166079": 2328,
                    "001166581": 2329,
                    "001167506": 2330,
                    "001167544": 2331,
                    "001168261": 2332,
                    "001168411": 2333,
                    "001168652": 2334,
                    "001168841": 2335,
                    "001169037": 2336,
                    "001169195": 2337,
                    "001169315": 2338,
                    "001170934": 2339,
                    "001171362": 2340,
                    "001172035": 2341,
                    "001172294": 2342,
                    "001173124": 2343,
                    "001174032": 2344,
                    "001174536": 2345,
                    "001174672": 2346,
                    "001174911": 2347,
                    "001175316": 2348,
                    "001175435": 2349,
                    "001175442": 2350,
                    "001175915": 2351,
                    "001176333": 2352,
                    "001176803": 2353,
                    "001177377": 2354,
                    "001177529": 2355,
                    "001177556": 2356,
                    "001177638": 2357,
                    "001177674": 2358,
                    "001177803": 2359,
                    "001178651": 2360,
                    "001178972": 2361,
                    "001179183": 2362,
                    "001179312": 2363,
                    "001179640": 2364,
                    "001179663": 2365,
                    "001180491": 2366,
                    "001181289": 2367,
                    "001181744": 2368,
                    "001182223": 2369,
                    "001182969": 2370,
                    "001183595": 2371,
                    "001183924": 2372,
                    "001183961": 2373,
                    "001184253": 2374,
                    "001184918": 2375,
                    "001185260": 2376,
                    "001185760": 2377,
                    "001188338": 2378,
                    "001188422": 2379,
                    "001189581": 2380,
                    "001190896": 2381,
                    "001190973": 2382,
                    "001191325": 2383,
                    "001192384": 2384,
                    "001192534": 2385,
                    "001192739": 2386,
                    "001193803": 2387,
                    "001193991": 2388,
                    "001194111": 2389,
                    "001194131": 2390,
                    "001194329": 2391,
                    "001194890": 2392,
                    "001196545": 2393,
                    "001197165": 2394,
                    "001197337": 2395,
                    "001198246": 2396,
                    "001198319": 2397,
                    "001198762": 2398,
                    "001199101": 2399,
                    "001199304": 2400,
                    "001200670": 2401,
                    "001200890": 2402,
                    "001201037": 2403,
                    "001202254": 2404,
                    "001202522": 2405,
                    "001202650": 2406,
                    "001202908": 2407,
                    "001203178": 2408,
                    "001203703": 2409,
                    "001203833": 2410,
                    "001204283": 2411,
                    "001204483": 2412,
                    "001204705": 2413,
                    "001204736": 2414,
                    "001204935": 2415,
                    "001205905": 2416,
                    "001207223": 2417,
                    "001207708": 2418,
                    "001208445": 2419,
                    "001208600": 2420,
                    "001208762": 2421,
                    "001208770": 2422,
                    "001208804": 2423,
                    "001208983": 2424,
                    "001209138": 2425,
                    "001209632": 2426,
                    "001209800": 2427,
                    "001210043": 2428,
                    "001210103": 2429,
                    "001210860": 2430,
                    "001211742": 2431,
                    "001212084": 2432,
                    "001212601": 2433,
                    "001213158": 2434,
                    "001213194": 2435,
                    "001213512": 2436,
                    "001213536": 2437,
                    "001213786": 2438,
                    "001214380": 2439,
                    "001214792": 2440,
                    "001215435": 2441,
                    "001216168": 2442,
                    "001216177": 2443,
                    "001216875": 2444,
                    "001217132": 2445,
                    "001217961": 2446,
                    "001218661": 2447,
                    "001219226": 2448,
                    "001220344": 2449,
                    "001220768": 2450,
                    "001221232": 2451,
                    "001221481": 2452,
                    "001221956": 2453,
                    "001222067": 2454,
                    "001222656": 2455,
                    "001223030": 2456,
                    "001223307": 2457,
                    "001223928": 2458,
                    "001224866": 2459,
                    "001224880": 2460,
                    "001224946": 2461,
                    "001225017": 2462,
                    "001225437": 2463,
                    "001225911": 2464,
                    "001226355": 2465,
                    "001226821": 2466,
                    "001226826": 2467,
                    "001226872": 2468,
                    "001227031": 2469,
                    "001228332": 2470,
                    "001228982": 2471,
                    "001229250": 2472,
                    "001229439": 2473,
                    "001230328": 2474,
                    "001230594": 2475,
                    "001231756": 2476,
                    "001231970": 2477,
                    "001232070": 2478,
                    "001232780": 2479,
                    "001232945": 2480,
                    "001233433": 2481,
                    "001233990": 2482,
                    "001234029": 2483,
                    "001234895": 2484,
                    "001235604": 2485,
                    "001236109": 2486,
                    "001236317": 2487,
                    "001236881": 2488,
                    "001237036": 2489,
                    "001237490": 2490,
                    "001238724": 2491,
                    "001239655": 2492,
                    "001240085": 2493,
                    "001240612": 2494,
                    "001240671": 2495,
                    "001240906": 2496,
                    "001241780": 2497,
                    "001241989": 2498,
                    "001242649": 2499,
                    "001243350": 2500,
                    "001244449": 2501,
                    "001246331": 2502,
                    "001246860": 2503,
                    "001249269": 2504,
                    "001250186": 2505,
                    "001251337": 2506,
                    "001251378": 2507,
                    "001251598": 2508,
                    "001252313": 2509,
                    "001252324": 2510,
                    "001254008": 2511,
                    "001254062": 2512,
                    "001254083": 2513,
                    "001254363": 2514,
                    "001254789": 2515,
                    "001255311": 2516,
                    "001255913": 2517,
                    "001256354": 2518,
                    "001256502": 2519,
                    "001256752": 2520,
                    "001257928": 2521,
                    "001258088": 2522,
                    "001258468": 2523,
                    "001258895": 2524,
                    "001259142": 2525,
                    "001259182": 2526,
                    "001259487": 2527,
                    "001260222": 2528,
                    "001260391": 2529,
                    "001260470": 2530,
                    "001260805": 2531,
                    "001260814": 2532,
                    "001261665": 2533,
                    "001263229": 2534,
                    "001263497": 2535,
                    "001264592": 2536,
                    "001264606": 2537,
                    "001266258": 2538,
                    "001266441": 2539,
                    "001266751": 2540,
                    "001266851": 2541,
                    "001266953": 2542,
                    "001267872": 2543,
                    "001268370": 2544,
                    "001268491": 2545,
                    "001269128": 2546,
                    "001270756": 2547,
                    "001271953": 2548,
                    "001272038": 2549,
                    "001272235": 2550,
                    "001272385": 2551,
                    "001272419": 2552,
                    "001272496": 2553,
                    "001273606": 2554,
                    "001274141": 2555,
                    "001274685": 2556,
                    "001274949": 2557,
                    "001275113": 2558,
                    "001275499": 2559,
                    "001277560": 2560,
                    "001278150": 2561,
                    "001278156": 2562,
                    "001278531": 2563,
                    "001279345": 2564,
                    "001279427": 2565,
                    "001279558": 2566,
                    "001281022": 2567,
                    "001281232": 2568,
                    "001282582": 2569,
                    "001282815": 2570,
                    "001283192": 2571,
                    "001283869": 2572,
                    "001283936": 2573,
                    "001284684": 2574,
                    "001285080": 2575,
                    "001286288": 2576,
                    "001286354": 2577,
                    "001286456": 2578,
                    "001287804": 2579,
                    "001288110": 2580,
                    "001288903": 2581,
                    "001289339": 2582,
                    "001290117": 2583,
                    "001290119": 2584,
                    "001290208": 2585,
                    "001291052": 2586,
                    "001291380": 2587,
                    "001291808": 2588,
                    "001292360": 2589,
                    "001292977": 2590,
                    "001292989": 2591,
                    "001293700": 2592,
                    "001293943": 2593,
                    "001294563": 2594,
                    "001294567": 2595,
                    "001295157": 2596,
                    "001295165": 2597,
                    "001295526": 2598,
                    "001295903": 2599,
                    "001296162": 2600,
                    "001296740": 2601,
                    "001297181": 2602,
                    "001297472": 2603,
                    "001297763": 2604,
                    "001298192": 2605,
                    "001300048": 2606,
                    "001300306": 2607,
                    "001300326": 2608,
                    "001301155": 2609,
                    "001302126": 2610,
                    "001302310": 2611,
                    "001302323": 2612,
                    "001302777": 2613,
                    "001302965": 2614,
                    "001303106": 2615,
                    "001303934": 2616,
                    "001304769": 2617,
                    "001304790": 2618,
                    "001305349": 2619,
                    "001306316": 2620,
                    "001306609": 2621,
                    "001306680": 2622,
                    "001306932": 2623,
                    "001307580": 2624,
                    "001308298": 2625,
                    "001309492": 2626,
                    "001311901": 2627,
                    "001312464": 2628,
                    "001312538": 2629,
                    "001312544": 2630,
                    "001312641": 2631,
                    "001313518": 2632,
                    "001314549": 2633,
                    "001314656": 2634,
                    "001314883": 2635,
                    "001315572": 2636,
                    "001315665": 2637,
                    "001316149": 2638,
                    "001317884": 2639,
                    "001317949": 2640,
                    "001318213": 2641,
                    "001318423": 2642,
                    "001319213": 2643,
                    "001319353": 2644,
                    "001319485": 2645,
                    "001320439": 2646,
                    "001320505": 2647,
                    "001320601": 2648,
                    "001320671": 2649,
                    "001321064": 2650,
                    "001322408": 2651,
                    "001322418": 2652,
                    "001323120": 2653,
                    "001323474": 2654,
                    "001324083": 2655,
                    "001324688": 2656,
                    "001324876": 2657,
                    "001324961": 2658,
                    "001325059": 2659,
                    "001325071": 2660,
                    "001325519": 2661,
                    "001325520": 2662,
                    "001326202": 2663,
                    "001327853": 2664,
                    "001327887": 2665,
                    "001328942": 2666,
                    "001329390": 2667,
                    "001330121": 2668,
                    "001330168": 2669,
                    "001330842": 2670,
                    "001331481": 2671,
                    "001331634": 2672,
                    "001331762": 2673,
                    "001333896": 2674,
                    "001334111": 2675,
                    "001334567": 2676,
                    "001335534": 2677,
                    "001335542": 2678,
                    "001335727": 2679,
                    "001336573": 2680,
                    "001337560": 2681,
                    "001337763": 2682,
                    "001338392": 2683,
                    "001338478": 2684,
                    "001338591": 2685,
                    "001338743": 2686,
                    "001339122": 2687,
                    "001339175": 2688,
                    "001339785": 2689,
                    "001340017": 2690,
                    "001340165": 2691,
                    "001340961": 2692,
                    "001341313": 2693,
                    "001341460": 2694,
                    "001341866": 2695,
                    "001342866": 2696,
                    "001343031": 2697,
                    "001344974": 2698,
                    "001345570": 2699,
                    "001345956": 2700,
                    "001346509": 2701,
                    "001347982": 2702,
                    "001348049": 2703,
                    "001348160": 2704,
                    "001348362": 2705,
                    "001348427": 2706,
                    "001348543": 2707,
                    "001349233": 2708,
                    "001349251": 2709,
                    "001350558": 2710,
                    "001350934": 2711,
                    "001351019": 2712,
                    "001352210": 2713,
                    "001352548": 2714,
                    "001352612": 2715,
                    "001352926": 2716,
                    "001352957": 2717,
                    "001353068": 2718,
                    "001353095": 2719,
                    "001353110": 2720,
                    "001353119": 2721,
                    "001353375": 2722,
                    "001354036": 2723,
                    "001354402": 2724,
                    "001355357": 2725,
                    "001355470": 2726,
                    "001355478": 2727,
                    "001355724": 2728,
                    "001356530": 2729,
                    "001356863": 2730,
                    "001356897": 2731,
                    "001357165": 2732,
                    "001357336": 2733,
                    "001357378": 2734,
                    "001357539": 2735,
                    "001357732": 2736,
                    "001358193": 2737,
                    "001358641": 2738,
                    "001359167": 2739,
                    "001359421": 2740,
                    "001359520": 2741,
                    "001359854": 2742,
                    "001360798": 2743,
                    "001361372": 2744,
                    "001361556": 2745,
                    "001362292": 2746,
                    "001363165": 2747,
                    "001363273": 2748,
                    "001363358": 2749,
                    "001363456": 2750,
                    "001364127": 2751,
                    "001364243": 2752,
                    "001366368": 2753,
                    "001366454": 2754,
                    "001367312": 2755,
                    "001367441": 2756,
                    "001367509": 2757,
                    "001367767": 2758,
                    "001367958": 2759,
                    "001368052": 2760,
                    "001368428": 2761,
                    "001368852": 2762,
                    "001369577": 2763,
                    "001369823": 2764,
                    "001370848": 2765,
                    "001371081": 2766,
                    "001371316": 2767,
                    "001371787": 2768,
                    "001371931": 2769,
                    "001372172": 2770,
                    "001373675": 2771,
                    "001373941": 2772,
                    "001374043": 2773,
                    "001374089": 2774,
                    "001374340": 2775,
                    "001375083": 2776,
                    "001375181": 2777,
                    "001376262": 2778,
                    "001376478": 2779,
                    "001376739": 2780,
                    "001377499": 2781,
                    "001377772": 2782,
                    "001379524": 2783,
                    "001380459": 2784,
                    "001380881": 2785,
                    "001381095": 2786,
                    "001381160": 2787,
                    "001381176": 2788,
                    "001381641": 2789,
                    "001381822": 2790,
                    "001382435": 2791,
                    "001382722": 2792,
                    "001383696": 2793,
                    "001383786": 2794,
                    "001383790": 2795,
                    "001384089": 2796,
                    "001384771": 2797,
                    "001386854": 2798,
                    "001388608": 2799,
                    "001389813": 2800,
                    "001390492": 2801,
                    "001390550": 2802,
                    "001391650": 2803,
                    "001391912": 2804,
                    "001392249": 2805,
                    "001392454": 2806,
                    "001394821": 2807,
                    "001396020": 2808,
                    "001396234": 2809,
                    "001396656": 2810,
                    "001397299": 2811,
                    "001397788": 2812,
                    "001397799": 2813,
                    "001398663": 2814,
                    "001398898": 2815,
                    "001400618": 2816,
                    "001400975": 2817,
                    "001401854": 2818,
                    "001401896": 2819,
                    "001403523": 2820,
                    "001403567": 2821,
                    "001404219": 2822,
                    "001404681": 2823,
                    "001404684": 2824,
                    "001404860": 2825,
                    "001405231": 2826,
                    "001406243": 2827,
                    "001406759": 2828,
                    "001407769": 2829,
                    "001407784": 2830,
                    "001407786": 2831,
                    "001409387": 2832,
                    "001410181": 2833,
                    "001410587": 2834,
                    "001411027": 2835,
                    "001411062": 2836,
                    "001411204": 2837,
                    "001411412": 2838,
                    "001411517": 2839,
                    "001411596": 2840,
                    "001411698": 2841,
                    "001411969": 2842,
                    "001412191": 2843,
                    "001414071": 2844,
                    "001414303": 2845,
                    "001415808": 2846,
                    "001415962": 2847,
                    "001417541": 2848,
                    "001418246": 2849,
                    "001419426": 2850,
                    "001419650": 2851,
                    "001419918": 2852,
                    "001420095": 2853,
                    "001420957": 2854,
                    "001421009": 2855,
                    "001421105": 2856,
                    "001421271": 2857,
                    "001422884": 2858,
                    "001423580": 2859,
                    "001425386": 2860,
                    "001426376": 2861,
                    "001426563": 2862,
                    "001426815": 2863,
                    "001428533": 2864,
                    "001428709": 2865,
                    "001429719": 2866,
                    "001431178": 2867,
                    "001431566": 2868,
                    "001431957": 2869,
                    "001432057": 2870,
                    "001432124": 2871,
                    "001433507": 2872,
                    "001433544": 2873,
                    "001433603": 2874,
                    "001433838": 2875,
                    "001433968": 2876,
                    "001433984": 2877,
                    "001434503": 2878,
                    "001434797": 2879,
                    "001435273": 2880,
                    "001435417": 2881,
                    "001435464": 2882,
                    "001437427": 2883,
                    "001437712": 2884,
                    "001438555": 2885,
                    "001438563": 2886,
                    "001439809": 2887,
                    "001440124": 2888,
                    "001440270": 2889,
                    "001440343": 2890,
                    "001440650": 2891,
                    "001441136": 2892,
                    "001442726": 2893,
                    "001443495": 2894,
                    "001443521": 2895,
                    "001445574": 2896,
                    "001445898": 2897,
                    "001447093": 2898,
                    "001447265": 2899,
                    "001447479": 2900,
                    "001447886": 2901,
                    "001449125": 2902,
                    "001449605": 2903,
                    "001451058": 2904,
                    "001451686": 2905,
                    "001452212": 2906,
                    "001452308": 2907,
                    "001452648": 2908,
                    "001453337": 2909,
                    "001453381": 2910,
                    "001453685": 2911,
                    "001454311": 2912,
                    "001455248": 2913,
                    "001456069": 2914,
                    "001457058": 2915,
                    "001458034": 2916,
                    "001458758": 2917,
                    "001459159": 2918,
                    "001459943": 2919,
                    "001460458": 2920,
                    "001460896": 2921,
                    "001461166": 2922,
                    "001461320": 2923,
                    "001461474": 2924,
                    "001461595": 2925,
                    "001461690": 2926,
                    "001464535": 2927,
                    "001464888": 2928,
                    "001464893": 2929,
                    "001465132": 2930,
                    "001466254": 2931,
                    "001467418": 2932,
                    "001467428": 2933,
                    "001467481": 2934,
                    "001468021": 2935,
                    "001468332": 2936,
                    "001470224": 2937,
                    "001471430": 2938,
                    "001472775": 2939,
                    "001472940": 2940,
                    "001473052": 2941,
                    "001473649": 2942,
                    "001475126": 2943,
                    "001475811": 2944,
                    "001475946": 2945,
                    "001476376": 2946,
                    "001477349": 2947,
                    "001477928": 2948,
                    "001478505": 2949,
                    "001478892": 2950,
                    "001479732": 2951,
                    "001480099": 2952,
                    "001480369": 2953,
                    "001483440": 2954,
                    "001484535": 2955,
                    "001484549": 2956,
                    "001485717": 2957,
                    "001488139": 2958,
                    "001488249": 2959,
                    "001489168": 2960,
                    "001489924": 2961,
                    "001490993": 2962,
                    "001491098": 2963,
                    "001491340": 2964,
                    "001491579": 2965,
                    "001491606": 2966,
                    "001491747": 2967,
                    "001493707": 2968,
                    "001493928": 2969,
                    "001494237": 2970,
                    "001494707": 2971,
                    "001495578": 2972,
                    "001496023": 2973,
                    "001497524": 2974,
                    "001497791": 2975,
                    "001497816": 2976,
                    "001498201": 2977,
                    "001498336": 2978,
                    "001499064": 2979,
                    "001499123": 2980,
                    "001499448": 2981,
                    "001500501": 2982,
                    "001501573": 2983,
                    "001501589": 2984,
                    "001501723": 2985,
                    "001501753": 2986,
                    "001501894": 2987,
                    "001502116": 2988,
                    "001502687": 2989,
                    "001503167": 2990,
                    "001503388": 2991,
                    "001503893": 2992,
                    "001504162": 2993,
                    "001504699": 2994,
                    "001504734": 2995,
                    "001505076": 2996,
                    "001505198": 2997,
                    "001505740": 2998,
                    "001505973": 2999,
                    "001506028": 3000,
                    "001506087": 3001,
                    "001506394": 3002,
                    "001506558": 3003,
                    "001506832": 3004,
                    "001507945": 3005,
                    "001508373": 3006,
                    "001509120": 3007,
                    "001509303": 3008,
                    "001510270": 3009,
                    "001511571": 3010,
                    "001511775": 3011,
                    "001514078": 3012,
                    "001514276": 3013,
                    "001514438": 3014,
                    "001514633": 3015,
                    "001514896": 3016,
                    "001515179": 3017,
                    "001515672": 3018,
                    "001516441": 3019,
                    "001516688": 3020,
                    "001516952": 3021,
                    "001517443": 3022,
                    "001517483": 3023,
                    "001517875": 3024,
                    "001518496": 3025,
                    "001518797": 3026,
                    "001520224": 3027,
                    "001520309": 3028,
                    "001520848": 3029,
                    "001521075": 3030
                },
                "alpha": 0
            }
        },
        "dependencies": []
    },
    "SPORDER": {
        "feature_desc": "Person number",
        "feature_type": "integer",
        "field_length": 2,
        "contains_null": false,
        "field_density": "sparse",
        "feature_notes": "Unique persons identified by the combination of the SERIALNO and SPORDER.  Integer stored as float",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SPORDER",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "PUMA": {
        "feature_desc": "Public use microdata area code (PUMA) based on 2010 Census definition",
        "feature_type": "obj",
        "field_length": 5,
        "contains_null": false,
        "field_density": "dense",
        "feature_notes": "Public use microdata areas (PUMAs) designate areas of 100,000 or more population.  Use with ST for unique code.  PUMAs are 5 digit numbers with leading zeros.",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "PUMA",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "00300": 2,
                    "00400": 3,
                    "00100": 0,
                    "00200": 1
                },
                "alpha": 0
            }
        },
        "dependencies": []
    },
    "ST": {
        "feature_desc": "State Code based on 2010 Census definitions",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "Alabama/AL": "01",
            "Alaska/AK": "02",
            "Arizona/AZ": "04",
            "Arkansas/AR": "05",
            "California/CA": "06",
            "Colorado/CO": "08",
            "Connecticut/CT": "09",
            "Delaware/DE": "10",
            "District of Columbia/DC": "11",
            "Florida/FL": "12",
            "Georgia/GA": "13",
            "Hawaii/HI": "15",
            "Idaho/ID": "16",
            "Illinois/IL": "17",
            "Indianna/IN": "18",
            "Iowa/IA": "19",
            "Kansas/KS": "20",
            "Kentucky/KY": "21",
            "Louisiana/LA": "22",
            "Maine/ME": "23",
            "Maryland/MD": "24",
            "Massachusetts/MA": "25",
            "Michigan/MI": "26",
            "Minnesota/MN": "27",
            "Mississippi/MS": "28",
            "Missouri/MO": "29",
            "Montana/MT": "30",
            "Nebraska/NE": "31",
            "Nevada/NV": "32",
            "New Hampshire/NH": "33",
            "New Jersey/NJ": "34",
            "New Mexico/NM": "35",
            "New York/NY": "36",
            "North Carolina/NC": "37",
            "North Dakota/ND": "38",
            "Ohio/OH": "39",
            "Oklahoma/OK": "40",
            "Oregon/OR": "41",
            "Pennsylvania/PA": "42",
            "Rhode Island/RI": "44",
            "South Carolina/SC": "45",
            "South Dakota/SD": "46",
            "Tennessee/TN": "47",
            "Texas/TX": "48",
            "Utah/UT": "49",
            "Vermont/VT": "50",
            "Virginia/VA": "51",
            "Washington/WA": "53",
            "West Virginia/WV": "54",
            "Wisconsin/WI": "55",
            "Wyoming/WY": "56",
            "Puerto Rico/PR": "72"
        },
        "feature_notes": "State Code based on 2010 Census definitions.  2 digit number with leading zeros.",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "ST",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "50": 0
                },
                "alpha": 0
            }
        },
        "dependencies": []
    },
    "ADJINC": {
        "feature_desc": "Adjustment factor for income and earnings dollar amounts (6 implied decimal places)",
        "feature_type": "obj",
        "field_length": 7,
        "contains_null": false,
        "field_density": "sparse",
        "feature_notes": "The value of ADJINC inflation-adjusts reported income to 2016 dollars.  ADJINC applies to variables FINCP and HINCP in the housing record, and variables INTP, OIP, PAP, PERNP, PINCP, RETP, SEMP, SSIP, SSP, and WAGP in the person record.  The number changes by year and is a 7 digit number where there are 6 implied decimal places. Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "ADJINC",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "1007588": 0
                },
                "alpha": 0
            }
        },
        "dependencies": []
    },
    "PWGTP": {
        "feature_desc": "Person's weight",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Person Weight": "(1, 9999, 100)"
        },
        "feature_notes": "Number up to 9999 with 0 in tenths place.",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PWGTP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "AGEP": {
        "feature_desc": "Age",
        "feature_type": "floating_point",
        "field_length": 2,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Under 1 year": 0,
            "1 to 99 years": "(1, 99, 10)"
        },
        "feature_notes": "",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "AGEP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "CIT": {
        "feature_desc": "Citizenship status",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Born in the U.S.": "1",
            "Born in Puerto Rico, Guam, the U.S. Virgin Islands, or the Northern Marianas": "2",
            "Born abroad of American parent(s)": "3",
            "U.S. citizen by naturalization": "4",
            "Not a citizen of the U.S.": "5"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "CIT",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "CITWP": {
        "feature_desc": "Year of naturalization write-in",
        "feature_type": "integer",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1928 or earlier": 1928,
            "1929-1933": 1929,
            "1934-1939": 1934,
            "1940-1942": 1940,
            "1943-1944": 1943,
            "1945": 1945,
            "1946-1947": 1946,
            "1948": 1948,
            "1949": 1949,
            "1950": 1950,
            "1951": 1951,
            "1952": 1952,
            "1953": 1953,
            "1954": 1954,
            "1955": 1955,
            "1956": 1956,
            "1957": 1957,
            "1958": 1958,
            "1959": 1959,
            "1960": 1960,
            "1961": 1961,
            "1962": 1962,
            "1963": 1963,
            "1964": 1964,
            "1965": 1965,
            "1966": 1966,
            "1967": 1967,
            "1968": 1968,
            "1969": 1969,
            "1970": 1970,
            "1971": 1971,
            "1972": 1972,
            "1973": 1973,
            "1974": 1974,
            "1975": 1975,
            "1976": 1976,
            "1977": 1977,
            "1978": 1978,
            "1979": 1979,
            "1980": 1980,
            "1981": 1981,
            "1982": 1982,
            "1983": 1983,
            "1984": 1984,
            "1985": 1985,
            "1986": 1986,
            "1987": 1987,
            "1988": 1988,
            "1989": 1989,
            "1990": 1990,
            "1991": 1991,
            "1992": 1992,
            "1993": 1993,
            "1994": 1994,
            "1995": 1995,
            "1996": 1996,
            "1997": 1997,
            "1998": 1998,
            "1999": 1999,
            "2000": 2000,
            "2001": 2001,
            "2002": 2002,
            "2003": 2003,
            "2004": 2004,
            "2005": 2005,
            "2006": 2006,
            "2007": 2007,
            "2008": 2008,
            "2009": 2009,
            "2010": 2010,
            "2011": 2011,
            "2012": 2012,
            "2013": 2013,
            "2014": 2014,
            "2015": 2015,
            "2016": 2016
        },
        "feature_notes": "4 digit number representing the year stored as float instead of integer",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "CITWP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "COW": {
        "feature_desc": "Class of worker",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Employee of a private for-profit company or business, or of an individual, for wages, salary, or commistions": "1",
            "Employee of a private not-for-profit, tax-exempt, or charitable organization": "2",
            "Local government employee (city, county, etc.)": "3",
            "State government employee": "4",
            "Federal government employee": "5",
            "Self-employed in own not incorprated business, professional practice or farm": "6",
            "Self-employed in own incorporated business, professional practice or farm": "7",
            "Working without pay in family business or farm": "8",
            "Unemployed and last worked 5 years ago or earlier or never worked": "9"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "COW",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "DDRS": {
        "feature_desc": "Self-care difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DDRS",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW"
        ]
    },
    "DEAR": {
        "feature_desc": "Hearing difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DEAR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS"
        ]
    },
    "DEYE": {
        "feature_desc": "Vision difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DEYE",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR"
        ]
    },
    "DOUT": {
        "feature_desc": "Independent living difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DOUT",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE"
        ]
    },
    "DPHY": {
        "feature_desc": "Ambulatory difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DPHY",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT"
        ]
    },
    "DRAT": {
        "feature_desc": "Veteran service connected disability rating (percentage)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (No service-connected disability/never served in military)": "b",
            "0 percent": "1",
            "10 or 20 percent": "2",
            "30 or 40 percent": "3",
            "50 or 60 percent": "4",
            "70, 80, 90, or 100 percent": "5",
            "Not reported": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DRAT",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY"
        ]
    },
    "DRATX": {
        "feature_desc": "Veteran service connected disability rating (checkbox)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DRATX",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT"
        ]
    },
    "DREM": {
        "feature_desc": "Cognitive difficulty",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DREM",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX"
        ]
    },
    "ENG": {
        "feature_desc": "Ability to speak English",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Very well": "1",
            "Well": "2",
            "Not well": "3",
            "Not at all": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "ENG",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM"
        ]
    },
    "FER": {
        "feature_desc": "Gave birth to child within the past 12 months",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FER",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG"
        ]
    },
    "GCL": {
        "feature_desc": "Grandparents living with grandchildren",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "GCL",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER"
        ]
    },
    "GCM": {
        "feature_desc": "Length of time responsible for grandchildren",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Less than 6 months": "1",
            "6 to 11 months": "2",
            "1 or 2 years": "3",
            "3 or 4 years": "4",
            "5 or more years": "5"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "GCM",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL"
        ]
    },
    "GCR": {
        "feature_desc": "Grandparents responsible for grandchildren",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "GCR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM"
        ]
    },
    "HINS1": {
        "feature_desc": "Insurance through a current or former employer or union",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS1",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR"
        ]
    },
    "HINS2": {
        "feature_desc": "Insurance purchased directly from an insurance company",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS2",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1"
        ]
    },
    "HINS3": {
        "feature_desc": "Medicare, for people 65 and older, or people with certain disabilities",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS3",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2"
        ]
    },
    "HINS4": {
        "feature_desc": "Medicaid, Medical Assistance, or any kind of government-assistance plan  for those with low incomes or a disability",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS4",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3"
        ]
    },
    "HINS5": {
        "feature_desc": "TRICARE or other military health care",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS5",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4"
        ]
    },
    "HINS6": {
        "feature_desc": "VA (including those who have ever used or enrolled for VA health care)",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Number stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "HINS6",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "2": 1,
                    "1": 0
                },
                "alpha": 0.5
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5"
        ]
    },
    "HINS7": {
        "feature_desc": "Indian Health Service",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HINS7",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6"
        ]
    },
    "INTP": {
        "feature_desc": "Interest, dividends, and net rental income past 12 months (signed)",
        "feature_type": "integer",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "-$9999 or less (Bottom Coded)": -9999,
            "Loss of $1 to $9999": "(-9999, 0, 10)",
            "None": 0,
            "$1 or break even": 1,
            "$2 to $999999": "(2, 999999, 100)",
            "$999999 or more (Top Coded)": 999999
        },
        "feature_notes": "Use ADJINC to adjust INTP to constant dollars.  Rounded to nearest dollar and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "INTP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7"
        ]
    },
    "JWMNP": {
        "feature_desc": "Travel time to work",
        "feature_type": "integer",
        "field_length": 3,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1 to 200 minutes to get to work": "(1, 200, 10)"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "JWMNP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP"
        ]
    },
    "JWRIP": {
        "feature_desc": "Vehicle occupancy",
        "feature_type": "integer",
        "field_length": 2,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Drove alone": 1,
            "In 2-person carpool": 2,
            "In 3-person carpool": 3,
            "In 4-person carpool": 4,
            "In 5-person carpool": 5,
            "In 6-person carpool": 6,
            "In 7-person carpool": 7,
            "In 8-person carpool": 8,
            "In 9-person carpool": 9,
            "In 10-person or more carpool": 10
        },
        "feature_notes": "Integer stored as float with a 0 in the tenths place",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "JWRIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP"
        ]
    },
    "JWTR": {
        "feature_desc": "Means of transportation to work",
        "feature_type": "integer",
        "field_length": 2,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "Car, truck, or van": "01",
            "Bus or trolley bus": "02",
            "Streetcar or trolley car (carro publico in Puerto Rico)": "03",
            "Subway or elevated": "04",
            "Railroad": "05",
            "Ferryboat": "06",
            "Taxicab": "07",
            "Motorcycle": "08",
            "Bicycle": "09",
            "Walked": "10",
            "Worked at home": "11",
            "Other method": "12"
        },
        "feature_notes": "Integer code with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "JWTR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP"
        ]
    },
    "LANP": {
        "feature_desc": "Language",
        "feature_type": "obj",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Jamaican Creole English": "1000",
            "Other English-based Creole languages": "1025",
            "Haitian": "1055",
            "Kabuverdianu": "1069",
            "German": "1110",
            "Swiss German": "1120",
            "Pennsylvania German": "1125",
            "Yiddish": "1130",
            "Dutch": "1132",
            "Afrikaans": "1134",
            "Swedish": "1140",
            "Danish": "1141",
            "Norwegian": "1142",
            "Italian": "1155",
            "French": "1170",
            "Cajun French": "1175",
            "Spanish": "1200",
            "Portuguese": "1210",
            "Romanian": "1220",
            "Irish": "1231",
            "Greek": "1235",
            "Albanian": "1242",
            "Russian": "1250",
            "Ukrainian": "1260",
            "Czech": "1262",
            "Slovak": "1263",
            "Polish": "1270",
            "Bulgarian": "1273",
            "Macedonian": "1274",
            "Serbocroatian": "1275",
            "Bosnian": "1276",
            "Croatian": "1277",
            "Serbian": "1278",
            "Lithuanian": "1281",
            "Latvian": "1283",
            "Armenian": "1288",
            "Farsi": "1290",
            "Dari": "1292",
            "Kurdish": "1315",
            "Pashto": "1327",
            "India N.E.C.": "1340",
            "Hindi": "1350",
            "Urdu": "1360",
            "Bengali": "1380",
            "Punjabi": "1420",
            "Konkani": "1435",
            "Marathi": "1440",
            "Gujarati": "1450",
            "Nepali": "1500",
            "Pakistan N.E.C.": "1525",
            "Sinhala": "1530",
            "Other Indo-Iranian languages": "1540",
            "Other Indo-European languages": "1564",
            "Finnish": "1565",
            "Hungarian": "1582",
            "Turkish": "1675",
            "Mongolian": "1690",
            "Telugu": "1730",
            "Kannada": "1737",
            "Malayalam": "1750",
            "Tamil": "1765",
            "Khmer": "1900",
            "Vietnamese": "1960",
            "Chinese": "1970",
            "Mandarin": "2000",
            "Min Nan Chinese": "2030",
            "Cantonese": "2050",
            "Tibetan": "2100",
            "Burmese": "2160",
            "Chin languages": "2270",
            "Karen languages": "2350",
            "Thai": "2430",
            "Lao": "2475",
            "Iu Mien": "2525",
            "Hmong": "2535",
            "Japanese": "2560",
            "Korean": "2575",
            "Malay": "2715",
            "Indonesian": "2770",
            "Other languages of Asia": "2850",
            "Filipino": "2910",
            "Tagalog": "2920",
            "Cebuano": "2950",
            "Ilocano": "3150",
            "Other Philippine languages": "3190",
            "Chamorro": "3220",
            "Marshallese": "3270",
            "Chuukese": "3350",
            "Samoan": "3420",
            "Tongan": "3500",
            "Hawaiian": "3570",
            "Other Eastern Malayo-Polynesian languages": "3600",
            "Arabic": "4500",
            "Hebrew": "4545",
            "Assyrian Neo-Aramaic": "4560",
            "Chaldean Neo-Aramaic": "4565",
            "Amharic": "4590",
            "Tigrinya": "4640",
            "Oromo": "4830",
            "Somali": "4840",
            "Other Afro-Asiatic languages": "4880",
            "Nilo-Saharan languages": "4900",
            "Swahili": "5150",
            "Ganda": "5345",
            "Shona": "5525",
            "Other Bantu languages": "5645",
            "Manding languages": "5845",
            "Other Mande languages": "5900",
            "Fulah": "5940",
            "Wolof": "5950",
            "Akan (incl. Twi)": "6120",
            "Ga": "6205",
            "Gbe languages": "6230",
            "Yoruba": "6290",
            "Edoid languages": "6300",
            "Igbo": "6370",
            "Other Niger-Congo languages": "6500",
            "Other languages of Africa": "6795",
            "Aleut languages": "6800",
            "Ojibwa": "6839",
            "Apache languages": "6930",
            "Navajo": "6933",
            "Kiowa-Tanoan languages": "6936",
            "Dakota languages": "7019",
            "Muskogean languages": "7032",
            "Keres": "7039",
            "Cherokee": "7050",
            "Zuni": "7059",
            "Uto-Aztecan languages": "7060",
            "Other Native North American languages": "7124",
            "Other Central and South American languages": "7300",
            "English only household": "9500",
            "Other and unspecified languages": "9999"
        },
        "feature_notes": "4 digit number no leading zeros stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "LANP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "1250": 12,
                    "1170": 8,
                    "2560": 30,
                    "1200": 9,
                    "1582": 23,
                    "2575": 31,
                    "1270": 14,
                    "1970": 26,
                    "1120": 2,
                    "1276": 16,
                    "1275": 15,
                    "1360": 20,
                    "1110": 1,
                    "4830": 35,
                    "1155": 7,
                    "1262": 13,
                    "1142": 6,
                    "7124": 40,
                    "1750": 24,
                    "4840": 36,
                    "1235": 11,
                    "2770": 32,
                    "2100": 28,
                    "1960": 25,
                    "4545": 34,
                    "9999": 41,
                    "1000": 0,
                    "2920": 33,
                    "1315": 19,
                    "6120": 39,
                    "2430": 29,
                    "1281": 17,
                    "1132": 3,
                    "1210": 10,
                    "1140": 5,
                    "1440": 21,
                    "2000": 27,
                    "5645": 38,
                    "1292": 18,
                    "4900": 37,
                    "1500": 22,
                    "1134": 4
                },
                "alpha": 0.11627906976744186
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR"
        ]
    },
    "LANX": {
        "feature_desc": "Language other than English spoken at home",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes, speaks another language": "1",
            "No, speaks only English": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "LANX",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP"
        ]
    },
    "MAR": {
        "feature_desc": "Marital status",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Married": "1",
            "Widowed": "2",
            "Divorced": "3",
            "Separated": "4",
            "Never married or under 15 years old": "5"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MAR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX"
        ]
    },
    "MARHD": {
        "feature_desc": "Divorced in the past 12 months",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MARHD",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR"
        ]
    },
    "MARHM": {
        "feature_desc": "Married in the past 12 months",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MARHM",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD"
        ]
    },
    "MARHT": {
        "feature_desc": "Number of times married",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (age less than 15 years; never married)": "b",
            "One time": "1",
            "Two times": "2",
            "Three or more times": "3"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MARHT",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM"
        ]
    },
    "MARHW": {
        "feature_desc": "Widowed in the past 12 months",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (age less than 15 years; never married)": "b",
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MARHW",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT"
        ]
    },
    "MARHYP": {
        "feature_desc": "Year last married",
        "feature_type": "integer",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1932 or earlier": 1932,
            "1933": 1933,
            "1934": 1934,
            "1935": 1935,
            "1936": 1936,
            "1937": 1937,
            "1938": 1938,
            "1939": 1939,
            "1940": 1940,
            "1941": 1941,
            "1942": 1942,
            "1943": 1943,
            "1944": 1944,
            "1945": 1945,
            "1946": 1946,
            "1947": 1947,
            "1948": 1948,
            "1949": 1949,
            "1950": 1950,
            "1951": 1951,
            "1952": 1952,
            "1953": 1953,
            "1954": 1954,
            "1955": 1955,
            "1956": 1956,
            "1957": 1957,
            "1958": 1958,
            "1959": 1959,
            "1960": 1960,
            "1961": 1961,
            "1962": 1962,
            "1963": 1963,
            "1964": 1964,
            "1965": 1965,
            "1966": 1966,
            "1967": 1967,
            "1968": 1968,
            "1969": 1969,
            "1970": 1970,
            "1971": 1971,
            "1972": 1972,
            "1973": 1973,
            "1974": 1974,
            "1975": 1975,
            "1976": 1976,
            "1977": 1977,
            "1978": 1978,
            "1979": 1979,
            "1980": 1980,
            "1981": 1981,
            "1982": 1982,
            "1983": 1983,
            "1984": 1984,
            "1985": 1985,
            "1986": 1986,
            "1987": 1987,
            "1988": 1988,
            "1989": 1989,
            "1990": 1990,
            "1991": 1991,
            "1992": 1992,
            "1993": 1993,
            "1994": 1994,
            "1995": 1995,
            "1996": 1996,
            "1997": 1997,
            "1998": 1998,
            "1999": 1999,
            "2000": 2000,
            "2001": 2001,
            "2002": 2002,
            "2003": 2003,
            "2004": 2004,
            "2005": 2005,
            "2006": 2006,
            "2007": 2007,
            "2008": 2008,
            "2009": 2009,
            "2010": 2010,
            "2011": 2011,
            "2012": 2012,
            "2013": 2013,
            "2014": 2014,
            "2015": 2015,
            "2016": 2016
        },
        "feature_notes": "4 digit number representing the year stored as float instead of integer",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MARHYP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW"
        ]
    },
    "MIG": {
        "feature_desc": "Mobility status (lived here 1 year ago)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes, same house (nonmovers)": "1",
            "No, outside US and Puerto Rico": "2",
            "No, different house in US or Puerto Rico": "3"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MIG",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP"
        ]
    },
    "MIL": {
        "feature_desc": "Military service",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Now on active duty": "1",
            "On active duty in the past, but not now": "2",
            "Only on active duty for training in Reserves/National Guard": "3",
            "Never served in the military": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MIL",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG"
        ]
    },
    "MLPA": {
        "feature_desc": "Served September 2001 or later",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPA",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL"
        ]
    },
    "MLPB": {
        "feature_desc": "Served August 1990 - August 2001 (including Persian Gulf War)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPB",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA"
        ]
    },
    "MLPCD": {
        "feature_desc": "Served May 1975 - July 1990",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than 17 years old/no active duty)": "b",
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPCD",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB"
        ]
    },
    "MLPE": {
        "feature_desc": "Served Vietnam era (August 1964 - April 1975)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than 17 years old/no active duty)": "b",
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPE",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD"
        ]
    },
    "MLPFG": {
        "feature_desc": "Served February 1955 - July 1964",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than 17 years old/no active duty)": "b",
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPFG",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE"
        ]
    },
    "MLPH": {
        "feature_desc": "Served Korean War (July 1950 - January 1955)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPH",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG"
        ]
    },
    "MLPI": {
        "feature_desc": "Served January 1947 - June 1950",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPI",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH"
        ]
    },
    "MLPJ": {
        "feature_desc": "Served World War II (December 1941 - December 1946)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPJ",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI"
        ]
    },
    "MLPK": {
        "feature_desc": "Served November 1941 or earlier",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Did not serve this period": "0",
            "Served this period": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MLPK",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ"
        ]
    },
    "NWAB": {
        "feature_desc": "Temporary absence from work",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2",
            "Did not report": "3"
        },
        "feature_notes": "(UNEDITED - See \"Employment Status Recode\" (ESR))",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NWAB",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3": 2,
                    "2": 1,
                    "None": -1,
                    "1": 0
                },
                "alpha": 0.375
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK"
        ]
    },
    "NWAV": {
        "feature_desc": "Available for work",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No, temporarily ill": "2",
            "No, other reasons": "3",
            "No, unspecified": "4",
            "Did not report": "5"
        },
        "feature_notes": "(UNEDITED - See \"Employment Status Recode\" (ESR))",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NWAV",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "5": 3,
                    "3": 2,
                    "None": -1,
                    "1": 0,
                    "2": 1
                },
                "alpha": 0.5
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB"
        ]
    },
    "NWLA": {
        "feature_desc": "On layoff from work",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2",
            "Did not report": "3"
        },
        "feature_notes": "(UNEDITED - See \"Employment Status Recode\" (ESR))",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NWLA",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3": 2,
                    "2": 1,
                    "None": -1,
                    "1": 0
                },
                "alpha": 0.375
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV"
        ]
    },
    "NWLK": {
        "feature_desc": "Looking for work",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than 16 years old/at work/temporarily absent/informed of recall)": "b",
            "Yes": "1",
            "No": "2",
            "Did not report": "3"
        },
        "feature_notes": "(UNEDITED - See \u201cEmployment Status Recode\u201d (ESR))",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NWLK",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3": 2,
                    "2": 1,
                    "None": -1,
                    "1": 0
                },
                "alpha": 0.5
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA"
        ]
    },
    "NWRE": {
        "feature_desc": "Informed of recall",
        "feature_type": "obj",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than 16 years old/at work/not on layoff)": "b",
            "Yes": "1",
            "No": "2",
            "Did not report": "3"
        },
        "feature_notes": "(UNEDITED - See \u201cEmployment Status Recode\u201d (ESR))",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NWRE",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3": 2,
                    "2": 1,
                    "None": -1,
                    "1": 0
                },
                "alpha": 0.5
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK"
        ]
    },
    "OIP": {
        "feature_desc": "All other income past 12 months",
        "feature_type": "integer",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "$1 to $99999 (Rounded and top-coded)": "(1, 99999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust OIP to constant dollars.   Rounded to nearest dollar and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "OIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE"
        ]
    },
    "PAP": {
        "feature_desc": "Public assistance income past 12 months",
        "feature_type": "integer",
        "field_length": 5,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "$1 to $99999 (Rounded)": "(1, 99999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust PAP to constant dollars.  Rounded to nearest dollar and stored with with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PAP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP"
        ]
    },
    "RELP": {
        "feature_desc": "Relationship",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "Reference person": "00",
            "Husband/wife": "01",
            "Biological son or daughter": "02",
            "Adopted son or daughter": "03",
            "Stepson or stepdaughter": "04",
            "Brother or sister": "05",
            "Father or mother": "06",
            "Grandchild": "07",
            "Parent-in-law": "08",
            "Son-in-law or daughter-in-law": "09",
            "Other relative": "10",
            "Roomer or boarder": "11",
            "Housemate or roommate": "12",
            "Unmarried partner": "13",
            "Foster child": "14",
            "Other nonrelative": "15",
            "Institutionalized group quarters population": "16",
            "Noninstitutionalized group quarters population": "17"
        },
        "feature_notes": "2 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "RELP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "00": 0,
                    "01": 1,
                    "02": 2,
                    "17": 17,
                    "11": 11,
                    "12": 12,
                    "15": 15,
                    "10": 10,
                    "13": 13,
                    "16": 16,
                    "09": 9,
                    "14": 14,
                    "07": 7,
                    "06": 6,
                    "04": 4,
                    "05": 5,
                    "03": 3,
                    "08": 8
                },
                "alpha": 0.2777777777777778
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP"
        ]
    },
    "RETP": {
        "feature_desc": "Retirement income past 12 months",
        "feature_type": "integer",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "Ranged of retirement income": "(1, 999999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust RETP to constant dollars stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RETP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP"
        ]
    },
    "SCH": {
        "feature_desc": "School enrollment",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "No, has not attended in the last 3 months": "1",
            "Yes, public school or public college": "2",
            "Yes, private school or college or home school": "3"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SCH",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP"
        ]
    },
    "SCHG": {
        "feature_desc": "Grade level attending",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "Nursery school/preschool": "01",
            "Kindergarten": "02",
            "Grade 1": "03",
            "Grade 2": "04",
            "Grade 3": "05",
            "Grade 4": "06",
            "Grade 5": "07",
            "Grade 6": "08",
            "Grade 7": "09",
            "Grade 8": "10",
            "Grade 9": "11",
            "Grade 10": "12",
            "Grade 11": "13",
            "Grade 12": "14",
            "College undergraduate years (freshman to senior)": "15",
            "Graduate or professional school beyond a bachelor's degree": "16"
        },
        "feature_notes": "2 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "SCHG",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "15": 14,
                    "16": 15,
                    "12": 11,
                    "09": 8,
                    "13": 12,
                    "02": 1,
                    "04": 3,
                    "01": 0,
                    "06": 5,
                    "11": 10,
                    "03": 2,
                    "10": 9,
                    "07": 6,
                    "14": 13,
                    "08": 7,
                    "05": 4
                },
                "alpha": 0.29411764705882354
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH"
        ]
    },
    "SCHL": {
        "feature_desc": "Educational attainment",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "No schooling completed": "01",
            "Nursery school, preschool": "02",
            "Kindergarten": "03",
            "Grade 1": "04",
            "Grade 2": "05",
            "Grade 3": "06",
            "Grade 4": "07",
            "Grade 5": "08",
            "Grade 6": "09",
            "Grade 7": "10",
            "Grade 8": "11",
            "Grade 9": "12",
            "Grade 10": "13",
            "Grade 11": "14",
            "12th grade - no diploma": "15",
            "Regular high school diploma": "16",
            "GED or alternative credential": "17",
            "Some college, but less than 1 year": "18",
            "1 or more years of college credit, no degree": "19",
            "Associate's degree": "20",
            "Bachelor's degree": "21",
            "Master's degree": "22",
            "Professional degree beyond a bachelor's degree": "23",
            "Doctorate degree": "24"
        },
        "feature_notes": "2 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "SCHL",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "16": 15,
                    "18": 17,
                    "19": 18,
                    "21": 20,
                    "22": 21,
                    "12": 11,
                    "09": 8,
                    "14": 13,
                    "13": 12,
                    "17": 16,
                    "01": 0,
                    "None": -1,
                    "04": 3,
                    "24": 23,
                    "20": 19,
                    "02": 1,
                    "23": 22,
                    "11": 10,
                    "07": 6,
                    "05": 4,
                    "03": 2,
                    "15": 14,
                    "10": 9,
                    "08": 7,
                    "06": 5
                },
                "alpha": 0.2
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG"
        ]
    },
    "SEMP": {
        "feature_desc": "Self-employment income past 12 months (signed)",
        "feature_type": "integer",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Loss of $1 to $10000 (Rounded and bottom-coded)": "(-10000, 1, 10)",
            "None": 0,
            "$1 or break even": 1,
            "$1 to $999999": "(2, 999999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust SEMP to constant dollars.  Rounded to dollar and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SEMP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL"
        ]
    },
    "SEX": {
        "feature_desc": "Sex",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Male": "1",
            "Female": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SEX",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP"
        ]
    },
    "SSIP": {
        "feature_desc": "Supplementary Security Income past 12 months",
        "feature_type": "integer",
        "field_length": 5,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "$1 to $99999": "(2, 99999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust SSIP to constant dollars.  Rounded to nearest hundreds and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SSIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX"
        ]
    },
    "SSP": {
        "feature_desc": "Social Security income past 12 months",
        "feature_type": "integer",
        "field_length": 5,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "1 to $99999 (Rounded)": "(1, 99999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust SSP to constant dollars.  Rounded to nearest hundreds and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP"
        ]
    },
    "WAGP": {
        "feature_desc": "Wages or salary income past 12 months",
        "feature_type": "integer",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "None": 0,
            "1 to $999999": "(1, 999999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust WAGP to constant dollars.   Rounded to nearest hundreds and stored with 0 in tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WAGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP"
        ]
    },
    "WKHP": {
        "feature_desc": "Usual hours worked per week past 12 months",
        "feature_type": "integer",
        "field_length": 2,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1 to 98 usual hours": "(1, 99)",
            "99 or more usual hours": 99
        },
        "feature_notes": "Rounded to nearest hour and stored with 0 in the tenths place.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WKHP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP"
        ]
    },
    "WKL": {
        "feature_desc": "When last worked",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Within the past 12 months": "1",
            "1-5 years ago": "2",
            "Over 5 years ago or never worked": "3"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WKL",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP"
        ]
    },
    "WKW": {
        "feature_desc": "Weeks worked during past 12 months",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "50 to 52 weeks worked during past 12 months": "1",
            "48 to 49 weeks worked during past 12 months": "2",
            "40 to 47 weeks worked during past 12 months": "3",
            "27 to 39 weeks worked during past 12 months": "4",
            "14 to 26 weeks worked during past 12 months": "5",
            "less than 14 weeks worked during past 12 months": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WKW",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL"
        ]
    },
    "WRK": {
        "feature_desc": "Worked last week",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Worked": "1",
            "Did not work": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WRK",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW"
        ]
    },
    "YOEP": {
        "feature_desc": "Year of entry",
        "feature_type": "integer",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1921 or earlier": 1921,
            "1922-1923": 1922,
            "1924-1925": 1924,
            "1926-1927": 1926,
            "1928-1929": 1928,
            "1930-1931": 1930,
            "1932-1934": 1932,
            "1935-1936": 1935,
            "1937-1938": 1937,
            "1939": 1939,
            "1940": 1940,
            "1941": 1941,
            "1942": 1942,
            "1943-1944": 1943,
            "1945": 1945,
            "1946": 1946,
            "1947": 1947,
            "1948": 1948,
            "1949": 1949,
            "1950": 1950,
            "1951": 1951,
            "1952": 1952,
            "1953": 1953,
            "1954": 1954,
            "1955": 1955,
            "1956": 1956,
            "1957": 1957,
            "1958": 1958,
            "1959": 1959,
            "1960": 1960,
            "1961": 1961,
            "1962": 1962,
            "1963": 1963,
            "1964": 1964,
            "1965": 1965,
            "1966": 1966,
            "1967": 1967,
            "1968": 1968,
            "1969": 1969,
            "1970": 1970,
            "1971": 1971,
            "1972": 1972,
            "1973": 1973,
            "1974": 1974,
            "1975": 1975,
            "1976": 1976,
            "1977": 1977,
            "1978": 1978,
            "1979": 1979,
            "1980": 1980,
            "1981": 1981,
            "1982": 1982,
            "1983": 1983,
            "1984": 1984,
            "1985": 1985,
            "1986": 1986,
            "1987": 1987,
            "1988": 1988,
            "1989": 1989,
            "1990": 1990,
            "1991": 1991,
            "1992": 1992,
            "1993": 1993,
            "1994": 1994,
            "1995": 1995,
            "1996": 1996,
            "1997": 1997,
            "1998": 1998,
            "1999": 1999,
            "2000": 2000,
            "2001": 2001,
            "2002": 2002,
            "2003": 2003,
            "2004": 2004,
            "2005": 2005,
            "2006": 2006,
            "2007": 2007,
            "2008": 2008,
            "2009": 2009,
            "2010": 2010,
            "2011": 2011,
            "2012": 2012,
            "2013": 2013,
            "2014": 2014,
            "2015": 2015,
            "2016": 2016
        },
        "feature_notes": "4 digit number representing the year stored as float instead of integer",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "YOEP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK"
        ]
    },
    "ANC": {
        "feature_desc": "Ancestry recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Single": "1",
            "Multiple": "2",
            "Unclassified": "3",
            "Not reported": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "ANC",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP"
        ]
    },
    "ANC1P": {
        "feature_desc": "Recoded Detailed Ancestry - first entry (3 digit code leading zeros)",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Western Europe": [
                "001",
                "003",
                "005",
                "008",
                "009",
                "011",
                "012",
                "020",
                "021",
                "022",
                "024",
                "026",
                "032",
                "040",
                "046",
                "049",
                "050",
                "051",
                "068",
                "077",
                "078",
                "082",
                "084",
                "087",
                "088",
                "089",
                "091",
                "094",
                "097",
                "098",
                "099"
            ],
            "Eastern Europe and Former Soviet Union": [
                "100",
                "102",
                "103",
                "109",
                "111",
                "112",
                "114",
                "115",
                "122",
                "124",
                "125",
                "128",
                "129",
                "130",
                "131",
                "142",
                "144",
                "146",
                "148",
                "152",
                "153",
                "154",
                "168",
                "169",
                "170",
                "171",
                "176",
                "177",
                "178",
                "179"
            ],
            "Europe, N.E.C.": [
                "181",
                "183",
                "185",
                "187",
                "190",
                "194",
                "195"
            ],
            "Hispanic": [
                "200",
                "210",
                "211",
                "212",
                "213",
                "215",
                "218",
                "219",
                "250",
                "251",
                "252",
                "261",
                "271",
                "275",
                "290",
                "291",
                "295"
            ],
            "Hispanic - Central American": [
                "221",
                "222",
                "223",
                "224",
                "225",
                "226",
                "227"
            ],
            "Hispanic - South America": [
                "231",
                "232",
                "233",
                "234",
                "235",
                "236",
                "237",
                "238",
                "239",
                "249"
            ],
            "West Indies (Except Hispanic)": [
                "300",
                "301",
                "302",
                "308",
                "310",
                "314",
                "322",
                "325",
                "329",
                "330",
                "331",
                "335",
                "336",
                "359"
            ],
            "Central and South America": [
                "360",
                "370"
            ],
            "North Africa and South West Asia": [
                "400",
                "402",
                "406",
                "411",
                "416",
                "417",
                "419",
                "421",
                "425",
                "427",
                "429",
                "431",
                "434",
                "435",
                "442",
                "465",
                "483",
                "484",
                "490",
                "495",
                "496",
                "499"
            ],
            "Subsaharan Africa": [
                "508",
                "510",
                "515",
                "522",
                "523",
                "529",
                "534",
                "541",
                "553",
                "564",
                "566",
                "568",
                "570",
                "576",
                "587",
                "588",
                "598",
                "599"
            ],
            "South Asia": [
                "600",
                "603",
                "607",
                "609",
                "615",
                "618",
                "620",
                "650",
                "680",
                "690"
            ],
            "Other Asia": [
                "700",
                "703",
                "706",
                "707",
                "712",
                "714",
                "720",
                "730",
                "740",
                "748",
                "750",
                "765",
                "768",
                "770",
                "776",
                "782",
                "785",
                "793",
                "795",
                "799"
            ],
            "Pacific": [
                "800",
                "803",
                "808",
                "811",
                "814",
                "815",
                "820",
                "821",
                "822",
                "825",
                "841",
                "850",
                "899"
            ],
            "North America (Except Hispanic)": [
                "900",
                "901",
                "902",
                "903",
                "904",
                "907",
                "913",
                "914",
                "917",
                "918",
                "919",
                "920",
                "921",
                "922",
                "924",
                "925",
                "927",
                "929",
                "931",
                "935",
                "937",
                "939",
                "940",
                "983",
                "994"
            ],
            "Residual and No Response": [
                "995",
                "996",
                "997",
                "998",
                "999"
            ]
        },
        "feature_notes": "Western Europe",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "ANC1P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "088": 19,
                    "939": 109,
                    "050": 12,
                    "022": 6,
                    "999": 115,
                    "148": 37,
                    "097": 23,
                    "935": 108,
                    "021": 5,
                    "051": 13,
                    "032": 9,
                    "142": 34,
                    "012": 3,
                    "003": 0,
                    "091": 21,
                    "082": 16,
                    "996": 112,
                    "924": 104,
                    "925": 105,
                    "026": 8,
                    "195": 50,
                    "190": 49,
                    "918": 101,
                    "740": 88,
                    "210": 51,
                    "931": 107,
                    "144": 35,
                    "917": 100,
                    "275": 62,
                    "094": 22,
                    "087": 18,
                    "940": 110,
                    "902": 98,
                    "187": 48,
                    "995": 111,
                    "129": 32,
                    "920": 103,
                    "089": 20,
                    "615": 83,
                    "998": 114,
                    "171": 41,
                    "125": 31,
                    "750": 89,
                    "795": 93,
                    "706": 85,
                    "011": 2,
                    "271": 61,
                    "046": 11,
                    "222": 53,
                    "176": 42,
                    "084": 17,
                    "261": 60,
                    "232": 57,
                    "098": 24,
                    "183": 46,
                    "177": 43,
                    "111": 27,
                    "782": 91,
                    "211": 52,
                    "020": 4,
                    "425": 69,
                    "522": 75,
                    "290": 63,
                    "154": 40,
                    "903": 99,
                    "068": 14,
                    "811": 96,
                    "233": 58,
                    "024": 7,
                    "431": 71,
                    "115": 30,
                    "814": 97,
                    "434": 72,
                    "495": 74,
                    "109": 26,
                    "008": 1,
                    "929": 106,
                    "997": 113,
                    "785": 92,
                    "568": 77,
                    "291": 64,
                    "114": 29,
                    "803": 95,
                    "185": 47,
                    "308": 65,
                    "720": 86,
                    "429": 70,
                    "442": 73,
                    "529": 76,
                    "336": 66,
                    "130": 33,
                    "153": 39,
                    "225": 55,
                    "919": 102,
                    "178": 44,
                    "730": 87,
                    "112": 28,
                    "800": 94,
                    "146": 36,
                    "776": 90,
                    "587": 79,
                    "419": 68,
                    "152": 38,
                    "599": 80,
                    "077": 15,
                    "703": 84,
                    "100": 25,
                    "040": 10,
                    "223": 54,
                    "231": 56,
                    "181": 45,
                    "235": 59,
                    "607": 81,
                    "609": 82,
                    "416": 67,
                    "570": 78
                },
                "alpha": 0.04310344827586207
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC"
        ]
    },
    "ANC2P": {
        "feature_desc": "Recoded Detailed Ancestry - second entry (3 digit code leading zeros)",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Western Europe": [
                "001",
                "003",
                "005",
                "008",
                "009",
                "011",
                "012",
                "020",
                "021",
                "022",
                "024",
                "026",
                "032",
                "040",
                "046",
                "049",
                "050",
                "051",
                "068",
                "077",
                "078",
                "082",
                "084",
                "087",
                "088",
                "089",
                "091",
                "094",
                "097",
                "098",
                "099"
            ],
            "Eastern Europe and Former Soviet Union": [
                "100",
                "102",
                "103",
                "109",
                "111",
                "112",
                "114",
                "115",
                "122",
                "124",
                "125",
                "128",
                "129",
                "130",
                "131",
                "142",
                "144",
                "146",
                "148",
                "152",
                "153",
                "154",
                "168",
                "169",
                "170",
                "171",
                "176",
                "177",
                "178",
                "179"
            ],
            "Europe, N.E.C.": [
                "181",
                "183",
                "185",
                "187",
                "190",
                "194",
                "195"
            ],
            "Hispanic": [
                "200",
                "210",
                "211",
                "212",
                "213",
                "215",
                "218",
                "219",
                "250",
                "251",
                "252",
                "261",
                "271",
                "275",
                "290",
                "291",
                "295"
            ],
            "Hispanic - Central American": [
                "221",
                "222",
                "223",
                "224",
                "225",
                "226",
                "227"
            ],
            "Hispanic - South America": [
                "231",
                "232",
                "233",
                "234",
                "235",
                "236",
                "237",
                "238",
                "239",
                "249"
            ],
            "West Indies (Except Hispanic)": [
                "300",
                "301",
                "302",
                "308",
                "310",
                "314",
                "322",
                "325",
                "329",
                "330",
                "331",
                "335",
                "336",
                "359"
            ],
            "Central and South America": [
                "360",
                "370"
            ],
            "North Africa and South West Asia": [
                "400",
                "402",
                "406",
                "411",
                "416",
                "417",
                "419",
                "421",
                "425",
                "427",
                "429",
                "431",
                "434",
                "435",
                "442",
                "465",
                "483",
                "484",
                "490",
                "495",
                "496",
                "499"
            ],
            "Subsaharan Africa": [
                "508",
                "510",
                "515",
                "522",
                "523",
                "529",
                "534",
                "541",
                "553",
                "564",
                "566",
                "568",
                "570",
                "576",
                "587",
                "588",
                "598",
                "599"
            ],
            "South Asia": [
                "600",
                "603",
                "607",
                "609",
                "615",
                "618",
                "620",
                "650",
                "680",
                "690"
            ],
            "Other Asia": [
                "700",
                "703",
                "706",
                "707",
                "712",
                "714",
                "720",
                "730",
                "740",
                "748",
                "750",
                "765",
                "768",
                "770",
                "776",
                "782",
                "785",
                "793",
                "795",
                "799"
            ],
            "Pacific": [
                "800",
                "803",
                "808",
                "811",
                "814",
                "815",
                "820",
                "821",
                "822",
                "825",
                "841",
                "850",
                "899"
            ],
            "North America (Except Hispanic)": [
                "900",
                "901",
                "902",
                "903",
                "904",
                "907",
                "913",
                "914",
                "917",
                "918",
                "919",
                "920",
                "921",
                "922",
                "924",
                "925",
                "927",
                "929",
                "931",
                "935",
                "937",
                "939",
                "940",
                "983",
                "994"
            ],
            "Residual and No Response": [
                "995",
                "996",
                "997",
                "998",
                "999"
            ]
        },
        "feature_notes": "Western Europe",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "ANC2P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "935": 83,
                    "999": 88,
                    "931": 82,
                    "917": 76,
                    "088": 17,
                    "050": 11,
                    "026": 8,
                    "084": 15,
                    "097": 21,
                    "032": 9,
                    "051": 12,
                    "918": 77,
                    "089": 18,
                    "939": 84,
                    "022": 6,
                    "129": 28,
                    "142": 29,
                    "570": 57,
                    "091": 19,
                    "271": 47,
                    "261": 46,
                    "021": 5,
                    "082": 14,
                    "190": 38,
                    "187": 37,
                    "003": 0,
                    "740": 65,
                    "087": 16,
                    "995": 86,
                    "171": 34,
                    "920": 79,
                    "111": 25,
                    "336": 50,
                    "012": 3,
                    "011": 2,
                    "720": 63,
                    "144": 30,
                    "919": 78,
                    "125": 26,
                    "094": 20,
                    "210": 42,
                    "222": 44,
                    "020": 4,
                    "998": 87,
                    "924": 80,
                    "148": 31,
                    "929": 81,
                    "291": 48,
                    "024": 7,
                    "782": 68,
                    "200": 41,
                    "431": 54,
                    "109": 24,
                    "706": 61,
                    "077": 13,
                    "099": 23,
                    "237": 45,
                    "194": 39,
                    "128": 27,
                    "176": 35,
                    "195": 40,
                    "442": 56,
                    "730": 64,
                    "152": 32,
                    "902": 75,
                    "046": 10,
                    "750": 66,
                    "098": 22,
                    "785": 69,
                    "425": 52,
                    "940": 85,
                    "211": 43,
                    "308": 49,
                    "434": 55,
                    "808": 71,
                    "776": 67,
                    "811": 72,
                    "899": 74,
                    "821": 73,
                    "153": 33,
                    "183": 36,
                    "419": 51,
                    "599": 59,
                    "429": 53,
                    "576": 58,
                    "712": 62,
                    "008": 1,
                    "703": 60,
                    "800": 70
                },
                "alpha": 0.056179775280898875
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P"
        ]
    },
    "DECADE": {
        "feature_desc": "Decade of entry",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Before 1950": "1",
            "1950-1959": "2",
            "1960-1969": "3",
            "1970-1979": "4",
            "1980-1989": "5",
            "1990-1999": "6",
            "2000 or later": "7"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DECADE",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P"
        ]
    },
    "DIS": {
        "feature_desc": "Disability recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "With a disability": "1",
            "Without a disability": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DIS",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE"
        ]
    },
    "DRIVESP": {
        "feature_desc": "Number of vehicles calculated from JWRI",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "1.000 vehicles (Drove alone)": "1",
            "0.500 vehicles (In a 2-person carpool)": "2",
            "0.333 vehicles (In a 3-person carpool)": "3",
            "0.250 vehicles (In a 4-person carpool)": "4",
            "0.200 vehicles (In a 5- or 6-person carpool)": "5",
            "0.143 vehicles (In a 7-or-more person carpool)": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "DRIVESP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS"
        ]
    },
    "ESP": {
        "feature_desc": "Employment status of parents",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Both parents in labor force": "1",
            "Father only in labor force": "2",
            "Mother only in labor force": "3",
            "Neither parent in labor force, Living with one parent, Living with father": "4",
            "Father in the labor force": "5",
            "Father not in labor force, Living with mother": "6",
            "Mother in the labor force": "7",
            "Mother not in labor force": "8"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "ESP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP"
        ]
    },
    "ESR": {
        "feature_desc": "Employment status recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Civilian employed, at work": "1",
            "Civilian employed, with a job but not at work": "2",
            "Unemployed": "3",
            "Armed forces, at work": "4",
            "Armed forces, with a job but not at work": "5",
            "Not in labor force": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "ESR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP"
        ]
    },
    "FOD1P": {
        "feature_desc": "Recoded field of degree - first entry",
        "feature_type": "obj",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Biological, Agricultural, and Envirnomental Sciences": [
                "1100",
                "1101",
                "1102",
                "1103",
                "1104",
                "1105",
                "1106",
                "1199",
                "1301",
                "1302",
                "1303",
                "3600",
                "3601",
                "3602",
                "3603",
                "3604",
                "3605",
                "3606",
                "3607",
                "3608",
                "3609",
                "3611",
                "3699"
            ],
            "Science and Engineering Related Fields": [
                "1401",
                "2305",
                "2308",
                "2500",
                "2501",
                "2502",
                "2503",
                "2504",
                "2599",
                "5102",
                "6100",
                "6102",
                "6103",
                "6104",
                "6105",
                "6106",
                "6107",
                "6108",
                "6109",
                "6110",
                "6199"
            ],
            "Social Science": [
                "1501",
                "5500",
                "5501",
                "5502",
                "5503",
                "5504",
                "5505",
                "5506",
                "5507",
                "5599"
            ],
            "Communications": [
                "1901",
                "1902",
                "1903",
                "1904",
                "2001"
            ],
            "Computers, Mathematics and Statistics": [
                "2100",
                "2101",
                "2102",
                "2105",
                "2106",
                "2107",
                "3700",
                "3701",
                "3702"
            ],
            "Other": [
                "2201",
                "2901",
                "3202",
                "3501",
                "3801",
                "4101",
                "5301",
                "5401",
                "5402",
                "5403",
                "5404",
                "5601",
                "5701",
                "5901"
            ],
            "Education": [
                "2300",
                "2301",
                "2303",
                "2304",
                "2306",
                "2307",
                "2309",
                "2310",
                "2311",
                "2312",
                "2313",
                "2314",
                "2399"
            ],
            "Engineering": [
                "2400",
                "2401",
                "2402",
                "2403",
                "2404",
                "2405",
                "2406",
                "2407",
                "2408",
                "2409",
                "2410",
                "2411",
                "2412",
                "2413",
                "2414",
                "2415",
                "2416",
                "2417",
                "2418",
                "2419",
                "2499"
            ],
            "Literature and Languages": [
                "2601",
                "2602",
                "2603",
                "3301",
                "3302"
            ],
            "Business": [
                "3201",
                "6200",
                "6201",
                "6202",
                "6203",
                "6204",
                "6205",
                "6206",
                "6207",
                "6209",
                "6210",
                "6211",
                "6212",
                "6299"
            ],
            "Liberal Arts and History": [
                "3401",
                "3402",
                "4801",
                "4901",
                "6402",
                "6403"
            ],
            "Multi-Disciplinary Studies": [
                "4000",
                "4001",
                "4002",
                "4005",
                "4006",
                "4007"
            ],
            "Physical and Related Science": [
                "5000",
                "5001",
                "5002",
                "5003",
                "5004",
                "5005",
                "5006",
                "5007",
                "5008",
                "5098"
            ],
            "Psychology": [
                "5200",
                "5201",
                "5202",
                "5203",
                "5205",
                "5206",
                "5299"
            ],
            "Visual and Performing Arts": [
                "6000",
                "6001",
                "6002",
                "6003",
                "6004",
                "6005",
                "6006",
                "6007",
                "6099"
            ]
        },
        "feature_notes": "4 digit number stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "FOD1P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "2414": 47,
                    "2307": 26,
                    "5506": 101,
                    "2309": 28,
                    "6203": 127,
                    "6209": 132,
                    "1302": 6,
                    "5501": 96,
                    "5200": 87,
                    "3700": 70,
                    "2313": 32,
                    "5003": 81,
                    "6204": 128,
                    "6107": 120,
                    "3601": 61,
                    "5007": 85,
                    "3600": 60,
                    "6109": 122,
                    "2406": 40,
                    "5005": 83,
                    "6402": 136,
                    "3401": 57,
                    "6005": 110,
                    "1901": 10,
                    "1902": 11,
                    "1301": 5,
                    "3301": 55,
                    "5404": 94,
                    "5006": 84,
                    "6200": 125,
                    "3604": 64,
                    "6002": 107,
                    "2304": 23,
                    "5098": 86,
                    "6007": 112,
                    "4801": 78,
                    "1501": 9,
                    "5301": 91,
                    "2300": 21,
                    "2402": 37,
                    "5004": 82,
                    "2311": 30,
                    "5507": 102,
                    "1103": 3,
                    "4101": 77,
                    "6201": 126,
                    "3302": 56,
                    "6003": 108,
                    "6206": 130,
                    "6105": 118,
                    "6100": 114,
                    "5502": 97,
                    "6000": 105,
                    "6207": 131,
                    "2601": 50,
                    "2306": 25,
                    "3602": 62,
                    "4005": 75,
                    "6211": 134,
                    "2413": 46,
                    "6106": 119,
                    "6103": 116,
                    "2400": 35,
                    "5201": 88,
                    "3699": 69,
                    "6210": 133,
                    "4001": 73,
                    "2408": 42,
                    "2602": 51,
                    "2100": 15,
                    "6102": 115,
                    "6006": 111,
                    "5002": 80,
                    "2901": 53,
                    "6004": 109,
                    "2409": 43,
                    "1101": 1,
                    "1100": 0,
                    "2102": 17,
                    "4007": 76,
                    "3501": 59,
                    "6001": 106,
                    "1105": 4,
                    "4002": 74,
                    "5403": 93,
                    "6199": 124,
                    "1303": 7,
                    "2310": 29,
                    "2401": 36,
                    "2305": 24,
                    "3606": 66,
                    "2407": 41,
                    "2314": 33,
                    "6108": 121,
                    "1401": 8,
                    "3611": 68,
                    "3609": 67,
                    "2412": 45,
                    "5601": 103,
                    "6110": 123,
                    "2399": 34,
                    "5402": 92,
                    "6099": 113,
                    "5504": 99,
                    "5500": 95,
                    "1903": 12,
                    "2405": 39,
                    "3402": 58,
                    "2312": 31,
                    "2001": 14,
                    "4000": 72,
                    "5203": 89,
                    "5901": 104,
                    "3605": 65,
                    "5505": 100,
                    "3603": 63,
                    "2403": 38,
                    "2603": 52,
                    "3202": 54,
                    "2201": 20,
                    "6104": 117,
                    "1904": 13,
                    "2105": 18,
                    "4901": 79,
                    "2101": 16,
                    "2499": 48,
                    "6299": 135,
                    "6205": 129,
                    "2410": 44,
                    "2107": 19,
                    "2599": 49,
                    "5503": 98,
                    "5299": 90,
                    "2308": 27,
                    "3702": 71,
                    "2301": 22,
                    "1102": 2
                },
                "alpha": 0.036231884057971016
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR"
        ]
    },
    "FOD2P": {
        "feature_desc": "Recoded field of degree - second entry",
        "feature_type": "obj",
        "field_length": 4,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Biological, Agricultural, and Envirnomental Sciences": [
                "1100",
                "1101",
                "1102",
                "1103",
                "1104",
                "1105",
                "1106",
                "1199",
                "1301",
                "1302",
                "1303",
                "3600",
                "3601",
                "3602",
                "3603",
                "3604",
                "3605",
                "3606",
                "3607",
                "3608",
                "3609",
                "3611",
                "3699"
            ],
            "Science and Engineering Related Fields": [
                "1401",
                "2305",
                "2308",
                "2500",
                "2501",
                "2502",
                "2503",
                "2504",
                "2599",
                "5102",
                "6100",
                "6102",
                "6103",
                "6104",
                "6105",
                "6106",
                "6107",
                "6108",
                "6109",
                "6110",
                "6199"
            ],
            "Social Science": [
                "1501",
                "5500",
                "5501",
                "5502",
                "5503",
                "5504",
                "5505",
                "5506",
                "5507",
                "5599"
            ],
            "Communications": [
                "1901",
                "1902",
                "1903",
                "1904",
                "2001"
            ],
            "Computers, Mathematics and Statistics": [
                "2100",
                "2101",
                "2102",
                "2105",
                "2106",
                "2107",
                "3700",
                "3701",
                "3702"
            ],
            "Other": [
                "2201",
                "2901",
                "3202",
                "3501",
                "3801",
                "4101",
                "5301",
                "5401",
                "5402",
                "5403",
                "5404",
                "5601",
                "5701",
                "5901"
            ],
            "Education": [
                "2300",
                "2301",
                "2303",
                "2304",
                "2306",
                "2307",
                "2309",
                "2310",
                "2311",
                "2312",
                "2313",
                "2314",
                "2399"
            ],
            "Engineering": [
                "2400",
                "2401",
                "2402",
                "2403",
                "2404",
                "2405",
                "2406",
                "2407",
                "2408",
                "2409",
                "2410",
                "2411",
                "2412",
                "2413",
                "2414",
                "2415",
                "2416",
                "2417",
                "2418",
                "2419",
                "2499"
            ],
            "Literature and Languages": [
                "2601",
                "2602",
                "2603",
                "3301",
                "3302"
            ],
            "Business": [
                "3201",
                "6200",
                "6201",
                "6202",
                "6203",
                "6204",
                "6205",
                "6206",
                "6207",
                "6209",
                "6210",
                "6211",
                "6212",
                "6299"
            ],
            "Liberal Arts and History": [
                "3401",
                "3402",
                "4801",
                "4901",
                "6402",
                "6403"
            ],
            "Multi-Disciplinary Studies": [
                "4000",
                "4001",
                "4002",
                "4005",
                "4006",
                "4007"
            ],
            "Physical and Related Science": [
                "5000",
                "5001",
                "5002",
                "5003",
                "5004",
                "5005",
                "5006",
                "5007",
                "5008",
                "5098"
            ],
            "Psychology": [
                "5200",
                "5201",
                "5202",
                "5203",
                "5205",
                "5206",
                "5299"
            ],
            "Visual and Performing Arts": [
                "6000",
                "6001",
                "6002",
                "6003",
                "6004",
                "6005",
                "6006",
                "6007",
                "6099"
            ]
        },
        "feature_notes": "4 digit number stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "FOD2P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "2402": 25,
                    "2305": 17,
                    "3603": 44,
                    "3600": 43,
                    "5200": 57,
                    "6402": 83,
                    "2300": 15,
                    "2310": 22,
                    "2001": 11,
                    "2602": 34,
                    "4901": 53,
                    "6200": 78,
                    "5502": 62,
                    "1903": 9,
                    "2304": 16,
                    "3301": 38,
                    "3700": 48,
                    "2901": 36,
                    "2308": 20,
                    "6107": 76,
                    "3302": 39,
                    "5501": 61,
                    "2306": 18,
                    "6203": 80,
                    "1501": 6,
                    "3501": 42,
                    "2313": 23,
                    "1301": 2,
                    "2105": 13,
                    "5506": 64,
                    "3701": 49,
                    "2408": 27,
                    "1901": 7,
                    "6001": 68,
                    "4101": 51,
                    "6000": 67,
                    "5507": 65,
                    "4801": 52,
                    "5003": 54,
                    "6201": 79,
                    "5005": 55,
                    "2102": 12,
                    "6002": 69,
                    "2603": 35,
                    "5599": 66,
                    "1902": 8,
                    "2601": 33,
                    "1401": 5,
                    "5203": 58,
                    "6199": 77,
                    "4007": 50,
                    "2412": 29,
                    "2410": 28,
                    "3606": 45,
                    "3401": 40,
                    "5505": 63,
                    "1303": 4,
                    "2414": 30,
                    "6106": 75,
                    "3202": 37,
                    "6206": 81,
                    "2309": 21,
                    "1106": 1,
                    "2407": 26,
                    "5403": 59,
                    "2500": 32,
                    "3699": 47,
                    "1302": 3,
                    "2499": 31,
                    "6207": 82,
                    "2399": 24,
                    "3402": 41,
                    "5098": 56,
                    "1904": 10,
                    "3608": 46,
                    "2307": 19,
                    "6102": 73,
                    "6103": 74,
                    "5404": 60,
                    "2106": 14,
                    "1105": 0,
                    "6005": 71,
                    "6004": 70,
                    "6006": 72
                },
                "alpha": 0.058823529411764705
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P"
        ]
    },
    "HICOV": {
        "feature_desc": "Health insurance coverage recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "With health insurance coverage": "1",
            "No health insurance coverage": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "HICOV",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P"
        ]
    },
    "HISP": {
        "feature_desc": "Recoded detailed Hispanic origin",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "Not Spanish/Hispanic/Latino": "01",
            "Mexican": "02",
            "Puerto Rican": "03",
            "Cuban": "04",
            "Dominican": "05",
            "Costa Rican": "06",
            "Guatemalan": "07",
            "Honduran": "08",
            "Nicaraguan": "09",
            "Panamanian": "10",
            "Salvadoran": "11",
            "Other Central American": "12",
            "Argentinean": "13",
            "Bolivian": "14",
            "Chilean": "15",
            "Colombian": "16",
            "Ecuadorian": "17",
            "Paraguayan": "18",
            "Peruvian": "19",
            "Uruguayan": "20",
            "Venezuelan": "21",
            "Other South American": "22",
            "Spaniard": "23",
            "All Other Spanish/Hispanic/Latino": "24"
        },
        "feature_notes": "2 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "HISP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "01": 0,
                    "04": 3,
                    "05": 4,
                    "02": 1,
                    "07": 5,
                    "03": 2,
                    "14": 7,
                    "23": 13,
                    "24": 14,
                    "21": 12,
                    "16": 9,
                    "19": 11,
                    "15": 8,
                    "13": 6,
                    "17": 10
                },
                "alpha": 0.3333333333333333
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV"
        ]
    },
    "INDP": {
        "feature_desc": "Industry recode for 2013 and later based on 2012 IND codes (4 digit code with leading zeros)",
        "feature_type": "obj",
        "field_length": 4,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Agriculture, Forestry, Fishing, and Hunting": [
                "0170",
                "0180",
                "0190",
                "0270",
                "0280",
                "0290"
            ],
            "Mining, Quarrying, and Oil and Gas Extraction": [
                "0370",
                "0380",
                "0390",
                "0470",
                "0490"
            ],
            "Utilities": [
                "0570",
                "0580",
                "0590",
                "0670",
                "0680",
                "0690"
            ],
            "Construction": [
                "0770"
            ],
            "Manufacturing": [
                "1070",
                "1080",
                "1090",
                "1170",
                "1180",
                "1190",
                "1270",
                "1280",
                "1290",
                "1370",
                "1390",
                "1470",
                "1480",
                "1490",
                "1570",
                "1590",
                "1670",
                "1680",
                "1690",
                "1770",
                "1790",
                "1870",
                "1880",
                "1890",
                "1990",
                "2070",
                "2090",
                "2170",
                "2180",
                "2190",
                "2270",
                "2280",
                "2290",
                "2370",
                "2380",
                "2390",
                "2470",
                "2480",
                "2490",
                "2570",
                "2590",
                "2670",
                "2680",
                "2690",
                "2770",
                "2780",
                "2790",
                "2870",
                "2880",
                "2890",
                "2970",
                "2980",
                "2990",
                "3070",
                "3080",
                "3095",
                "3170",
                "3180",
                "3190",
                "3365",
                "3370",
                "3380",
                "3390",
                "3470",
                "3490",
                "3570",
                "3580",
                "3590",
                "3670",
                "3680",
                "3690",
                "3770",
                "3780",
                "3790",
                "3875",
                "3895",
                "3960",
                "3970",
                "3980",
                "3990"
            ],
            "Wholesale Trade": [
                "4070",
                "4080",
                "4090",
                "4170",
                "4180",
                "4195",
                "4265",
                "4270",
                "4280",
                "4290",
                "4370",
                "4380",
                "4390",
                "4470",
                "4480",
                "4490",
                "4560",
                "4570",
                "4580",
                "4585",
                "4590"
            ],
            "Retail Trade": [
                "4670",
                "4680",
                "4690",
                "4770",
                "4780",
                "4795",
                "4870",
                "4880",
                "4890",
                "4970",
                "4980",
                "4990",
                "5070",
                "5080",
                "5090",
                "5170",
                "5180",
                "5190",
                "5275",
                "5280",
                "5295",
                "5370",
                "5380",
                "5390",
                "5470",
                "5480",
                "5490",
                "5570",
                "5580",
                "5590",
                "5591",
                "5592",
                "5670",
                "5680",
                "5690",
                "5790"
            ],
            "Transportation and Warehousing": [
                "6070",
                "6080",
                "6090",
                "6170",
                "6180",
                "6190",
                "6270",
                "6280",
                "6290",
                "6370",
                "6380",
                "6390"
            ],
            "Information": [
                "6470",
                "6480",
                "6490",
                "6570",
                "6590",
                "6670",
                "6672",
                "6680",
                "6690",
                "6695",
                "6770",
                "6780"
            ],
            "Finance and Insurance": [
                "6870",
                "6880",
                "6890",
                "6970",
                "6990"
            ],
            "Real Estate and Rental and Leasing": [
                "7070",
                "7080",
                "7170",
                "7180",
                "7190"
            ],
            "Professional, Scientific, and Technical Services": [
                "7270",
                "7280",
                "7290",
                "7370",
                "7380",
                "7390",
                "7460",
                "7470",
                "7480",
                "7490"
            ],
            "Management of companies and enterprises": [
                "7570"
            ],
            "Administrative and support and waste management services": [
                "7580",
                "7590",
                "7670",
                "7680",
                "7690",
                "7770",
                "7780",
                "7790"
            ],
            "Educational Services": [
                "7860",
                "7870",
                "7880",
                "7890"
            ],
            "Health Care and Social Assistance": [
                "7970",
                "7980",
                "7990",
                "8070",
                "8080",
                "8090",
                "8170",
                "8180",
                "8190",
                "8270",
                "8290",
                "8370",
                "8380",
                "8390",
                "8470"
            ],
            "Arts, Entertainment, and Recreation": [
                "8560",
                "8570",
                "8580",
                "8590"
            ],
            "Accommodation and Food Service": [
                "8660",
                "8670",
                "8680",
                "8690"
            ],
            "Other Services, Except Public Administration": [
                "8770",
                "8780",
                "8790",
                "8870",
                "8880",
                "8970",
                "8980",
                "8990",
                "9070",
                "9080",
                "9090",
                "9160",
                "9170",
                "9180",
                "9190",
                "9290"
            ],
            "Public Administration": [
                "9370",
                "9380",
                "9390",
                "9470",
                "9480",
                "9490",
                "9570",
                "9590"
            ],
            "Active Duty Military": [
                "9670",
                "9680",
                "9690",
                "9770",
                "9780",
                "9790",
                "9870"
            ],
            "Unemployed **": [
                "9920"
            ]
        },
        "feature_notes": "Census INDP codes  are cross referenced with the NAICS codes which are a Federal standard for classifying occupation codes.  They will have the same descriptive classifications.  For more information on Industry Coding, see the Industry Coding tab.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "INDP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3980": 76,
                    "9370": 223,
                    "6170": 135,
                    "4970": 105,
                    "8590": 203,
                    "7860": 182,
                    "None": -1,
                    "1590": 25,
                    "8660": 204,
                    "5275": 114,
                    "7070": 159,
                    "0180": 1,
                    "5790": 131,
                    "8560": 201,
                    "3895": 73,
                    "9470": 226,
                    "8190": 194,
                    "8680": 206,
                    "6570": 146,
                    "5170": 111,
                    "8170": 192,
                    "4890": 104,
                    "0470": 6,
                    "4090": 80,
                    "7870": 183,
                    "0770": 12,
                    "6990": 158,
                    "4880": 103,
                    "4560": 92,
                    "8090": 191,
                    "4770": 99,
                    "6370": 140,
                    "8770": 208,
                    "7770": 179,
                    "6770": 152,
                    "7970": 186,
                    "7290": 165,
                    "0190": 2,
                    "6180": 136,
                    "4990": 107,
                    "6480": 144,
                    "1990": 33,
                    "3095": 56,
                    "7470": 170,
                    "0170": 0,
                    "4870": 102,
                    "7480": 171,
                    "0570": 8,
                    "7680": 177,
                    "6090": 134,
                    "3875": 72,
                    "5080": 109,
                    "4670": 96,
                    "2880": 50,
                    "3580": 67,
                    "2980": 53,
                    "6670": 147,
                    "8470": 200,
                    "6290": 139,
                    "7890": 185,
                    "7980": 187,
                    "0270": 3,
                    "9590": 230,
                    "3960": 74,
                    "9190": 221,
                    "5070": 108,
                    "6970": 157,
                    "7790": 181,
                    "5570": 123,
                    "6380": 141,
                    "9170": 220,
                    "9290": 222,
                    "3190": 59,
                    "4680": 97,
                    "7370": 166,
                    "8270": 195,
                    "5592": 127,
                    "8290": 196,
                    "3170": 57,
                    "8080": 190,
                    "7270": 163,
                    "8670": 205,
                    "8870": 211,
                    "5680": 129,
                    "5590": 125,
                    "6870": 154,
                    "8780": 209,
                    "6880": 155,
                    "8980": 214,
                    "7670": 176,
                    "7690": 178,
                    "8370": 197,
                    "7180": 161,
                    "4270": 84,
                    "1170": 16,
                    "5580": 124,
                    "1670": 26,
                    "2390": 40,
                    "9480": 227,
                    "9070": 216,
                    "7390": 168,
                    "4980": 106,
                    "3490": 65,
                    "8570": 202,
                    "5390": 119,
                    "4795": 101,
                    "6470": 143,
                    "3770": 69,
                    "4585": 95,
                    "3970": 75,
                    "7990": 188,
                    "6080": 133,
                    "5090": 110,
                    "5490": 122,
                    "4470": 90,
                    "4070": 78,
                    "1070": 13,
                    "9090": 218,
                    "2790": 48,
                    "1280": 20,
                    "9380": 224,
                    "3390": 63,
                    "6672": 148,
                    "5180": 112,
                    "1370": 22,
                    "7590": 175,
                    "7080": 160,
                    "7380": 167,
                    "9160": 219,
                    "9570": 229,
                    "2590": 44,
                    "4290": 86,
                    "1680": 27,
                    "7580": 174,
                    "2970": 52,
                    "1870": 30,
                    "2290": 38,
                    "8970": 213,
                    "6890": 156,
                    "8880": 212,
                    "4780": 100,
                    "5380": 118,
                    "1270": 19,
                    "6695": 151,
                    "6680": 149,
                    "7570": 173,
                    "8070": 189,
                    "9920": 235,
                    "9490": 228,
                    "8180": 193,
                    "0280": 4,
                    "9390": 225,
                    "3070": 54,
                    "7780": 180,
                    "1190": 18,
                    "2670": 45,
                    "2170": 34,
                    "5591": 126,
                    "5190": 113,
                    "2890": 51,
                    "2280": 37,
                    "8390": 199,
                    "3380": 62,
                    "5370": 117,
                    "2770": 47,
                    "5480": 121,
                    "5690": 130,
                    "7280": 164,
                    "5670": 128,
                    "3780": 70,
                    "6690": 150,
                    "8690": 207,
                    "1290": 21,
                    "7460": 169,
                    "2370": 39,
                    "3570": 66,
                    "0680": 11,
                    "4280": 85,
                    "4690": 98,
                    "6390": 142,
                    "5280": 115,
                    "4180": 82,
                    "2190": 36,
                    "4390": 89,
                    "4080": 79,
                    "3990": 77,
                    "9690": 233,
                    "4170": 81,
                    "0490": 7,
                    "3365": 60,
                    "1180": 17,
                    "2570": 43,
                    "3470": 64,
                    "8990": 215,
                    "9680": 232,
                    "6190": 137,
                    "4570": 93,
                    "7490": 172,
                    "7880": 184,
                    "3590": 68,
                    "5295": 116,
                    "1090": 15,
                    "8380": 198,
                    "2490": 42,
                    "2690": 46,
                    "6070": 132,
                    "0290": 5,
                    "4380": 88,
                    "7190": 162,
                    "1790": 29,
                    "1480": 24,
                    "4490": 91,
                    "6780": 153,
                    "4580": 94,
                    "9080": 217,
                    "1470": 23,
                    "1770": 28,
                    "3370": 61,
                    "3180": 58,
                    "1080": 14,
                    "0670": 10,
                    "3080": 55,
                    "2180": 35,
                    "4370": 87,
                    "9670": 231,
                    "5470": 120,
                    "9870": 234,
                    "1880": 31,
                    "3790": 71,
                    "2470": 41,
                    "1890": 32,
                    "0580": 9,
                    "8790": 210,
                    "4265": 83,
                    "6490": 145,
                    "6280": 138,
                    "2870": 49
                },
                "alpha": 0.02109704641350211
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP"
        ]
    },
    "JWAP": {
        "feature_desc": "Time of arrival at work - hour and minute",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "12 to 12:59 am": [
                "001",
                "002",
                "003",
                "004",
                "005",
                "006",
                "007",
                "008",
                "009",
                "010"
            ],
            "1 to 1:59 am": [
                "011",
                "012",
                "013",
                "014",
                "015",
                "016",
                "017",
                "018",
                "019",
                "020",
                "021"
            ],
            "2 to 2:59 am": [
                "022",
                "023",
                "024",
                "025",
                "026",
                "027",
                "028",
                "029",
                "030",
                "031",
                "032",
                "033"
            ],
            "3 to 3:59 am": [
                "034",
                "035",
                "036",
                "037",
                "038",
                "039",
                "040",
                "041",
                "042",
                "043",
                "044",
                "045"
            ],
            "4 to 4:59 am": [
                "046",
                "047",
                "048",
                "049",
                "050",
                "051",
                "052",
                "053",
                "054",
                "055",
                "056",
                "057"
            ],
            "5 to 5:59 am": [
                "058",
                "059",
                "060",
                "061",
                "062",
                "063",
                "064",
                "065",
                "066",
                "067",
                "068",
                "069"
            ],
            "6 to 6:59 am": [
                "070",
                "071",
                "072",
                "073",
                "074",
                "075",
                "076",
                "077",
                "078",
                "079",
                "080",
                "081"
            ],
            "7 to 7:59 am": [
                "082",
                "083",
                "084",
                "085",
                "086",
                "087",
                "088",
                "089",
                "090",
                "091",
                "092",
                "093"
            ],
            "8 to 8:59 am": [
                "094",
                "095",
                "096",
                "097",
                "098",
                "099",
                "100",
                "101",
                "102",
                "103",
                "104",
                "105"
            ],
            "9 to 9:59 am": [
                "106",
                "107",
                "108",
                "109",
                "110",
                "111",
                "112",
                "113",
                "114",
                "115",
                "116",
                "117"
            ],
            "10 to 10:59 am": [
                "118",
                "119",
                "120",
                "121",
                "122",
                "123",
                "124",
                "125",
                "126",
                "127",
                "128",
                "129"
            ],
            "11 to 11:59 am": [
                "130",
                "131",
                "132",
                "133",
                "134",
                "135",
                "136",
                "137",
                "138",
                "139",
                "140",
                "141"
            ],
            "12 to 10:59 am": [
                "142",
                "143",
                "144",
                "145",
                "146",
                "147",
                "148",
                "149",
                "150",
                "151",
                "152",
                "153"
            ],
            "1 to 1:59 pm": [
                "154",
                "155",
                "156",
                "157",
                "158",
                "159",
                "160",
                "161",
                "162",
                "163",
                "164",
                "165"
            ],
            "2 to 2:59 pm": [
                "166",
                "167",
                "168",
                "169",
                "170",
                "171",
                "172",
                "173",
                "174",
                "175",
                "176",
                "177"
            ],
            "3 to 3:59 pm": [
                "178",
                "179",
                "180",
                "181",
                "182",
                "183",
                "184",
                "185",
                "186",
                "187",
                "188",
                "189"
            ],
            "4 to 4:59 pm": [
                "190",
                "191",
                "192",
                "193",
                "194",
                "195",
                "196",
                "197",
                "198",
                "199",
                "200",
                "201"
            ],
            "5 to 5:59 pm": [
                "202",
                "203",
                "204",
                "205",
                "206",
                "207",
                "208",
                "209",
                "210",
                "211",
                "212",
                "213"
            ],
            "6 to 6:59 pm": [
                "214",
                "215",
                "216",
                "217",
                "218",
                "219",
                "220",
                "221",
                "222",
                "223",
                "224",
                "225"
            ],
            "7 to 7:59 pm": [
                "226",
                "227",
                "228",
                "229",
                "230",
                "231",
                "232",
                "233",
                "234",
                "235",
                "236",
                "237"
            ],
            "8 to 8:59 pm": [
                "238",
                "239",
                "240",
                "241",
                "242",
                "243",
                "244",
                "245",
                "246",
                "247",
                "248",
                "249"
            ],
            "9 to 9:59 pm": [
                "250",
                "251",
                "252",
                "253",
                "254",
                "255",
                "256",
                "257",
                "258",
                "259",
                "260",
                "261"
            ],
            "10 to 10:59 pm": [
                "262",
                "263",
                "264",
                "265",
                "266",
                "267",
                "268",
                "269",
                "270",
                "271",
                "272",
                "273"
            ],
            "11 to 11:59 pm": [
                "274",
                "275",
                "276",
                "277",
                "278",
                "279",
                "280",
                "281",
                "282",
                "283",
                "284",
                "285"
            ]
        },
        "feature_notes": "3 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "JWAP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "074": 48,
                    "076": 50,
                    "194": 164,
                    "115": 89,
                    "None": -1,
                    "088": 62,
                    "162": 132,
                    "108": 82,
                    "091": 65,
                    "046": 20,
                    "094": 68,
                    "093": 67,
                    "216": 184,
                    "212": 181,
                    "186": 156,
                    "110": 84,
                    "100": 74,
                    "078": 52,
                    "090": 64,
                    "079": 53,
                    "101": 75,
                    "072": 46,
                    "095": 69,
                    "125": 99,
                    "084": 58,
                    "158": 128,
                    "104": 78,
                    "092": 66,
                    "102": 76,
                    "062": 36,
                    "118": 92,
                    "103": 77,
                    "086": 60,
                    "081": 55,
                    "058": 32,
                    "106": 80,
                    "271": 218,
                    "114": 88,
                    "120": 94,
                    "065": 39,
                    "098": 72,
                    "089": 63,
                    "070": 44,
                    "151": 122,
                    "077": 51,
                    "096": 70,
                    "171": 141,
                    "163": 133,
                    "179": 149,
                    "109": 83,
                    "099": 73,
                    "068": 42,
                    "057": 31,
                    "258": 209,
                    "083": 57,
                    "165": 135,
                    "054": 28,
                    "052": 26,
                    "047": 21,
                    "211": 180,
                    "064": 38,
                    "097": 71,
                    "266": 213,
                    "071": 45,
                    "082": 56,
                    "069": 43,
                    "073": 47,
                    "167": 137,
                    "080": 54,
                    "117": 91,
                    "182": 152,
                    "213": 182,
                    "105": 79,
                    "029": 9,
                    "270": 217,
                    "156": 126,
                    "188": 158,
                    "067": 41,
                    "126": 100,
                    "190": 160,
                    "279": 222,
                    "053": 27,
                    "085": 59,
                    "060": 34,
                    "148": 120,
                    "124": 98,
                    "268": 215,
                    "164": 134,
                    "119": 93,
                    "180": 150,
                    "113": 87,
                    "223": 190,
                    "174": 144,
                    "227": 193,
                    "059": 33,
                    "244": 201,
                    "131": 105,
                    "107": 81,
                    "044": 18,
                    "169": 139,
                    "184": 154,
                    "250": 203,
                    "209": 179,
                    "264": 211,
                    "050": 24,
                    "191": 161,
                    "037": 13,
                    "087": 61,
                    "136": 110,
                    "220": 187,
                    "257": 208,
                    "202": 172,
                    "193": 163,
                    "121": 95,
                    "075": 49,
                    "112": 86,
                    "254": 206,
                    "035": 11,
                    "116": 90,
                    "207": 177,
                    "154": 124,
                    "208": 178,
                    "147": 119,
                    "177": 147,
                    "056": 30,
                    "173": 143,
                    "055": 29,
                    "187": 157,
                    "061": 35,
                    "040": 14,
                    "272": 219,
                    "176": 146,
                    "217": 185,
                    "111": 85,
                    "178": 148,
                    "175": 145,
                    "189": 159,
                    "238": 199,
                    "203": 173,
                    "051": 25,
                    "267": 214,
                    "066": 40,
                    "198": 168,
                    "157": 127,
                    "214": 183,
                    "172": 142,
                    "204": 174,
                    "192": 162,
                    "159": 129,
                    "127": 101,
                    "138": 112,
                    "142": 116,
                    "130": 104,
                    "205": 175,
                    "168": 138,
                    "122": 96,
                    "048": 22,
                    "224": 191,
                    "015": 4,
                    "001": 0,
                    "160": 130,
                    "149": 121,
                    "007": 3,
                    "274": 221,
                    "020": 5,
                    "206": 176,
                    "043": 17,
                    "161": 131,
                    "273": 220,
                    "284": 224,
                    "269": 216,
                    "135": 109,
                    "139": 113,
                    "128": 102,
                    "143": 117,
                    "028": 8,
                    "196": 166,
                    "133": 107,
                    "235": 197,
                    "063": 37,
                    "221": 188,
                    "132": 106,
                    "042": 16,
                    "004": 2,
                    "041": 15,
                    "181": 151,
                    "021": 6,
                    "228": 194,
                    "199": 169,
                    "153": 123,
                    "222": 189,
                    "049": 23,
                    "155": 125,
                    "226": 192,
                    "146": 118,
                    "140": 114,
                    "183": 153,
                    "256": 207,
                    "166": 136,
                    "137": 111,
                    "200": 170,
                    "185": 155,
                    "123": 97,
                    "036": 12,
                    "170": 140,
                    "141": 115,
                    "129": 103,
                    "247": 202,
                    "232": 196,
                    "218": 186,
                    "134": 108,
                    "195": 165,
                    "265": 212,
                    "263": 210,
                    "197": 167,
                    "045": 19,
                    "034": 10,
                    "003": 1,
                    "282": 223,
                    "230": 195,
                    "253": 205,
                    "251": 204,
                    "237": 198,
                    "242": 200,
                    "023": 7,
                    "201": 171
                },
                "alpha": 0.022123893805309734
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP"
        ]
    },
    "JWDP": {
        "feature_desc": "Time of departure for work - hour and minute",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "N/A (not a worker; worker who worked at home)": "bbb",
            "12 to 12:59 am": [
                "001",
                "002"
            ],
            "1 to 1:59 am": [
                "003",
                "004"
            ],
            "2 to 2:59 am": [
                "005",
                "006"
            ],
            "3 to 3:59 am": [
                "007",
                "008",
                "009",
                "010",
                "011",
                "012"
            ],
            "4 to 4:59 am": [
                "013",
                "014",
                "015",
                "016",
                "017",
                "018"
            ],
            "5 to 5:59 am": [
                "019",
                "020",
                "021",
                "022",
                "023",
                "024",
                "025",
                "026",
                "027",
                "028",
                "029",
                "030"
            ],
            "6 to 6:59 am": [
                "031",
                "032",
                "033",
                "034",
                "035",
                "036",
                "037",
                "038",
                "039",
                "040",
                "041",
                "042"
            ],
            "7 to 7:59 am": [
                "043",
                "044",
                "045",
                "046",
                "047",
                "048",
                "049",
                "050",
                "051",
                "052",
                "053",
                "054"
            ],
            "8 to 8:59 am": [
                "055",
                "056",
                "057",
                "058",
                "059",
                "060",
                "061",
                "062",
                "063",
                "064",
                "065",
                "066"
            ],
            "9 to 9:59 am": [
                "067",
                "068",
                "069",
                "070",
                "071",
                "072",
                "073",
                "074",
                "075",
                "076",
                "077",
                "078"
            ],
            "10 to 10:59 am": [
                "079",
                "080",
                "081",
                "082",
                "083",
                "084"
            ],
            "11 to 11:59 am": [
                "085",
                "086",
                "087",
                "088",
                "089",
                "090"
            ],
            "12 to 12:59 pm": [
                "091",
                "092",
                "093",
                "094",
                "095",
                "096"
            ],
            "1 to 1:59 pm": [
                "097",
                "098",
                "099",
                "100",
                "101",
                "102"
            ],
            "2 to 2:59 pm": [
                "103",
                "104",
                "105",
                "106",
                "107",
                "108"
            ],
            "3 to 3:59 pm": [
                "109",
                "110",
                "111",
                "112",
                "113",
                "114"
            ],
            "4 to 4:59 pm": [
                "115",
                "116",
                "117",
                "118",
                "119",
                "120"
            ],
            "5 to 5:59 pm": [
                "121",
                "122",
                "123",
                "124",
                "125",
                "126"
            ],
            "6 to 6:59 pm": [
                "127",
                "128",
                "129",
                "130",
                "131",
                "132"
            ],
            "7 to 7:59 pm": [
                "133",
                "134"
            ],
            "8 to 8:59 pm": [
                "135",
                "136"
            ],
            "9 to 9:59 pm": [
                "137",
                "138",
                "139",
                "140",
                "141",
                "142"
            ],
            "10 to 10:59 pm": [
                "143",
                "144",
                "145",
                "146",
                "147",
                "148"
            ],
            "11 to 11:59 pm": [
                "149",
                "150"
            ]
        },
        "feature_notes": "3 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "JWDP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "031": 25,
                    "025": 19,
                    "115": 102,
                    "067": 60,
                    "None": -1,
                    "043": 37,
                    "098": 88,
                    "047": 41,
                    "013": 8,
                    "049": 43,
                    "037": 31,
                    "052": 46,
                    "127": 113,
                    "125": 111,
                    "112": 99,
                    "064": 57,
                    "055": 49,
                    "080": 71,
                    "042": 36,
                    "097": 87,
                    "028": 22,
                    "061": 55,
                    "034": 28,
                    "046": 40,
                    "019": 14,
                    "059": 53,
                    "051": 45,
                    "016": 11,
                    "146": 130,
                    "054": 48,
                    "069": 62,
                    "079": 70,
                    "045": 39,
                    "095": 85,
                    "032": 26,
                    "103": 91,
                    "100": 89,
                    "109": 97,
                    "036": 30,
                    "058": 52,
                    "017": 12,
                    "035": 29,
                    "137": 123,
                    "033": 27,
                    "050": 44,
                    "038": 32,
                    "014": 9,
                    "029": 23,
                    "121": 107,
                    "010": 6,
                    "040": 34,
                    "143": 127,
                    "101": 90,
                    "077": 68,
                    "006": 4,
                    "082": 73,
                    "149": 132,
                    "060": 54,
                    "092": 83,
                    "053": 47,
                    "073": 65,
                    "128": 114,
                    "106": 94,
                    "133": 119,
                    "022": 17,
                    "135": 121,
                    "065": 58,
                    "085": 76,
                    "011": 7,
                    "136": 122,
                    "122": 108,
                    "114": 101,
                    "007": 5,
                    "070": 63,
                    "110": 98,
                    "118": 105,
                    "057": 51,
                    "075": 66,
                    "094": 84,
                    "116": 103,
                    "076": 67,
                    "124": 110,
                    "091": 82,
                    "108": 96,
                    "023": 18,
                    "107": 95,
                    "018": 13,
                    "027": 21,
                    "144": 128,
                    "039": 33,
                    "141": 126,
                    "104": 92,
                    "088": 79,
                    "048": 42,
                    "056": 50,
                    "131": 117,
                    "041": 35,
                    "003": 1,
                    "150": 133,
                    "001": 0,
                    "004": 2,
                    "044": 38,
                    "015": 10,
                    "138": 124,
                    "086": 77,
                    "089": 80,
                    "105": 93,
                    "063": 56,
                    "096": 86,
                    "087": 78,
                    "134": 120,
                    "130": 116,
                    "113": 100,
                    "081": 72,
                    "071": 64,
                    "129": 115,
                    "140": 125,
                    "132": 118,
                    "083": 74,
                    "147": 131,
                    "123": 109,
                    "021": 16,
                    "030": 24,
                    "026": 20,
                    "084": 75,
                    "090": 81,
                    "126": 112,
                    "145": 129,
                    "066": 59,
                    "020": 15,
                    "068": 61,
                    "117": 104,
                    "078": 69,
                    "005": 3,
                    "119": 106
                },
                "alpha": 0.037037037037037035
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP"
        ]
    },
    "MIGPUMA": {
        "feature_desc": "Migration PUMA based on 2010 Census definition",
        "feature_type": "obj",
        "field_length": 5,
        "contains_null": true,
        "field_density": "dense",
        "feature_notes": "5 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "MIGPUMA",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "00400": 6,
                    "00300": 4,
                    "00100": 1,
                    "03700": 30,
                    "00290": 3,
                    "01290": 14,
                    "00200": 2,
                    "00001": 0,
                    "06700": 38,
                    "02000": 21,
                    "01900": 20,
                    "03200": 28,
                    "01100": 12,
                    "00500": 7,
                    "00390": 5,
                    "35000": 45,
                    "08690": 40,
                    "03800": 31,
                    "00790": 10,
                    "01400": 17,
                    "01200": 13,
                    "02700": 24,
                    "00900": 11,
                    "03100": 27,
                    "04790": 34,
                    "01700": 18,
                    "08500": 39,
                    "06500": 37,
                    "03300": 29,
                    "01300": 15,
                    "01800": 19,
                    "40100": 46,
                    "01325": 16,
                    "04000": 32,
                    "02100": 22,
                    "02300": 23,
                    "00600": 8,
                    "10300": 42,
                    "04690": 33,
                    "51256": 48,
                    "02890": 25,
                    "05690": 35,
                    "11900": 44,
                    "51100": 47,
                    "11600": 43,
                    "00700": 9,
                    "06100": 36,
                    "09700": 41,
                    "03000": 26
                },
                "alpha": 0.1
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP"
        ]
    },
    "MIGSP": {
        "feature_desc": "Migration recode - State or foreign country code",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "Alabama/AL": "001",
            "Alaska/AK": "002",
            "Arizona/AZ": "004",
            "Arkansas/AR": "005",
            "California/CA": "006",
            "Colorado/CO": "008",
            "Connecticut/CT": "009",
            "Delaware/DE": "010",
            "District of Columbia/DC": "011",
            "Florida/FL": "012",
            "Georgia/GA": "013",
            "Hawaii/HI": "015",
            "Idaho/ID": "016",
            "Illinois/IL": "017",
            "Indiana/IN": "018",
            "Iowa/IA": "019",
            "Kansas/KS": "020",
            "Kentucky/KY": "021",
            "Louisiana/LA": "022",
            "Maine/ME": "023",
            "Maryland/MD": "024",
            "Massachusetts/MA": "025",
            "Michigan/MI": "026",
            "Minnesota/MN": "027",
            "Mississippi/MS": "028",
            "Missouri/MO": "029",
            "Montana/MT": "030",
            "Nebraska/NE": "031",
            "Nevada/NV": "032",
            "New Hampshire/NH": "033",
            "New Jersey/NJ": "034",
            "New Mexico/NM": "035",
            "New York/NY": "036",
            "North Carolina/NC": "037",
            "North Dakota/ND": "038",
            "Ohio/OH": "039",
            "Oklahoma/OK": "040",
            "Oregon/OR": "041",
            "Pennsylvania/PA": "042",
            "Rhode Island/RI": "044",
            "South Carolina/SC": "045",
            "South Dakota/SD": "046",
            "Tennessee/TN": "047",
            "Texas/TX": "048",
            "Utah/UT": "049",
            "Vermont/VT": "050",
            "Virginia/VA": "051",
            "Washington/WA": "053",
            "West Virginia/WV": "054",
            "Wisconsin/WI": "055",
            "Wyoming/WY": "056",
            "Puerto Rico": "072",
            "France": "109",
            "Germany": "110",
            "Northern Europe, Not Specified": "111",
            "Eastern Europe, Not Specified": "113",
            "Western Europe or Other Europe, Not Specified": "114",
            "Italy": "120",
            "Spain": "134",
            "United Kingdom, Excluding England": "138",
            "England": "139",
            "Russia": "163",
            "Afghanistan": "200",
            "China, Hong Kong, Macau & Paracel Islands": "207",
            "India": "210",
            "Iraq": "213",
            "Japan": "215",
            "Korea": "217",
            "Nepal": "229",
            "Pakistan": "231",
            "Philippines": "233",
            "Saudi Arabia": "235",
            "Taiwan": "240",
            "Thailand": "242",
            "Turkey": "243",
            "Vietnam": "247",
            "Eastern Asia, Not Specified": "251",
            "Western Asia, Not Specified": "252",
            "South Central Asia or Asia, Not Specified": "253",
            "Canada": "301",
            "Mexico": "303",
            "El Salvador": "312",
            "Guatemala": "313",
            "Honduras": "314",
            "Central America, Not Specified": "317",
            "Cuba": "327",
            "Dominican Republic": "329",
            "Haiti": "332",
            "Jamaica": "333",
            "Caribbean and North America, Not Specified": "344",
            "Brazil": "362",
            "Colombia": "364",
            "South America, Not Specified": "374",
            "Egypt": "414",
            "Nigeria": "440",
            "Eastern Africa, Not Specified": "463",
            "Western Africa, Not Specified": "467",
            "Northern Africa or Other Africa, Not Specified": "468",
            "Australia": "501",
            "Other US Island Areas, Oceania, Not Specified, or At Sea": "555"
        },
        "feature_notes": "3 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "MIGSP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "050": 20,
                    "008": 1,
                    "036": 12,
                    "033": 10,
                    "021": 4,
                    "303": 36,
                    "463": 38,
                    "006": 0,
                    "207": 29,
                    "012": 3,
                    "009": 2,
                    "042": 17,
                    "025": 6,
                    "049": 19,
                    "054": 23,
                    "023": 5,
                    "231": 30,
                    "037": 13,
                    "044": 18,
                    "034": 11,
                    "301": 35,
                    "026": 7,
                    "134": 27,
                    "055": 24,
                    "041": 16,
                    "251": 33,
                    "374": 37,
                    "242": 31,
                    "114": 26,
                    "252": 34,
                    "051": 21,
                    "029": 9,
                    "039": 15,
                    "053": 22,
                    "247": 32,
                    "038": 14,
                    "200": 28,
                    "111": 25,
                    "027": 8
                },
                "alpha": 0.125
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA"
        ]
    },
    "MSP": {
        "feature_desc": "Married, spouse present/spouse absent",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Now married, spouse present": "1",
            "Now married, spouse absent": "2",
            "Widowed": "3",
            "Divorced": "4",
            "Separated": "5",
            "Never married": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "MSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP"
        ]
    },
    "NAICSP": {
        "feature_desc": "NAICS (North American Industry Classification System) Industry recode for 2013 and later based on 2012 NAICS codes",
        "feature_type": "obj",
        "field_length": 8,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Agriculture, Forestry, Fishing, and Hunting": [
                "111",
                "112",
                "1133",
                "113M",
                "114",
                "115"
            ],
            "Mining, Quarrying, and Oil and Gas Extraction": [
                "211",
                "2121",
                "2122",
                "2123",
                "213"
            ],
            "Utilities": [
                "2211P",
                "2212P",
                "22132",
                "2213M",
                "221MP",
                "22S"
            ],
            "Construction": [
                "23"
            ],
            "Manufacturing": [
                "3113",
                "3114",
                "3115",
                "3116",
                "311811",
                "3118Z",
                "311M1",
                "311M2",
                "311S",
                "3121",
                "3122",
                "3131",
                "3132Z",
                "3133",
                "31411",
                "314Z",
                "3152",
                "3159",
                "3162",
                "316M",
                "31M",
                "3211",
                "3212",
                "32199M",
                "3219ZM",
                "3221",
                "32221",
                "3222M",
                "3231",
                "3241M",
                "32411",
                "3252",
                "3253",
                "3254",
                "3255",
                "3256",
                "325M",
                "3261",
                "32621",
                "3262M",
                "32711",
                "327120",
                "3272",
                "3279",
                "327M",
                "3313",
                "3314",
                "3315",
                "331M",
                "3321",
                "3322",
                "3327",
                "3328",
                "33299M",
                "332M",
                "332MZ",
                "33311",
                "3331M",
                "3333",
                "3335",
                "3336",
                "333MS",
                "3341",
                "3345",
                "334M1",
                "334M2",
                "3352",
                "335M",
                "33641M1",
                "33641M2",
                "3365",
                "3366",
                "3369",
                "336M",
                "337",
                "3391",
                "3399M",
                "3399ZM",
                "33MS",
                "3MS"
            ],
            "Wholesale Trade": [
                "4231",
                "4232",
                "4233",
                "4234",
                "4235",
                "4236",
                "4237",
                "4238",
                "42393",
                "4239Z",
                "4241",
                "4243",
                "4244",
                "4245",
                "4247",
                "4248",
                "42491",
                "4249Z",
                "424M",
                "4251",
                "42S"
            ],
            "Retail Trade": [
                "4411",
                "4412",
                "4413",
                "442",
                "443141",
                "443142",
                "44413",
                "4441Z",
                "4442",
                "4451",
                "4452",
                "4453",
                "44611",
                "446Z",
                "447",
                "44821",
                "4483",
                "4481",
                "45113",
                "45114",
                "4511M",
                "45121",
                "45211",
                "4529",
                "4531",
                "45321",
                "45322",
                "4533",
                "4539",
                "454111",
                "454112",
                "454113",
                "4542",
                "454310",
                "45439",
                "4MS"
            ],
            "Transportation and Warehousing": [
                "481",
                "482",
                "483",
                "484",
                "4853",
                "485M",
                "486",
                "487",
                "488",
                "491",
                "492",
                "493"
            ],
            "Information": [
                "51111",
                "5111Z",
                "5112",
                "5121",
                "5122",
                "515",
                "5171",
                "517Z",
                "5182",
                "51912",
                "51913",
                "5191ZM"
            ],
            "Finance and Insurance": [
                "5221M",
                "522M",
                "524",
                "52M1",
                "52M2"
            ],
            "Real Estate and Rental and Leasing": [
                "531",
                "5321",
                "53223",
                "532M",
                "53M"
            ],
            "Professional, Scientific, and Technical Services": [
                "5411",
                "5412",
                "5413",
                "5414",
                "5415",
                "5416",
                "5417",
                "5418",
                "54194",
                "5419Z"
            ],
            "Management of companies and enterprises": [
                "55"
            ],
            "Administrative and support and waste management services": [
                "5613",
                "5614",
                "5615",
                "5616",
                "56173",
                "5617Z",
                "561M",
                "562"
            ],
            "Educational Services": [
                "6111",
                "611M1",
                "611M2",
                "611M3"
            ],
            "Health Care and Social Assistance": [
                "6211",
                "6212",
                "62131",
                "62132",
                "6213ZM",
                "6214",
                "6216",
                "621M",
                "622",
                "6231",
                "623M",
                "6241",
                "6242",
                "6243",
                "6244"
            ],
            "Arts, Entertainment, and Recreation": [
                "711",
                "712",
                "71395",
                "713Z"
            ],
            "Accommodation and Food Services": [
                "7211",
                "721M",
                "7224",
                "722Z"
            ],
            "Other Services, Except Public Administration": [
                "811192",
                "8111Z",
                "8112",
                "8113",
                "8114",
                "812111",
                "812112",
                "8121M",
                "8122",
                "8123",
                "8129",
                "8131",
                "81393",
                "8139Z",
                "813M",
                "814"
            ],
            "Public Administration": [
                "92113",
                "92119",
                "9211MP",
                "923",
                "92M1",
                "92M2",
                "92MP",
                "928P"
            ],
            "Active Duty Military": [
                "928110P1",
                "928110P2",
                "928110P3",
                "928110P4",
                "928110P5",
                "928110P6",
                "928110P7"
            ],
            "Unemployed **": [
                "9920"
            ]
        },
        "feature_notes": "NAICS is a Federal standard for classifying industry codes.  It is cross referenced with the CB INDP codes.     For more information on industry codes see the Industry Coding tab.   3-8 digit code with alphanumeric characters",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "NAICSP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "3399ZM": 76,
                    "9211MP": 225,
                    "484": 134,
                    "4451": 105,
                    "713Z": 203,
                    "6111": 182,
                    "None": -1,
                    "314Z": 25,
                    "7211": 204,
                    "4511M": 116,
                    "531": 159,
                    "112": 1,
                    "4MS": 142,
                    "711": 201,
                    "337": 73,
                    "92MP": 234,
                    "622": 194,
                    "722Z": 207,
                    "5121": 146,
                    "4481": 111,
                    "6216": 192,
                    "4442": 104,
                    "2123": 6,
                    "4233": 80,
                    "611M1": 183,
                    "23": 12,
                    "524": 156,
                    "44413": 102,
                    "4248": 91,
                    "6214": 191,
                    "442": 99,
                    "491": 139,
                    "8111Z": 209,
                    "56173": 178,
                    "51912": 151,
                    "6211": 186,
                    "5413": 165,
                    "113M": 3,
                    "485M": 136,
                    "4453": 107,
                    "5111Z": 144,
                    "3231": 37,
                    "3333": 60,
                    "5418": 170,
                    "111": 0,
                    "4441Z": 103,
                    "54194": 171,
                    "2211P": 8,
                    "5616": 177,
                    "483": 133,
                    "3219ZM": 33,
                    "446Z": 109,
                    "4411": 96,
                    "3327": 53,
                    "33641M1": 70,
                    "332MZ": 57,
                    "515": 147,
                    "6244": 200,
                    "488": 138,
                    "611M3": 185,
                    "6212": 187,
                    "1133": 2,
                    "928P": 231,
                    "3391": 74,
                    "8139Z": 220,
                    "44611": 108,
                    "52M2": 158,
                    "562": 181,
                    "45322": 122,
                    "492": 140,
                    "813M": 221,
                    "814": 222,
                    "333MS": 63,
                    "4412": 97,
                    "5414": 166,
                    "6231": 195,
                    "454113": 127,
                    "623M": 196,
                    "3335": 61,
                    "6213ZM": 190,
                    "5411": 163,
                    "721M": 205,
                    "8113": 211,
                    "454310": 129,
                    "454111": 125,
                    "52M1": 157,
                    "811192": 208,
                    "5221M": 154,
                    "812112": 214,
                    "5615": 176,
                    "5617Z": 179,
                    "6241": 197,
                    "532M": 161,
                    "4238": 84,
                    "3115": 15,
                    "4539": 124,
                    "31M": 29,
                    "3262M": 44,
                    "923": 226,
                    "8123": 217,
                    "5416": 168,
                    "4452": 106,
                    "335M": 69,
                    "712": 202,
                    "4529": 119,
                    "443142": 101,
                    "51111": 143,
                    "3211": 30,
                    "4251": 95,
                    "3399M": 75,
                    "62131": 188,
                    "482": 132,
                    "447": 110,
                    "4533": 123,
                    "4244": 89,
                    "4231": 78,
                    "311M1": 19,
                    "8129": 218,
                    "3322": 52,
                    "311M2": 20,
                    "92113": 223,
                    "334M2": 67,
                    "51913": 152,
                    "44821": 112,
                    "3121": 22,
                    "5614": 175,
                    "5321": 160,
                    "5415": 167,
                    "8131": 219,
                    "92M2": 233,
                    "3279": 47,
                    "4239Z": 86,
                    "3152": 26,
                    "5613": 174,
                    "33299M": 55,
                    "3221": 34,
                    "325M": 42,
                    "812111": 213,
                    "522M": 155,
                    "8114": 212,
                    "443141": 100,
                    "45211": 118,
                    "3118Z": 18,
                    "5182": 150,
                    "5171": 148,
                    "55": 173,
                    "62132": 189,
                    "9920": 235,
                    "92M1": 232,
                    "621M": 193,
                    "114": 4,
                    "92119": 224,
                    "33311": 58,
                    "561M": 180,
                    "311811": 17,
                    "331M": 51,
                    "3252": 38,
                    "454112": 126,
                    "4483": 113,
                    "3328": 54,
                    "3256": 41,
                    "6243": 199,
                    "3345": 65,
                    "45121": 117,
                    "3315": 50,
                    "45321": 121,
                    "45439": 130,
                    "5412": 164,
                    "4542": 128,
                    "3212": 31,
                    "517Z": 149,
                    "7224": 206,
                    "311S": 21,
                    "5417": 169,
                    "3261": 43,
                    "336M": 72,
                    "22132": 10,
                    "42393": 85,
                    "4413": 98,
                    "493": 141,
                    "45113": 114,
                    "4235": 82,
                    "3254": 40,
                    "4243": 88,
                    "4232": 79,
                    "3MS": 77,
                    "928110P3": 229,
                    "4234": 81,
                    "213": 7,
                    "3341": 64,
                    "3116": 16,
                    "327M": 48,
                    "3352": 68,
                    "8121M": 215,
                    "928110P2": 228,
                    "4853": 135,
                    "42491": 92,
                    "5419Z": 172,
                    "611M2": 184,
                    "33641M2": 71,
                    "45114": 115,
                    "3114": 14,
                    "6242": 198,
                    "3272": 46,
                    "3314": 49,
                    "481": 131,
                    "115": 5,
                    "424M": 94,
                    "53M": 162,
                    "316M": 28,
                    "3132Z": 24,
                    "4247": 90,
                    "5191ZM": 153,
                    "4249Z": 93,
                    "8122": 216,
                    "3131": 23,
                    "3162": 27,
                    "334M1": 66,
                    "3336": 62,
                    "3113": 13,
                    "2213M": 11,
                    "3331M": 59,
                    "3253": 39,
                    "4241": 87,
                    "928110P1": 227,
                    "4531": 120,
                    "928110P7": 230,
                    "32221": 35,
                    "32199M": 32,
                    "32711": 45,
                    "3222M": 36,
                    "2212P": 9,
                    "8112": 210,
                    "4237": 83,
                    "5112": 145,
                    "487": 137,
                    "332M": 56
                },
                "alpha": 0.0
            }
        },
        "dependencies": []
    },
    "NATIVITY": {
        "feature_desc": "Nativity",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Native": "1",
            "Foreign born": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "NATIVITY",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP"
        ]
    },
    "NOP": {
        "feature_desc": "Nativity of parent",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (greater than 17 years old/not an own child of householder, and not child in subfamily)": "b",
            "Living with two parents: Both parents NATIVE": "1",
            "Living with two parents: Father only FOREIGN BORN": "2",
            "Living with two parents: Mother only FOREIGN BORN": "3",
            "Living with two parents: BOTH parents FOREIGN BORN": "4",
            "Living with father only: Father NATIVE": "5",
            "Living with father only: Father FOREIGN BORN": "6",
            "Living with mother only: Mother NATIVE": "7",
            "Living with mother only: Mother FOREIGN BORN": "8"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "NOP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY"
        ]
    },
    "OC": {
        "feature_desc": "Own child",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No (includes GQ)": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "OC",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP"
        ]
    },
    "OCCP": {
        "feature_desc": "Occupation recode for 2012 and later based on Census Bureau 2010 OCC codes",
        "feature_type": "obj",
        "field_length": 4,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "Management Occupations": [
                "0010",
                "0020",
                "0040",
                "0050",
                "0060",
                "0100",
                "0110",
                "0120",
                "0135",
                "0136",
                "0137",
                "0140",
                "0150",
                "0160",
                "0205",
                "0220",
                "0230",
                "0300",
                "0310",
                "0330",
                "0340",
                "0350",
                "0360",
                "0410",
                "0420",
                "0425",
                "0430"
            ],
            "Business and Financial Operations Occupations": [
                "0500",
                "0510",
                "0520",
                "0530",
                "0540",
                "0565",
                "0600",
                "0630",
                "0640",
                "0650",
                "0700",
                "0710",
                "0725",
                "0726",
                "0735",
                "0740",
                "0800",
                "0810",
                "0820",
                "0830",
                "0840",
                "0850",
                "0860",
                "0900",
                "0910",
                "0930",
                "0940",
                "0950"
            ],
            "Computer and Mathematical Occupations": [
                "1005",
                "1006",
                "1007",
                "1010",
                "1020",
                "1030",
                "1050",
                "1060",
                "1105",
                "1106",
                "1107",
                "1200",
                "1220",
                "1240"
            ],
            "Architecture and Engineering Occupations": [
                "1300",
                "1310",
                "1320",
                "1340",
                "1350",
                "1360",
                "1400",
                "1410",
                "1420",
                "1430",
                "1440",
                "1450",
                "1460",
                "1520",
                "1530",
                "1540",
                "1550",
                "1560"
            ],
            "Life, Physical, and Social Science Occupations": [
                "1600",
                "1610",
                "1640",
                "1650",
                "1700",
                "1710",
                "1720",
                "1740",
                "1760",
                "1800",
                "1820",
                "1840",
                "1860",
                "1900",
                "1910",
                "1920",
                "1930",
                "1965"
            ],
            "Community and Social Service Occupations": [
                "2000",
                "2010",
                "2015",
                "2016",
                "2025",
                "2040",
                "2050",
                "2060"
            ],
            "Legal Occupations": [
                "2100",
                "2105",
                "2145",
                "2160"
            ],
            "Education, Training, and Library Occupations": [
                "2200",
                "2300",
                "2310",
                "2320",
                "2330",
                "2340",
                "2400",
                "2430",
                "2440",
                "2540",
                "2550"
            ],
            "Arts, Design, Entertainment, Sports, and Media Occupations": [
                "2600",
                "2630",
                "2700",
                "2710",
                "2720",
                "2740",
                "2750",
                "2760",
                "2800",
                "2810",
                "2825",
                "2830",
                "2840",
                "2850",
                "2860",
                "2900",
                "2910",
                "2920"
            ],
            "Healthcare Practitioners and Technical Occupations": [
                "3000",
                "3010",
                "3030",
                "3040",
                "3050",
                "3060",
                "3110",
                "3120",
                "3140",
                "3150",
                "3160",
                "3200",
                "3210",
                "3220",
                "3230",
                "3245",
                "3250",
                "3255",
                "3256",
                "3258",
                "3260",
                "3300",
                "3310",
                "3320",
                "3400",
                "3420",
                "3500",
                "3510",
                "3520",
                "3535",
                "3540"
            ],
            "Service Occupations": [
                "3600",
                "3610",
                "3620",
                "3630",
                "3640",
                "3645",
                "3646",
                "3647",
                "3648",
                "3649",
                "3655"
            ],
            "Protective Service Occupations": [
                "3700",
                "3710",
                "3720",
                "3730",
                "3740",
                "3750",
                "3800",
                "3820",
                "3840",
                "3850",
                "3900",
                "3910",
                "3930",
                "3940",
                "3945",
                "3955"
            ],
            "Food Preparation and Serving Related Occupations": [
                "4000",
                "4010",
                "4020",
                "4030",
                "4040",
                "4050",
                "4060",
                "4110",
                "4120",
                "4130",
                "4140",
                "4150"
            ],
            "Building and Grounds Cleaning and Maintenance Occupations": [
                "4200",
                "4210",
                "4220",
                "4230",
                "4240",
                "4250"
            ],
            "Personal Care and Service Occupations": [
                "4300",
                "4320",
                "4340",
                "4350",
                "4400",
                "4410",
                "4420",
                "4430",
                "4460",
                "4465",
                "4500",
                "4510",
                "4520",
                "4530",
                "4540",
                "4600",
                "4610",
                "4620",
                "4640",
                "4650"
            ],
            "Sales and Related Occupations": [
                "4700",
                "4710",
                "4720",
                "4740",
                "4750",
                "4760",
                "4800",
                "4810",
                "4820",
                "4830",
                "4840",
                "4850",
                "4900",
                "4920",
                "4930",
                "4940",
                "4950",
                "4965"
            ],
            "Office and Administrative Support Occupations": [
                "5000",
                "5010",
                "5020",
                "5030",
                "5100",
                "5110",
                "5120",
                "5130",
                "5140",
                "5150",
                "5160",
                "5165",
                "5200",
                "5220",
                "5230",
                "5240",
                "5250",
                "5260",
                "5300",
                "5310",
                "5320",
                "5330",
                "5340",
                "5350",
                "5360",
                "5400",
                "5410",
                "5420",
                "5500",
                "5510",
                "5520",
                "5530",
                "5540",
                "5550",
                "5560",
                "5600",
                "5610",
                "5620",
                "5630",
                "5700",
                "5800",
                "5810",
                "5820",
                "5840",
                "5850",
                "5860",
                "5900",
                "5910",
                "5920",
                "5940"
            ],
            "Farming, Fishing, and Forestry Occupations": [
                "6005",
                "6010",
                "6040",
                "6050",
                "6100",
                "6120",
                "6130"
            ],
            "Construction and Extraction Occupations": [
                "6200",
                "6210",
                "6220",
                "6230",
                "6240",
                "6250",
                "6260",
                "6300",
                "6320",
                "6330",
                "6355",
                "6360",
                "6400",
                "6420",
                "6440",
                "6460",
                "6515",
                "6520",
                "6530",
                "6600",
                "6660",
                "6700",
                "6710",
                "6720",
                "6730",
                "6740",
                "6765",
                "6800",
                "6820",
                "6830",
                "6840",
                "6940"
            ],
            "Installation, Maintenance, and Repair Occupations": [
                "7000",
                "7010",
                "7020",
                "7030",
                "7040",
                "7100",
                "7110",
                "7120",
                "7130",
                "7140",
                "7150",
                "7160",
                "7200",
                "7210",
                "7220",
                "7240",
                "7260",
                "7300",
                "7315",
                "7320",
                "7330",
                "7340",
                "7350",
                "7360",
                "7410",
                "7420",
                "7430",
                "7510",
                "7540",
                "7560",
                "7610",
                "7630"
            ],
            "Production Occupations": [
                "7700",
                "7710",
                "7720",
                "7730",
                "7740",
                "7750",
                "7800",
                "7810",
                "7830",
                "7840",
                "7850",
                "7855",
                "7900",
                "7920",
                "7930",
                "7940",
                "7950",
                "8030",
                "8040",
                "8100",
                "8130",
                "8140",
                "8220",
                "8250",
                "8255",
                "8256",
                "8300",
                "8310",
                "8320",
                "8330",
                "8350",
                "8400",
                "8410",
                "8420",
                "8450",
                "8460",
                "8500",
                "8510",
                "8530",
                "8540",
                "8550",
                "8600",
                "8610",
                "8620",
                "8630",
                "8640",
                "8650",
                "8710",
                "8720",
                "8730",
                "8740",
                "8750",
                "8760",
                "8800",
                "8810",
                "8830",
                "8850",
                "8910",
                "8920",
                "8930",
                "8940",
                "8950",
                "8965"
            ],
            "Transportation Occupations": [
                "9000",
                "9030",
                "9040",
                "9050",
                "9110",
                "9120",
                "9130",
                "9140",
                "9150",
                "9200",
                "9240",
                "9260",
                "9300",
                "9310",
                "9350",
                "9360",
                "9410",
                "9415",
                "9420"
            ],
            "Material Moving Occupations": [
                "9510",
                "9520",
                "9560",
                "9600",
                "9610",
                "9620",
                "9630",
                "9640",
                "9650",
                "9720",
                "9750"
            ],
            "Military Specific Occupations": [
                "9800",
                "9810",
                "9820"
            ],
            "Military Specific Occupations **": [
                "9830"
            ],
            "Unemployed **": [
                "9920"
            ]
        },
        "feature_notes": "Census Bureau's occupation coding.  It is  cross referenced with SOCP. For more information on occupation codes, see the Occupation Coding tab.         4 digit number with leading zeros.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "OCCP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "7750": 303,
                    "7020": 282,
                    "9130": 351,
                    "5620": 242,
                    "3955": 169,
                    "2540": 104,
                    "None": -1,
                    "0600": 29,
                    "4040": 174,
                    "5120": 221,
                    "5700": 244,
                    "0205": 13,
                    "4700": 201,
                    "2850": 117,
                    "6230": 261,
                    "3850": 165,
                    "3320": 142,
                    "4130": 179,
                    "5860": 250,
                    "0010": 0,
                    "4020": 172,
                    "4110": 177,
                    "3600": 149,
                    "0136": 9,
                    "0530": 26,
                    "7340": 294,
                    "0726": 35,
                    "2200": 95,
                    "4760": 206,
                    "2320": 98,
                    "0310": 17,
                    "6765": 276,
                    "5840": 248,
                    "4850": 212,
                    "0220": 14,
                    "2310": 97,
                    "0430": 23,
                    "7150": 285,
                    "6420": 267,
                    "4250": 187,
                    "5320": 231,
                    "3255": 137,
                    "3060": 126,
                    "6355": 266,
                    "0350": 19,
                    "3160": 130,
                    "1360": 65,
                    "4430": 191,
                    "8256": 320,
                    "0740": 37,
                    "4030": 173,
                    "2910": 120,
                    "5940": 253,
                    "7950": 312,
                    "5110": 220,
                    "0160": 12,
                    "4720": 203,
                    "4920": 213,
                    "4220": 184,
                    "7410": 296,
                    "3930": 167,
                    "9310": 353,
                    "8300": 321,
                    "7700": 300,
                    "4230": 185,
                    "6260": 263,
                    "8850": 343,
                    "0410": 21,
                    "1550": 73,
                    "0700": 32,
                    "6200": 258,
                    "9600": 357,
                    "0725": 34,
                    "2750": 111,
                    "4600": 196,
                    "7330": 293,
                    "5400": 233,
                    "0230": 15,
                    "3010": 122,
                    "6130": 257,
                    "8740": 338,
                    "4140": 180,
                    "0800": 38,
                    "8965": 347,
                    "5000": 217,
                    "3647": 155,
                    "5240": 227,
                    "9120": 350,
                    "9610": 358,
                    "7200": 286,
                    "3800": 163,
                    "3220": 133,
                    "8320": 323,
                    "6050": 256,
                    "7210": 287,
                    "5600": 240,
                    "6720": 274,
                    "5510": 236,
                    "2340": 100,
                    "3500": 145,
                    "5610": 241,
                    "8530": 328,
                    "1650": 76,
                    "4710": 202,
                    "1030": 53,
                    "2760": 112,
                    "2630": 107,
                    "2010": 86,
                    "4610": 197,
                    "0020": 1,
                    "9140": 352,
                    "7260": 290,
                    "2040": 89,
                    "3250": 136,
                    "4050": 175,
                    "6730": 275,
                    "3420": 144,
                    "4620": 198,
                    "7220": 288,
                    "4000": 170,
                    "5140": 222,
                    "4510": 194,
                    "9620": 359,
                    "1900": 81,
                    "5520": 237,
                    "2300": 96,
                    "8410": 325,
                    "0060": 4,
                    "0140": 10,
                    "6320": 264,
                    "5550": 239,
                    "4740": 204,
                    "4150": 181,
                    "3310": 141,
                    "4820": 209,
                    "0735": 36,
                    "0050": 3,
                    "5540": 238,
                    "8030": 313,
                    "7800": 304,
                    "1965": 84,
                    "4200": 182,
                    "4950": 215,
                    "3630": 152,
                    "7920": 309,
                    "4350": 190,
                    "7840": 306,
                    "1910": 82,
                    "2000": 85,
                    "2600": 106,
                    "0520": 25,
                    "0850": 43,
                    "8950": 346,
                    "3000": 121,
                    "4010": 171,
                    "2100": 92,
                    "1540": 72,
                    "2330": 99,
                    "5800": 245,
                    "0910": 46,
                    "7315": 291,
                    "5300": 229,
                    "8310": 322,
                    "8610": 332,
                    "5260": 228,
                    "0710": 33,
                    "2550": 105,
                    "2025": 88,
                    "0110": 6,
                    "5100": 219,
                    "4640": 199,
                    "8255": 319,
                    "8710": 336,
                    "0120": 7,
                    "0420": 22,
                    "8220": 317,
                    "8250": 318,
                    "1020": 52,
                    "8800": 340,
                    "5420": 235,
                    "2430": 102,
                    "3245": 135,
                    "1060": 55,
                    "0650": 31,
                    "9640": 360,
                    "7010": 281,
                    "5810": 246,
                    "6440": 268,
                    "1460": 70,
                    "8830": 342,
                    "1410": 66,
                    "4500": 193,
                    "1820": 80,
                    "4320": 188,
                    "1106": 57,
                    "3645": 154,
                    "0100": 5,
                    "7855": 307,
                    "1430": 68,
                    "4940": 214,
                    "0630": 30,
                    "1720": 77,
                    "4800": 207,
                    "3655": 158,
                    "0930": 47,
                    "4810": 208,
                    "7360": 295,
                    "2720": 110,
                    "3730": 161,
                    "1010": 51,
                    "3150": 129,
                    "1105": 56,
                    "1530": 71,
                    "6240": 262,
                    "3230": 134,
                    "3620": 151,
                    "5020": 218,
                    "4965": 216,
                    "8550": 330,
                    "9920": 365,
                    "3300": 140,
                    "2400": 101,
                    "2700": 108,
                    "0860": 44,
                    "0360": 20,
                    "1740": 78,
                    "4840": 211,
                    "0565": 28,
                    "0840": 42,
                    "3258": 138,
                    "6660": 273,
                    "7130": 284,
                    "1050": 54,
                    "2825": 114,
                    "5165": 224,
                    "3820": 164,
                    "3940": 168,
                    "7930": 310,
                    "7320": 292,
                    "3260": 139,
                    "4120": 178,
                    "5230": 226,
                    "1220": 60,
                    "0830": 41,
                    "3030": 123,
                    "8730": 337,
                    "2830": 115,
                    "5160": 223,
                    "6220": 260,
                    "2900": 119,
                    "7810": 305,
                    "1107": 58,
                    "3050": 125,
                    "1300": 61,
                    "9510": 355,
                    "1450": 69,
                    "6520": 270,
                    "4830": 210,
                    "7510": 298,
                    "1420": 67,
                    "2440": 103,
                    "1640": 75,
                    "9720": 361,
                    "5350": 232,
                    "0340": 18,
                    "8640": 334,
                    "0940": 48,
                    "5310": 230,
                    "0300": 16,
                    "4060": 176,
                    "7430": 297,
                    "5220": 225,
                    "4750": 205,
                    "7000": 280,
                    "5410": 234,
                    "9820": 363,
                    "2145": 93,
                    "3610": 150,
                    "7900": 308,
                    "8350": 324,
                    "9830": 364,
                    "1800": 79,
                    "2016": 87,
                    "5900": 251,
                    "3700": 159,
                    "1610": 74,
                    "6515": 269,
                    "7720": 302,
                    "0040": 2,
                    "3120": 128,
                    "6820": 277,
                    "3640": 153,
                    "3040": 124,
                    "8140": 316,
                    "8450": 326,
                    "8600": 331,
                    "0500": 24,
                    "4210": 183,
                    "8920": 344,
                    "3210": 132,
                    "7120": 283,
                    "0810": 39,
                    "9000": 348,
                    "8620": 333,
                    "1350": 64,
                    "0150": 11,
                    "2710": 109,
                    "4650": 200,
                    "9030": 349,
                    "1006": 50,
                    "2060": 91,
                    "8760": 339,
                    "4240": 186,
                    "2840": 116,
                    "8810": 341,
                    "7240": 289,
                    "8100": 315,
                    "4540": 195,
                    "1310": 62,
                    "7630": 299,
                    "4340": 189,
                    "6600": 272,
                    "6940": 279,
                    "3649": 157,
                    "5630": 243,
                    "2160": 94,
                    "6330": 265,
                    "0540": 27,
                    "4465": 192,
                    "3740": 162,
                    "0950": 49,
                    "9520": 356,
                    "3535": 147,
                    "3648": 156,
                    "8510": 327,
                    "0900": 45,
                    "9350": 354,
                    "6210": 259,
                    "3110": 127,
                    "6530": 271,
                    "2810": 113,
                    "6040": 255,
                    "5920": 252,
                    "1920": 83,
                    "1320": 63,
                    "0820": 40,
                    "6840": 278,
                    "2860": 118,
                    "0135": 8,
                    "8650": 335,
                    "9810": 362,
                    "3510": 146,
                    "7710": 301,
                    "7940": 311,
                    "5850": 249,
                    "8930": 345,
                    "2050": 90,
                    "3910": 166,
                    "3710": 160,
                    "5820": 247,
                    "8540": 329,
                    "3200": 131,
                    "3400": 143,
                    "8040": 314,
                    "3540": 148,
                    "1200": 59,
                    "6005": 254
                },
                "alpha": 0.013623978201634877
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC"
        ]
    },
    "PAOC": {
        "feature_desc": "Presence and age of own children",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (male/female under 16 years old/GQ)": "b",
            "Females with own children under 6 years only": "1",
            "Females with own children 6 to 17 years only": "2",
            "Females with own children under 6 years and 6 to 17 years": "3",
            "Females with no own children": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PAOC",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP"
        ]
    },
    "PERNP": {
        "feature_desc": "Total person's earnings",
        "feature_type": "integer",
        "field_length": 7,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "bbbbbbb": "N/A (less than 15 years old)",
            "Loss of $10000 or more": -10000,
            "Loss $1 to $9999": "(-9999, -1, 10)",
            "No earnings": 0,
            "$1 or break even": 1,
            "2 to $9999999": "(2, 9999999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust PERNP to constant dollars.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PERNP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC"
        ]
    },
    "PINCP": {
        "feature_desc": "Total person's income (signed)",
        "feature_type": "integer",
        "field_length": 7,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "bbbbbbb": "N/A (less than 15 years old)",
            "Loss of $19999 or more": -19999,
            "Loss $1 to $19998 (Rounded components)": "(-19998, 0, 100)",
            "None": 0,
            "$1 or break even": 1,
            "2 to $9999999": "(2, 9999999, 100)"
        },
        "feature_notes": "Use ADJINC to adjust PINCP to constant dollars.",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PINCP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP"
        ]
    },
    "POBP": {
        "feature_desc": "Place of birth (Recode)",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "Alabama/AL": "001",
            "Alaska/AK": "002",
            "Arizona/AZ": "004",
            "Arkansas/AR": "005",
            "California/CA": "006",
            "Colorado/CO": "008",
            "Connecticut/CT": "009",
            "Delaware/DE": "010",
            "District of Columbia/DC": "011",
            "Florida/FL": "012",
            "Georgia/GA": "013",
            "Hawaii/HI": "015",
            "Idaho/ID": "016",
            "Illinois/IL": "017",
            "Indiana/IN": "018",
            "Iowa/IA": "019",
            "Kansas/KS": "020",
            "Kentucky/KY": "021",
            "Louisiana/LA": "022",
            "Maine/ME": "023",
            "Maryland/MD": "024",
            "Massachusetts/MA": "025",
            "Michigan/MI": "026",
            "Minnesota/MN": "027",
            "Mississippi/MS": "028",
            "Missouri/MO": "029",
            "Montana/MT": "030",
            "Nebraska/NE": "031",
            "Nevada/NV": "032",
            "New Hampshire/NH": "033",
            "New Jersey/NJ": "034",
            "New Mexico/NM": "035",
            "New York/NY": "036",
            "North Carolina/NC": "037",
            "North Dakota/ND": "038",
            "Ohio/OH": "039",
            "Oklahoma/OK": "040",
            "Oregon/OR": "041",
            "Pennsylvania/PA": "042",
            "Rhode Island/RI": "044",
            "South Carolina/SC": "045",
            "South Dakota/SD": "046",
            "Tennessee/TN": "047",
            "Texas/TX": "048",
            "Utah/UT": "049",
            "Vermont/VT": "050",
            "Virginia/VA": "051",
            "Washington/WA": "053",
            "West Virginia/WV": "054",
            "Wisconsin/WI": "055",
            "Wyoming/WY": "056",
            "American Samoa": "060",
            "Guam": "066",
            "Commonwealth of the Northern Mariana Islands": "069",
            "Puerto Rico": "072",
            "US Virgin Islands": "078",
            "Albania": "100",
            "Austria": "102",
            "Belgium": "103",
            "Bulgaria": "104",
            "Czechoslovakia": "105",
            "Denmark": "106",
            "Finland": "108",
            "France": "109",
            "Germany": "110",
            "Greece": "116",
            "Hungary": "117",
            "Iceland": "118",
            "Ireland": "119",
            "Italy": "120",
            "Netherlands": "126",
            "Norway": "127",
            "Poland": "128",
            "Portugal": "129",
            "Azores Islands": "130",
            "Romania": "132",
            "Spain": "134",
            "Sweden": "136",
            "Switzerland": "137",
            "United Kingdom, Not Specified": "138",
            "England": "139",
            "Scotland": "140",
            "Yugoslavia": "147",
            "Czech Republic": "148",
            "Slovakia": "149",
            "Bosnia and Herzegovina": "150",
            "Croatia": "151",
            "Macedonia": "152",
            "Serbia": "154",
            "Latvia": "156",
            "Lithuania": "157",
            "Armenia": "158",
            "Azerbaijan": "159",
            "Belarus": "160",
            "Georgia": "161",
            "Moldova": "162",
            "Russia": "163",
            "Ukraine": "164",
            "USSR": "165",
            "Montenegro": "168",
            "Other Europe, Not Specified": "169",
            "Afghanistan": "200",
            "Bangladesh": "202",
            "Bhutan": "203",
            "Myanmar": "205",
            "Cambodia": "206",
            "China": "207",
            "Cyprus": "208",
            "Hong Kong": "209",
            "India": "210",
            "Indonesia": "211",
            "Iran": "212",
            "Iraq": "213",
            "Israel": "214",
            "Japan": "215",
            "Jordan": "216",
            "Korea": "217",
            "Kazakhstan": "218",
            "Kuwait": "222",
            "Laos": "223",
            "Lebanon": "224",
            "Malaysia": "226",
            "Nepal": "229",
            "Pakistan": "231",
            "Philippines": "233",
            "Saudi Arabia": "235",
            "Singapore": "236",
            "Sri Lanka": "238",
            "Syria": "239",
            "Taiwan": "240",
            "Thailand": "242",
            "Turkey": "243",
            "United Arab Emirates": "245",
            "Uzbekistan": "246",
            "Vietnam": "247",
            "Yemen": "248",
            "Asia": "249",
            "South Central Asia, Not Specified": "253",
            "Other Asia, Not Specified": "254",
            "Bermuda": "300",
            "Canada": "301",
            "Mexico": "303",
            "Belize": "310",
            "Costa Rica": "311",
            "El Salvador": "312",
            "Guatemala": "313",
            "Honduras": "314",
            "Nicaragua": "315",
            "Panama": "316",
            "Antigua & Barbuda": "321",
            "Bahamas": "323",
            "Barbados": "324",
            "Cuba": "327",
            "Dominica": "328",
            "Dominican Republic": "329",
            "Grenada": "330",
            "Haiti": "332",
            "Jamaica": "333",
            "St. Lucia": "339",
            "St. Vincent & the Grenadines": "340",
            "Trinidad & Tobago": "341",
            "West Indies": "343",
            "Caribbean, Not Specified": "344",
            "Argentina": "360",
            "Bolivia": "361",
            "Brazil": "362",
            "Chile": "363",
            "Colombia": "364",
            "Ecuador": "365",
            "Guyana": "368",
            "Paraguay": "369",
            "Peru": "370",
            "Uruguay": "372",
            "Venezuela": "373",
            "South America": "374",
            "Americas, Not Specified": "399",
            "Algeria": "400",
            "Cameroon": "407",
            "Cabo Verde": "408",
            "Congo": "412",
            "Egypt": "414",
            "Ethiopia": "416",
            "Eritrea": "417",
            "Gambia": "420",
            "Ghana": "421",
            "Guinea": "423",
            "Kenya": "427",
            "Liberia": "429",
            "Libya": "430",
            "Morocco": "436",
            "Nigeria": "440",
            "Senegal": "444",
            "Sierra Leone": "447",
            "Somalia": "448",
            "South Africa": "449",
            "Sudan": "451",
            "Tanzania": "453",
            "Togo": "454",
            "Uganda": "457",
            "Democratic Republic of Congo (Zaire)": "459",
            "Zambia": "460",
            "Zimbabwe": "461",
            "Africa": "462",
            "Eastern Africa, Not Specified": "463",
            "Northern Africa, Not Specified": "464",
            "Western Africa, Not Specified": "467",
            "Other Africa, Not Specified": "468",
            "Australia": "501",
            "Fiji": "508",
            "Marshall Islands": "511",
            "Micronesia": "512",
            "New Zealand": "515",
            "Tonga": "523",
            "Samoa": "527",
            "Other US Island Areas, Oceania, Not Specified, or at Sea": "554"
        },
        "feature_notes": "3 digit code with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "POBP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "025": 21,
                    "001": 0,
                    "050": 45,
                    "012": 9,
                    "036": 32,
                    "055": 49,
                    "044": 39,
                    "018": 14,
                    "009": 6,
                    "034": 30,
                    "039": 35,
                    "024": 20,
                    "157": 71,
                    "006": 4,
                    "017": 13,
                    "004": 2,
                    "048": 43,
                    "010": 7,
                    "019": 15,
                    "301": 94,
                    "033": 29,
                    "005": 3,
                    "042": 38,
                    "011": 8,
                    "215": 83,
                    "013": 10,
                    "027": 23,
                    "026": 22,
                    "002": 1,
                    "022": 18,
                    "242": 92,
                    "037": 33,
                    "049": 44,
                    "047": 42,
                    "053": 47,
                    "210": 80,
                    "140": 68,
                    "023": 19,
                    "051": 46,
                    "117": 57,
                    "016": 12,
                    "008": 5,
                    "217": 84,
                    "119": 58,
                    "207": 79,
                    "501": 109,
                    "138": 66,
                    "031": 27,
                    "041": 37,
                    "035": 31,
                    "233": 89,
                    "054": 48,
                    "137": 65,
                    "303": 95,
                    "110": 55,
                    "361": 99,
                    "066": 51,
                    "029": 25,
                    "109": 54,
                    "021": 17,
                    "150": 70,
                    "240": 91,
                    "032": 28,
                    "045": 40,
                    "416": 104,
                    "072": 52,
                    "148": 69,
                    "132": 63,
                    "120": 59,
                    "373": 103,
                    "020": 16,
                    "038": 34,
                    "015": 11,
                    "040": 36,
                    "333": 98,
                    "139": 67,
                    "239": 90,
                    "222": 85,
                    "030": 26,
                    "046": 41,
                    "126": 60,
                    "247": 93,
                    "448": 106,
                    "163": 74,
                    "116": 56,
                    "515": 110,
                    "056": 50,
                    "127": 61,
                    "421": 105,
                    "160": 72,
                    "211": 81,
                    "128": 62,
                    "105": 53,
                    "362": 100,
                    "028": 24,
                    "136": 64,
                    "162": 73,
                    "214": 82,
                    "463": 108,
                    "313": 96,
                    "169": 76,
                    "231": 88,
                    "363": 101,
                    "226": 86,
                    "206": 78,
                    "314": 97,
                    "554": 111,
                    "164": 75,
                    "365": 102,
                    "203": 77,
                    "229": 87,
                    "449": 107
                },
                "alpha": 0.044642857142857144
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP"
        ]
    },
    "POVPIP": {
        "feature_desc": "Income-to-poverty ratio recode",
        "feature_type": "integer",
        "field_length": 3,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "bbb": "N/A",
            "Below 501 percent": "(0, 501, 100)",
            "501 percent or more": 501
        },
        "feature_notes": "Decimal value rounded to the nearest one",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "POVPIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP"
        ]
    },
    "POWPUMA": {
        "feature_desc": "Place of work PUMA based on 2010 Census definition",
        "feature_type": "obj",
        "field_length": 5,
        "contains_null": true,
        "field_density": "dense",
        "feature_notes": "5 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "POWPUMA",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "00290": 3,
                    "00200": 2,
                    "None": -1,
                    "00100": 1,
                    "00400": 6,
                    "00300": 4,
                    "00500": 7,
                    "06700": 25,
                    "04600": 24,
                    "00001": 0,
                    "59300": 29,
                    "07300": 26,
                    "02200": 17,
                    "03300": 21,
                    "01800": 14,
                    "01000": 10,
                    "00390": 5,
                    "00700": 9,
                    "03100": 19,
                    "00600": 8,
                    "02000": 16,
                    "08690": 27,
                    "01900": 15,
                    "03700": 23,
                    "01100": 12,
                    "09500": 28,
                    "03400": 22,
                    "01090": 11,
                    "02300": 18,
                    "01200": 13,
                    "03200": 20
                },
                "alpha": 0.16129032258064516
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP"
        ]
    },
    "POWSP": {
        "feature_desc": "Place of work - State or foreign country recode",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "bbb": "N/A (not a worker--not in the labor force, including persons under 16 years; unemployed; employed, with a job not at work; Armed Forces,  with a job but not at work)",
            "Alabama/AL": "001",
            "Alaska/AK": "002",
            "Arizona/AZ": "004",
            "Arkansas/AR": "005",
            "California/CA": "006",
            "Colorado/CO": "008",
            "Connecticut/CT": "009",
            "Delaware/DE": "010",
            "District of Columbia/DC": "011",
            "Florida/FL": "012",
            "Georgia/GA": "013",
            "Hawaii/HI": "015",
            "Idaho/ID": "016",
            "Illinois/IL": "017",
            "Indiana/IN": "018",
            "Iowa/IA": "019",
            "Kansas/KS": "020",
            "Kentucky/KY": "021",
            "Louisiana/LA": "022",
            "Maine/ME": "023",
            "Maryland/MD": "024",
            "Massachusetts/MA": "025",
            "Michigan/MI": "026",
            "Minnesota/MN": "027",
            "Mississippi/MS": "028",
            "Missouri/MO": "029",
            "Montana/MT": "030",
            "Nebraska/NE": "031",
            "Nevada/NV": "032",
            "New Hampshire/NH": "033",
            "New Jersey/NJ": "034",
            "New Mexico/NM": "035",
            "New York/NY": "036",
            "North Carolina/NC": "037",
            "North Dakota/ND": "038",
            "Ohio/OH": "039",
            "Oklahoma/OK": "040",
            "Oregon/OR": "041",
            "Pennsylvania/PA": "042",
            "Rhode Island/RI": "044",
            "South Carolina/SC": "045",
            "South Dakota/SD": "046",
            "Tennessee/TN": "047",
            "Texas/TX": "048",
            "Utah/UT": "049",
            "Vermont/VT": "050",
            "Virginia/VA": "051",
            "Washington/WA": "053",
            "West Virginia/WV": "054",
            "Wisconsin/WI": "055",
            "Wyoming/WY": "056",
            "Puerto Rico": "072",
            "Europe": "166",
            "Eastern Asia": "251",
            "Other Asia, Not Specified": "254",
            "Canada": "301",
            "Mexico": "303",
            "Americas, Not Specified": "399",
            "Other US Island Areas Not Specified, Africa, Oceania, at Sea, or Abroad, Not Specified": "555"
        },
        "feature_notes": "3 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "POWSP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "025": 7,
                    "050": 17,
                    "None": -1,
                    "033": 9,
                    "009": 1,
                    "006": 0,
                    "048": 16,
                    "036": 11,
                    "301": 21,
                    "051": 18,
                    "034": 10,
                    "055": 19,
                    "023": 6,
                    "019": 5,
                    "037": 12,
                    "012": 2,
                    "042": 13,
                    "029": 8,
                    "045": 14,
                    "017": 4,
                    "254": 20,
                    "013": 3,
                    "047": 15
                },
                "alpha": 0.21739130434782608
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA"
        ]
    },
    "PRIVCOV": {
        "feature_desc": "Private health insurance coverage recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "With private health insurance coverage": "1",
            "Without private health insurance coverage": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PRIVCOV",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP"
        ]
    },
    "PUBCOV": {
        "feature_desc": "Public health coverage recode",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "With public health coverage": "1",
            "Without public health coverage": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "PUBCOV",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV"
        ]
    },
    "QTRBIR": {
        "feature_desc": "Quarter of birth",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "January through March": "1",
            "April through June": "2",
            "July through September": "3",
            "October through December": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "QTRBIR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV"
        ]
    },
    "RAC1P": {
        "feature_desc": "Recoded detailed race code",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "White alone": "1",
            "Black or African American alone": "2",
            "American Indian alone": "3",
            "Alaska Native alone": "4",
            "American Indian and Alaska Native tribes specified; or American Indian or Alaska Native, not specified and no other races": "5",
            "Asian alone": "6",
            "Native Hawaiian and Other Pacific Islander alone": "7",
            "Some Other Race alone": "8",
            "Two or More Races": "9"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RAC1P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR"
        ]
    },
    "RAC2P": {
        "feature_desc": "Recoded detailed race code",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "White alone": "01",
            "Black or African American alone": "02",
            "Apache alone": "03",
            "Blackfeet alone": "04",
            "Cherokee alone": "05",
            "Cheyenne alone": "06",
            "Chickasaw alone": "07",
            "Chippewa alone": "08",
            "Choctaw alone": "09",
            "Comanche alone": "10",
            "Creek alone": "11",
            "Crow alone": "12",
            "Hopi alone": "13",
            "Iroquois alone": "14",
            "Lumbee alone": "15",
            "Mexican American Indian alone": "16",
            "Navajo alone": "17",
            "Pima alone": "18",
            "Potawatomi alone": "19",
            "Pueblo alone": "20",
            "Puget Sound Salish alone": "21",
            "Seminole alone": "22",
            "Sioux alone": "23",
            "South American Indian alone": "24",
            "Tohono O'Odham alone": "25",
            "Yaqui alone": "26",
            "Other specified American Indian tribes alone": "27",
            "All other specified American Indian tribe combinations": "28",
            "American Indian, tribe not specified": "29",
            "Alaskan Athabascan alone": "30",
            "Tlingit-Haida alone": "31",
            "Inupiat alone": "32",
            "Yup-ik alone": "33",
            "Aleut alone": "34",
            "Other Alaska Native": "35",
            "Other American Indian and Alaska Native specified": "36",
            "American Indian and Alaska Native, not specified": "37",
            "Asian Indian alone": "38",
            "Bangladeshi alone": "39",
            "Bhutanese alone": "40",
            "Burmese alone": "41",
            "Cambodian alone": "42",
            "Chinese, except Taiwanese, alone": "43",
            "Taiwanese alone": "44",
            "Filipino alone": "45",
            "Hmong alone": "46",
            "Indonesian alone": "47",
            "Japanese alone": "48",
            "Korean alone": "49",
            "Laotian alone": "50",
            "Malaysian alone": "51",
            "Mongolian alone": "52",
            "Nepalese alone": "53",
            "Pakistani alone": "54",
            "Sri Lankan alone": "55",
            "Thai alone": "56",
            "Vietnamese alone": "57",
            "Other Asian alone": "58",
            "All combinations of Asian races only": "59",
            "Native Hawaiian alone": "60",
            "Samoan alone": "61",
            "Tongan alone": "62",
            "Guamanian or Chamorro alone": "63",
            "Marshallese alone": "64",
            "Fijian alone": "65",
            "Other Native Hawaiian and Other Pacific Islander": "66",
            "Some Other Race alone": "67",
            "Two or More Races": "68"
        },
        "feature_notes": "2 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "RAC2P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "01": 0,
                    "02": 1,
                    "48": 15,
                    "68": 25,
                    "45": 13,
                    "49": 16,
                    "67": 24,
                    "43": 12,
                    "28": 8,
                    "27": 7,
                    "54": 19,
                    "20": 6,
                    "37": 9,
                    "61": 23,
                    "38": 10,
                    "57": 20,
                    "59": 21,
                    "19": 5,
                    "06": 3,
                    "47": 14,
                    "05": 2,
                    "60": 22,
                    "14": 4,
                    "51": 17,
                    "42": 11,
                    "53": 18
                },
                "alpha": 0.19230769230769232
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P"
        ]
    },
    "RAC3P": {
        "feature_desc": "Recoded detailed race code",
        "feature_type": "obj",
        "field_length": 3,
        "contains_null": false,
        "field_density": "dense",
        "bins": {
            "White alone": "001",
            "Black or African American alone": "002",
            "American Indian and Alaska Native alone": "003",
            "Asian Indian alone": "004",
            "Chinese alone": "005",
            "Filipino alone": "006",
            "Japanese alone": "007",
            "Korean alone": "008",
            "Vietnamese alone": "009",
            "Other Asian alone": "010",
            "Native Hawaiian alone": "011",
            "Guamanian or Chamorro alone": "012",
            "Samoan alone": "013",
            "Other Pacific Islander alone": "014",
            "Some Other Race alone": "015",
            "White; Black or African American": "016",
            "White; American Indian and Alaska Native": "017",
            "White; Asian Indian": "018",
            "White; Chinese": "019",
            "White; Filipino": "020",
            "White; Japanese": "021",
            "White; Korean": "022",
            "White; Vietnamese": "023",
            "White; Other Asian": "024",
            "White; Native Hawaiian": "025",
            "White; Guamanian or Chamorro": "026",
            "White; Samoan": "027",
            "White; Other Pacific Islander": "028",
            "White; Some Other Race": "029",
            "Black or African American; American Indian and Alaska Native": "030",
            "Black or African American; Asian Indian": "031",
            "Black or African American; Chinese": "032",
            "Black or African American; Filipino": "033",
            "Black or African American; Japanese": "034",
            "Black or African American; Korean": "035",
            "Black or African American; Other Asian": "036",
            "Black or African American; Other Pacific Islander": "037",
            "Black or African American; Some Other Race": "038",
            "American Indian and Alaska Native; Asian Indian": "039",
            "American Indian and Alaska Native; Filipino": "040",
            "American Indian and Alaska Native; Some Other Race": "041",
            "Asian Indian; Other Asian": "042",
            "Asian Indian; Some Other Race": "043",
            "Chinese; Filipino": "044",
            "Chinese; Japanese": "045",
            "Chinese; Korean": "046",
            "Chinese; Vietnamese": "047",
            "Chinese; Other Asian": "048",
            "Chinese; Native Hawaiian": "049",
            "Filipino; Japanese": "050",
            "Filipino; Native Hawaiian": "051",
            "Filipino; Other Pacific Islander": "052",
            "Filipino; Some Other Race": "053",
            "Japanese; Korean": "054",
            "Japanese; Native Hawaiian": "055",
            "Vietnamese; Other Asian": "056",
            "Other Asian; Other Pacific Islander": "057",
            "Other Asian; Some Other Race": "058",
            "Other Pacific Islander; Some Other Race": "059",
            "White; Black or African American; American Indian and Alaska Native": "060",
            "White; Black or African American; Filipino": "061",
            "White; Black or African American; Some Other Race": "062",
            "White; American Indian and Alaska Native; Filipino": "063",
            "White; American Indian and Alaska Native; Some Other Race": "064",
            "White; Chinese; Filipino": "065",
            "White; Chinese; Japanese": "066",
            "White; Chinese; Native Hawaiian": "067",
            "White; Filipino; Native Hawaiian": "068",
            "White; Japanese; Native Hawaiian": "069",
            "White; Other Asian; Some Other Race": "070",
            "Chinese; Filipino; Native Hawaiian": "071",
            "White; Chinese; Filipino; Native Hawaiian": "072",
            "White; Chinese; Japanese; Native Hawaiian": "073",
            "Black or African American; Asian groups": "074",
            "Black or African American; Native Hawaiian and Other Pacific Islander groups": "075",
            "Asian Indian; Asian groups": "076",
            "Filipino; Asian groups": "077",
            "White; Black or African American; Asian groups": "078",
            "White; American Indian and Alaska Native; Asian groups": "079",
            "White; Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "080",
            "White; Black or African American; American Indian and Alaska Native; Asian groups": "081",
            "White; Black or African American; American Indian and Alaska Native; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "082",
            "White; Black or African American; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "083",
            "White; American Indian and Alaska Native; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups": "084",
            "White; Chinese; Filipino; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "085",
            "White; Chinese; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "086",
            "White; Filipino; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "087",
            "White; Japanese; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "088",
            "White; Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "089",
            "Black or African American; American Indian and Alaska Native; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "090",
            "Black or African American; Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "091",
            "American Indian and Alaska Native; Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "092",
            "Asian Indian; and/or White; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "093",
            "Chinese; Japanese; Native Hawaiian; and/or other Asian and/or Pacific Islander groups": "094",
            "Chinese; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "095",
            "Filipino; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "096",
            "Japanese; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "097",
            "Korean; and/or Vietnamese; and/or Other Asian; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "098",
            "Native Hawaiian; and/or Pacific Islander groups; and/or Some Other Race": "099",
            "White; and/or Black or African American; and/or American Indian and Alaska Native; and/or Asian groups; and/or Native Hawaiian and Other Pacific Islander groups; and/or Some Other Race": "100"
        },
        "feature_notes": "3 digit number with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "RAC3P",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "001": 0,
                    "002": 1,
                    "007": 6,
                    "017": 14,
                    "016": 13,
                    "021": 18,
                    "006": 5,
                    "093": 30,
                    "008": 7,
                    "015": 12,
                    "020": 17,
                    "005": 4,
                    "003": 2,
                    "010": 9,
                    "019": 16,
                    "029": 22,
                    "022": 19,
                    "013": 11,
                    "032": 23,
                    "024": 20,
                    "004": 3,
                    "009": 8,
                    "047": 24,
                    "018": 15,
                    "060": 26,
                    "025": 21,
                    "091": 29,
                    "083": 28,
                    "066": 27,
                    "096": 31,
                    "058": 25,
                    "011": 10
                },
                "alpha": 0.15625
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P"
        ]
    },
    "RACAIAN": {
        "feature_desc": "American Indian and Alaska Native recode (American Indian and Alaska Native alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACAIAN",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P"
        ]
    },
    "RACASN": {
        "feature_desc": "Asian recode (Asian alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACASN",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN"
        ]
    },
    "RACBLK": {
        "feature_desc": "Black or African American recode (Black alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACBLK",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN"
        ]
    },
    "RACNH": {
        "feature_desc": "Native Hawaiian recode (Native Hawaiian alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACNH",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK"
        ]
    },
    "RACNUM": {
        "feature_desc": "Number of major race groups represented",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACNUM",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH"
        ]
    },
    "RACPI": {
        "feature_desc": "Other Pacific Islander recode (Other Pacific Islander alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACPI",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM"
        ]
    },
    "RACSOR": {
        "feature_desc": "Some other race recode (Some other race alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACSOR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI"
        ]
    },
    "RACWHT": {
        "feature_desc": "White recode (White alone or in combination with one or more other races)",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RACWHT",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR"
        ]
    },
    "RC": {
        "feature_desc": "Related child",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No (includes GQ)": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "RC",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT"
        ]
    },
    "SCIENGP": {
        "feature_desc": "Field of Degree Science and Engineering Flag \u2013 NSF Definition",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (less than bachelors degree)": "b",
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SCIENGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC"
        ]
    },
    "SCIENGRLP": {
        "feature_desc": "Field of Degree Science and Engineering Related Flag \u2013 NSF Definition",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Yes": "1",
            "No": "2"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SCIENGRLP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP"
        ]
    },
    "SFN": {
        "feature_desc": "Subfamily number",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (GQ/not in a subfamily)": "b",
            "In subfamily 1": "1",
            "In subfamily 2": "2",
            "In subfamily 3": "3",
            "In subfamily 4": "4"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SFN",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP"
        ]
    },
    "SFR": {
        "feature_desc": "Subfamily relationship",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "N/A (GQ/not in a subfamily)": "b",
            "Husband/wife no children": "1",
            "Husband/wife with children": "2",
            "Parent in a one-parent subfamily": "3",
            "Child in a married-couple subfamily": "4",
            "Child in a mother-child subfamily": "5",
            "Child in a father-child subfamily": "6"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "SFR",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN"
        ]
    },
    "SOCP": {
        "feature_desc": "Standard Occupation Classification System occupation code for 2012 and later based on 2010 SOC codes",
        "feature_type": "obj",
        "field_length": 6,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Management Occupations": [
                "1110XX",
                "111021",
                "112011",
                "112020",
                "112031",
                "113011",
                "113021",
                "113031",
                "113111",
                "113121",
                "113131",
                "113051",
                "113061",
                "113071",
                "119013",
                "119021",
                "119030",
                "119041",
                "119051",
                "119071",
                "119081",
                "119111",
                "119121",
                "119141",
                "119151",
                "119161",
                "119XXX"
            ],
            "Business and Financial Operations Occupations": [
                "131011",
                "131021",
                "131022",
                "131023",
                "131030",
                "131041",
                "131051",
                "131070",
                "131081",
                "131111",
                "131121",
                "131131",
                "131141",
                "131151",
                "131161",
                "131199",
                "132011",
                "132021",
                "132031",
                "132041",
                "132051",
                "132052",
                "132053",
                "132061",
                "132070",
                "132081",
                "132082",
                "132099"
            ],
            "Computer and Mathematical Occupations": [
                "151111",
                "151121",
                "151122",
                "151131",
                "15113X",
                "151134",
                "151141",
                "151142",
                "151143",
                "151150",
                "151199",
                "152011",
                "152031",
                "1520XX"
            ],
            "Architecture and Engineering Occupations": [
                "171010",
                "171020",
                "172011",
                "1720XX",
                "172041",
                "172051",
                "172061",
                "172070",
                "172081",
                "172110",
                "172121",
                "172131",
                "172141",
                "1721XX",
                "1721YY",
                "173010",
                "173020",
                "173031"
            ],
            "Life, Physical, and Social Science Occupations": [
                "191010",
                "191020",
                "191030",
                "1910XX",
                "192010",
                "192021",
                "192030",
                "192040",
                "192099",
                "193011",
                "193030",
                "193051",
                "1930XX",
                "194011",
                "194021",
                "194031",
                "1940XX",
                "1940YY"
            ],
            "Community and Social Service Occupations": [
                "211010",
                "211020",
                "211092",
                "211093",
                "21109X",
                "212011",
                "212021",
                "212099"
            ],
            "Legal Occupations": [
                "2310XX",
                "231012",
                "232011",
                "232090"
            ],
            "Education, Training, and Library Occupations": [
                "251000",
                "252010",
                "252020",
                "252030",
                "252050",
                "253000",
                "254010",
                "254021",
                "254031",
                "259041",
                "2590XX"
            ],
            "Arts, Design, Entertainment, Sports, and Media Occupations": [
                "271010",
                "271020",
                "272011",
                "272012",
                "272020",
                "272030",
                "272040",
                "272099",
                "273010",
                "273020",
                "273031",
                "273041",
                "273042",
                "273043",
                "273090",
                "2740XX",
                "274021",
                "274030"
            ],
            "Healthcare Practitioners and Technical Occupations": [
                "291011",
                "291020",
                "291031",
                "291041",
                "291051",
                "291060",
                "291071",
                "291081",
                "291122",
                "291123",
                "291124",
                "291125",
                "291126",
                "291127",
                "29112X",
                "291131",
                "291141",
                "291151",
                "291181",
                "291199",
                "2911XX",
                "292010",
                "292021",
                "292030",
                "292041",
                "292050",
                "292061",
                "292071",
                "292081",
                "292090",
                "299000"
            ],
            "Service Occupations": [
                "311010",
                "312010",
                "312020",
                "319011",
                "319091",
                "319092",
                "319094",
                "319095",
                "319096",
                "319097",
                "31909X"
            ],
            "Protective Service Occupations": [
                "331011",
                "331012",
                "331021",
                "331099",
                "332011",
                "332020",
                "333010",
                "333021",
                "3330XX",
                "333050",
                "339011",
                "339021",
                "339030",
                "339091",
                "339093",
                "33909X"
            ],
            "Food Preparation and Serving Related Occupations": [
                "351011",
                "351012",
                "352010",
                "352021",
                "353011",
                "353021",
                "353022",
                "353031",
                "353041",
                "3590XX",
                "359021",
                "359031"
            ],
            "Building and Grounds Cleaning and Maintenance Occupations": [
                "371011",
                "371012",
                "37201X",
                "372012",
                "372021",
                "373010"
            ],
            "Personal Care and Service Occupations": [
                "391010",
                "391021",
                "392011",
                "392021",
                "393010",
                "393021",
                "393031",
                "393090",
                "394031",
                "3940XX",
                "395011",
                "395012",
                "395090",
                "397010",
                "399011",
                "399021",
                "399030",
                "399041",
                "399099"
            ],
            "PRS-BAGGAGE PORTERS, BELLHOPS, AND CONCIERGES": [
                "396010"
            ],
            "Sales and Related Occupations": [
                "411011",
                "411012",
                "412010",
                "412021",
                "412022",
                "412031",
                "413011",
                "413021",
                "413031",
                "413041",
                "413099",
                "414010",
                "419010",
                "419020",
                "419031",
                "419041",
                "419091",
                "419099"
            ],
            "Office and Administrative Support Occupations": [
                "431011",
                "432011",
                "432021",
                "432099",
                "433011",
                "433021",
                "433031",
                "433041",
                "433051",
                "433061",
                "433071",
                "433099",
                "434011",
                "434031",
                "434041",
                "434051",
                "434061",
                "434071",
                "434081",
                "434111",
                "434121",
                "434131",
                "434141",
                "434XXX",
                "434161",
                "434171",
                "434181",
                "434199",
                "435011",
                "435021",
                "435030",
                "435041",
                "435051",
                "435052",
                "435053",
                "435061",
                "435071",
                "435081",
                "435111",
                "436010",
                "439011",
                "439021",
                "439022",
                "439041",
                "439051",
                "439061",
                "439071",
                "439081",
                "439111",
                "439XXX"
            ],
            "Farming, Fishing, and Forestry Occupations": [
                "451011",
                "452011",
                "452041",
                "4520XX",
                "453000",
                "454011",
                "454020"
            ],
            "Construction and Extraction Occupations": [
                "471011",
                "472011",
                "472031",
                "472040",
                "472050",
                "472061",
                "472071",
                "47207X",
                "472080",
                "472111",
                "472121",
                "472130",
                "472140",
                "472150",
                "472161",
                "472181",
                "472211",
                "472221",
                "472XXX",
                "473010",
                "474011",
                "474021",
                "474031",
                "474041",
                "474051",
                "474061",
                "47XXXX",
                "4750YY",
                "475021",
                "475031",
                "475040",
                "4750XX"
            ],
            "Installation, Maintenace, and Repair Occupations": [
                "491011",
                "492011",
                "492020",
                "492091",
                "492092",
                "49209X",
                "492096",
                "492097",
                "492098",
                "493011",
                "493021",
                "493022",
                "493023",
                "493031",
                "493040",
                "493050",
                "493090",
                "499010",
                "499021",
                "499031",
                "49904X",
                "499043",
                "499044",
                "499051",
                "499052",
                "499060",
                "499071",
                "499091",
                "499094",
                "499096",
                "499098",
                "4990XX"
            ],
            "Production Occupations": [
                "511011",
                "512011",
                "512020",
                "512031",
                "512041",
                "512090",
                "513011",
                "513020",
                "513091",
                "513092",
                "513093",
                "513099",
                "514010",
                "514021",
                "514022",
                "514023",
                "514030",
                "514041",
                "514050",
                "5140XX",
                "514111",
                "514120",
                "514XXX",
                "515111",
                "515112",
                "515113",
                "516011",
                "516021",
                "516031",
                "516040",
                "516050",
                "51606X",
                "516063",
                "516064",
                "516093",
                "51609X",
                "517011",
                "517021",
                "517041",
                "517042",
                "5170XX",
                "518010",
                "518021",
                "518031",
                "518090",
                "519010",
                "519020",
                "519030",
                "519041",
                "519051",
                "519061",
                "519071",
                "519080",
                "519111",
                "519120",
                "519151",
                "519191",
                "519194",
                "519195",
                "519196",
                "519197",
                "519198",
                "5191XX"
            ],
            "Transportation Occupations": [
                "531000",
                "532010",
                "532020",
                "532031",
                "533011",
                "533020",
                "533030",
                "533041",
                "533099",
                "534010",
                "534031",
                "5340XX",
                "5350XX",
                "535020",
                "536021",
                "536031",
                "536051",
                "536061",
                "5360XX"
            ],
            "Material Moving Occupations": [
                "537021",
                "537030",
                "5370XX",
                "537051",
                "537061",
                "537062",
                "537063",
                "537064",
                "537070",
                "537081",
                "5371XX"
            ],
            "Military Specific Occupations": [
                "551010",
                "552010",
                "553010",
                "559830"
            ],
            "Unemployed": [
                "999920"
            ]
        },
        "feature_notes": "Based on the Standard Occupation Classification System from the BLS, this code is cross referenced with the occupation  codes in OCCP.  For more information on occupation codes, see the Occupation Coding tab. This code is a 6 digit alphanumeric value.",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "SOCP",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "512090": 303,
                    "492020": 282,
                    "533030": 351,
                    "435081": 242,
                    "33909X": 169,
                    "259041": 104,
                    "None": -1,
                    "131051": 29,
                    "353011": 174,
                    "433031": 221,
                    "436010": 244,
                    "119013": 13,
                    "411011": 201,
                    "273043": 117,
                    "472031": 260,
                    "333050": 165,
                    "292030": 142,
                    "3590XX": 181,
                    "439061": 250,
                    "1110XX": 1,
                    "352010": 172,
                    "353031": 177,
                    "311010": 149,
                    "113121": 12,
                    "131023": 26,
                    "499071": 297,
                    "131131": 34,
                    "251000": 95,
                    "412031": 206,
                    "252030": 98,
                    "119051": 17,
                    "47XXXX": 279,
                    "439041": 248,
                    "414010": 212,
                    "119021": 14,
                    "252020": 97,
                    "119XXX": 23,
                    "493021": 285,
                    "472140": 266,
                    "373010": 187,
                    "434121": 231,
                    "291141": 137,
                    "291060": 126,
                    "472111": 265,
                    "119111": 19,
                    "291123": 130,
                    "172051": 65,
                    "393090": 191,
                    "515113": 320,
                    "131199": 37,
                    "352021": 173,
                    "274021": 119,
                    "439XXX": 253,
                    "514030": 312,
                    "433021": 220,
                    "113071": 10,
                    "412010": 203,
                    "419020": 213,
                    "37201X": 185,
                    "499051": 295,
                    "339030": 167,
                    "535020": 353,
                    "516011": 321,
                    "511011": 300,
                    "372012": 184,
                    "472061": 262,
                    "519191": 343,
                    "119141": 21,
                    "173020": 73,
                    "131081": 31,
                    "471011": 258,
                    "537051": 357,
                    "131121": 33,
                    "272040": 111,
                    "399011": 196,
                    "49904X": 294,
                    "434171": 232,
                    "119030": 15,
                    "291020": 122,
                    "454020": 257,
                    "519061": 338,
                    "359021": 179,
                    "132011": 38,
                    "5191XX": 347,
                    "431011": 217,
                    "319095": 155,
                    "434051": 227,
                    "533020": 350,
                    "537061": 358,
                    "493023": 286,
                    "333010": 163,
                    "291126": 133,
                    "516031": 323,
                    "4520XX": 256,
                    "493031": 287,
                    "435061": 240,
                    "474041": 274,
                    "435021": 236,
                    "253000": 100,
                    "292061": 145,
                    "435071": 241,
                    "517041": 328,
                    "1910XX": 76,
                    "411012": 202,
                    "151134": 52,
                    "272099": 112,
                    "271020": 107,
                    "211020": 86,
                    "399021": 197,
                    "111021": 0,
                    "533041": 352,
                    "493090": 290,
                    "212011": 89,
                    "291131": 136,
                    "353021": 175,
                    "474051": 275,
                    "292050": 144,
                    "399030": 198,
                    "493040": 288,
                    "351011": 170,
                    "433051": 222,
                    "395012": 194,
                    "537062": 359,
                    "194011": 81,
                    "435030": 237,
                    "252010": 96,
                    "516063": 325,
                    "112031": 4,
                    "113051": 8,
                    "47207X": 263,
                    "435052": 239,
                    "412021": 204,
                    "359031": 180,
                    "292021": 141,
                    "413031": 209,
                    "131161": 36,
                    "112020": 3,
                    "435051": 238,
                    "514041": 313,
                    "513011": 304,
                    "1940YY": 84,
                    "371011": 182,
                    "419091": 215,
                    "319011": 152,
                    "514021": 309,
                    "392021": 190,
                    "513092": 306,
                    "194021": 82,
                    "211010": 85,
                    "271010": 106,
                    "131022": 25,
                    "132052": 43,
                    "519198": 346,
                    "291011": 121,
                    "351012": 171,
                    "2310XX": 92,
                    "173010": 72,
                    "252050": 99,
                    "439011": 245,
                    "132070": 46,
                    "499021": 291,
                    "434081": 229,
                    "516021": 322,
                    "518021": 332,
                    "434071": 228,
                    "131111": 32,
                    "2590XX": 105,
                    "21109X": 88,
                    "113021": 6,
                    "433011": 219,
                    "399041": 199,
                    "515112": 319,
                    "519030": 336,
                    "113031": 7,
                    "119151": 22,
                    "514XXX": 317,
                    "515111": 318,
                    "15113X": 53,
                    "519111": 340,
                    "434199": 234,
                    "254021": 102,
                    "29112X": 135,
                    "151141": 54,
                    "131151": 35,
                    "537064": 360,
                    "492011": 281,
                    "439021": 246,
                    "472150": 267,
                    "172141": 70,
                    "519151": 342,
                    "172070": 66,
                    "395011": 193,
                    "193030": 80,
                    "391021": 188,
                    "151143": 56,
                    "319092": 154,
                    "113011": 5,
                    "513099": 307,
                    "172110": 68,
                    "419041": 214,
                    "131070": 30,
                    "192030": 77,
                    "413011": 207,
                    "31909X": 158,
                    "132081": 47,
                    "413021": 208,
                    "499044": 293,
                    "272020": 110,
                    "331099": 161,
                    "151131": 51,
                    "291122": 129,
                    "151142": 55,
                    "1721YY": 71,
                    "472040": 261,
                    "291127": 134,
                    "312020": 151,
                    "432021": 218,
                    "419099": 216,
                    "5170XX": 330,
                    "999920": 365,
                    "292010": 140,
                    "254010": 101,
                    "272011": 108,
                    "132053": 44,
                    "119121": 20,
                    "192040": 78,
                    "413099": 211,
                    "131041": 28,
                    "132051": 42,
                    "2911XX": 139,
                    "474011": 273,
                    "492098": 284,
                    "151150": 57,
                    "273031": 114,
                    "433099": 224,
                    "333021": 164,
                    "339091": 168,
                    "514022": 310,
                    "499031": 292,
                    "291199": 138,
                    "353041": 178,
                    "434041": 226,
                    "152031": 60,
                    "132041": 41,
                    "291031": 123,
                    "519051": 337,
                    "273041": 115,
                    "433071": 223,
                    "472XXX": 271,
                    "2740XX": 120,
                    "513020": 305,
                    "151199": 58,
                    "291051": 125,
                    "171010": 61,
                    "537021": 355,
                    "172131": 69,
                    "472211": 269,
                    "413041": 210,
                    "499091": 298,
                    "172081": 67,
                    "254031": 103,
                    "191030": 75,
                    "537081": 361,
                    "434XXX": 235,
                    "119081": 18,
                    "519010": 334,
                    "132082": 48,
                    "434111": 230,
                    "119041": 16,
                    "353022": 176,
                    "499060": 296,
                    "434031": 225,
                    "412022": 205,
                    "491011": 280,
                    "434181": 233,
                    "553010": 363,
                    "232011": 93,
                    "312010": 150,
                    "514010": 308,
                    "516050": 324,
                    "559830": 364,
                    "193011": 79,
                    "211093": 87,
                    "439071": 251,
                    "331011": 159,
                    "191020": 74,
                    "472181": 268,
                    "512020": 302,
                    "112011": 2,
                    "291081": 128,
                    "475021": 276,
                    "319091": 153,
                    "291041": 124,
                    "514120": 316,
                    "516093": 326,
                    "518010": 331,
                    "131011": 24,
                    "371012": 183,
                    "519195": 344,
                    "291125": 132,
                    "492097": 283,
                    "132021": 39,
                    "531000": 348,
                    "518031": 333,
                    "172041": 64,
                    "113061": 9,
                    "272012": 109,
                    "399099": 200,
                    "532010": 349,
                    "151121": 50,
                    "212099": 91,
                    "519080": 339,
                    "372021": 186,
                    "273042": 116,
                    "519120": 341,
                    "493050": 289,
                    "5140XX": 315,
                    "397010": 195,
                    "171020": 62,
                    "4990XX": 299,
                    "392011": 189,
                    "473010": 272,
                    "4750XX": 278,
                    "319097": 157,
                    "435111": 243,
                    "232090": 94,
                    "472080": 264,
                    "131030": 27,
                    "394031": 192,
                    "332011": 162,
                    "132099": 49,
                    "537030": 356,
                    "292090": 147,
                    "319096": 156,
                    "517021": 327,
                    "132061": 45,
                    "536021": 354,
                    "472011": 259,
                    "291071": 127,
                    "472221": 270,
                    "273020": 113,
                    "452041": 255,
                    "439111": 252,
                    "194031": 83,
                    "172011": 63,
                    "132031": 40,
                    "475040": 277,
                    "273090": 118,
                    "113111": 11,
                    "519020": 335,
                    "552010": 362,
                    "292071": 146,
                    "512011": 301,
                    "514023": 311,
                    "439051": 249,
                    "519196": 345,
                    "212021": 90,
                    "339021": 166,
                    "331012": 160,
                    "439022": 247,
                    "517042": 329,
                    "291124": 131,
                    "292041": 143,
                    "514050": 314,
                    "299000": 148,
                    "152011": 59,
                    "451011": 254
                },
                "alpha": 0.0
            }
        },
        "dependencies": []
    },
    "VPS": {
        "feature_desc": "Veteran period of service",
        "feature_type": "obj",
        "field_length": 2,
        "contains_null": true,
        "field_density": "dense",
        "bins": {
            "N/A (less than 17 years old, no active duty)": "bb",
            "Gulf War: 9/2001 or later": "01",
            "Gulf War: 9/2001 or later and Gulf War: 8/1990 - 8/2001": "02",
            "Gulf War: 9/2001 or later and Gulf War: 8/1990 - 8/2001 and Vietnam Era": "03",
            "Gulf War: 8/1990 - 8/2001": "04",
            "Gulf War: 8/1990 - 8/2001 and Vietnam Era": "05",
            "Vietnam Era": "06",
            "Vietnam Era and Korean War": "07",
            "Vietnam Era, Korean War, and WWII": "08",
            "Korean War": "09",
            "Korean War and WWII": "10",
            "WWII": "11",
            "Between Gulf War and Vietnam Era only": "12",
            "Between Vietnam Era and Korean War only": "13",
            "Between Korean War and World War II only": "14",
            "Pre-WWII only": "15"
        },
        "feature_notes": "2 digit code with leading zeros",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.numerical_encoder.NumericalEncoder",
            "encoder_param": {
                "column": "VPS",
                "indicator": true,
                "inplace": true,
                "mapping": {
                    "None": -1,
                    "13": 10,
                    "07": 5,
                    "06": 4,
                    "04": 2,
                    "11": 8,
                    "12": 9,
                    "09": 6,
                    "01": 0,
                    "02": 1,
                    "05": 3,
                    "10": 7
                },
                "alpha": 0.4166666666666667
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN",
            "SFR"
        ]
    },
    "WAOB": {
        "feature_desc": "World area of birth",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "US state (POB = 001-059)": "1",
            "PR and US Island Areas (POB = 060-099)": "2",
            "Latin America (POB = 303,310-399)": "3",
            "Asia (POB = 158-159,161,200-299)": "4",
            "Europe (POB = 100-157,160,162-199)": "5",
            "Africa (POB = 400-499)": "6",
            "Northern America (POB = 300-302,304-309)": "7",
            "Oceania and at Sea (POB = 500-554)": "8"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "WAOB",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN",
            "SFR",
            "VPS"
        ]
    },
    "FAGEP": {
        "feature_desc": "Age allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FAGEP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FANCP": {
        "feature_desc": "Ancestry allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FANCP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FCITP": {
        "feature_desc": "Citizenship allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FCITP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FCITWP": {
        "feature_desc": "Year of naturalization write-in allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FCITWP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FCOWP": {
        "feature_desc": "Class of worker allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FCOWP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDDRSP": {
        "feature_desc": "Self-care difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDDRSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDEARP": {
        "feature_desc": "Hearing difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDEARP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDEYEP": {
        "feature_desc": "Vision difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDEYEP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDISP": {
        "feature_desc": "Disability recode allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDISP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDOUTP": {
        "feature_desc": "Independent living difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDOUTP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDPHYP": {
        "feature_desc": "Ambulatory difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDPHYP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDRATP": {
        "feature_desc": "Disability rating percentage allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDRATP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDRATXP": {
        "feature_desc": "Disability rating checkbox allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDRATXP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FDREMP": {
        "feature_desc": "Cognitive difficulty allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FDREMP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FENGP": {
        "feature_desc": "Ability to speak English allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FENGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FESRP": {
        "feature_desc": "Employment status recode allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FESRP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FFERP": {
        "feature_desc": "Gave birth to child within the past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FFERP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FFODP": {
        "feature_desc": "Field of Degree allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FFODP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FGCLP": {
        "feature_desc": "Grandparents living with grandchildren allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FGCLP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FGCMP": {
        "feature_desc": "Length of time responsible for grandchildren allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FGCMP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FGCRP": {
        "feature_desc": "Grandparents responsible for grandchildren allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FGCRP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHICOVP": {
        "feature_desc": "Health insurance coverage recode allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHICOVP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS1P": {
        "feature_desc": "Insurance through a current or former employer or union allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS1P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS2P": {
        "feature_desc": "Insurance purchased directly from an insurance company allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS2P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS3C": {
        "feature_desc": "Medicare coverage given through the eligibility coverage edit",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Does not have Medicare coverage (HINS3=2)": "b",
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS3C",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN",
            "SFR",
            "VPS",
            "WAOB"
        ]
    },
    "FHINS3P": {
        "feature_desc": "Medicare, for people 65 or older, or people with certain disabilities allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS3P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS4C": {
        "feature_desc": "Medicaid coverage given through the eligibility coverage edit",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Does not have Medicaid coverage (HINS4=2)": "b",
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS4C",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN",
            "SFR",
            "VPS",
            "WAOB",
            "FHINS3C"
        ]
    },
    "FHINS4P": {
        "feature_desc": "Medicaid, medical assistance, or any kind of government-assistance plan for people with low incomes or a disability allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS4P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS5C": {
        "feature_desc": "TRICARE coverage given through the eligibility coverage edit",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": true,
        "field_density": "sparse",
        "bins": {
            "Does not have TRICARE coverage (HINS5=2)": "b",
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "DecisionTreeModel",
            "model_type": "",
            "model_params": {
                "max_depth": 10,
                "criterion": "entropy",
                "min_impurity_decrease": 1e-05
            },
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS5C",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": [
            "PUMA",
            "CIT",
            "CITWP",
            "COW",
            "DDRS",
            "DEAR",
            "DEYE",
            "DOUT",
            "DPHY",
            "DRAT",
            "DRATX",
            "DREM",
            "ENG",
            "FER",
            "GCL",
            "GCM",
            "GCR",
            "HINS1",
            "HINS2",
            "HINS3",
            "HINS4",
            "HINS5",
            "HINS6",
            "HINS7",
            "INTP",
            "JWMNP",
            "JWRIP",
            "JWTR",
            "LANP",
            "LANX",
            "MAR",
            "MARHD",
            "MARHM",
            "MARHT",
            "MARHW",
            "MARHYP",
            "MIG",
            "MIL",
            "MLPA",
            "MLPB",
            "MLPCD",
            "MLPE",
            "MLPFG",
            "MLPH",
            "MLPI",
            "MLPJ",
            "MLPK",
            "NWAB",
            "NWAV",
            "NWLA",
            "NWLK",
            "NWRE",
            "OIP",
            "PAP",
            "RELP",
            "RETP",
            "SCH",
            "SCHG",
            "SCHL",
            "SEMP",
            "SEX",
            "SSIP",
            "SSP",
            "WAGP",
            "WKHP",
            "WKL",
            "WKW",
            "WRK",
            "YOEP",
            "ANC",
            "ANC1P",
            "ANC2P",
            "DECADE",
            "DIS",
            "DRIVESP",
            "ESP",
            "ESR",
            "FOD1P",
            "FOD2P",
            "HICOV",
            "HISP",
            "INDP",
            "JWAP",
            "JWDP",
            "MIGPUMA",
            "MIGSP",
            "MSP",
            "NATIVITY",
            "NOP",
            "OC",
            "OCCP",
            "PAOC",
            "PERNP",
            "PINCP",
            "POBP",
            "POVPIP",
            "POWPUMA",
            "POWSP",
            "PRIVCOV",
            "PUBCOV",
            "QTRBIR",
            "RAC1P",
            "RAC2P",
            "RAC3P",
            "RACAIAN",
            "RACASN",
            "RACBLK",
            "RACNH",
            "RACNUM",
            "RACPI",
            "RACSOR",
            "RACWHT",
            "RC",
            "SCIENGP",
            "SCIENGRLP",
            "SFN",
            "SFR",
            "VPS",
            "WAOB",
            "FHINS3C",
            "FHINS4C"
        ]
    },
    "FHINS5P": {
        "feature_desc": "TRICARE or other military health care allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS5P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS6P": {
        "feature_desc": "VA (including those who have ever used or enrolled for VA health care) allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS6P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHINS7P": {
        "feature_desc": "Indian health service allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHINS7P",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FHISP": {
        "feature_desc": "Detailed Hispanic origin allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FHISP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FINDP": {
        "feature_desc": "Industry allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FINDP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FINTP": {
        "feature_desc": "Interest, dividend, and net rental income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FINTP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FJWDP": {
        "feature_desc": "Time of departure to work allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FJWDP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FJWMNP": {
        "feature_desc": "Travel time to work allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FJWMNP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FJWRIP": {
        "feature_desc": "Vehicle occupancy allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FJWRIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FJWTRP": {
        "feature_desc": "Means of transportation to work allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FJWTRP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FLANP": {
        "feature_desc": "Language spoken at home allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FLANP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FLANXP": {
        "feature_desc": "Language other than English allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FLANXP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARP": {
        "feature_desc": "Marital status allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARHDP": {
        "feature_desc": "Divorced in the past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARHDP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARHMP": {
        "feature_desc": "Married in the past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARHMP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARHTP": {
        "feature_desc": "Times married allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARHTP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARHWP": {
        "feature_desc": "Widowed in the past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARHWP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMARHYP": {
        "feature_desc": "Year last married allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMARHYP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMIGP": {
        "feature_desc": "Mobility status allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMIGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMIGSP": {
        "feature_desc": "Migration state allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMIGSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMILPP": {
        "feature_desc": "Military periods of service allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMILPP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FMILSP": {
        "feature_desc": "Military service allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FMILSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FOCCP": {
        "feature_desc": "Occupation allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FOCCP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FOIP": {
        "feature_desc": "All other income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FOIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPAP": {
        "feature_desc": "Public assistance income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPAP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPERNP": {
        "feature_desc": "Total person\u2019s earnings allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPERNP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPINCP": {
        "feature_desc": "Total person\u2019s income (signed) allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPINCP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPOBP": {
        "feature_desc": "Place of birth allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPOBP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPOWSP": {
        "feature_desc": "Place of work state allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPOWSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPRIVCOVP": {
        "feature_desc": "Private health insurance coverage recode allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPRIVCOVP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FPUBCOVP": {
        "feature_desc": "Public health coverage recode allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FPUBCOVP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FRACP": {
        "feature_desc": "Detailed race allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FRACP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FRELP": {
        "feature_desc": "Relationship allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FRELP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FRETP": {
        "feature_desc": "Retirement income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FRETP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSCHGP": {
        "feature_desc": "Grade attending allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSCHGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSCHLP": {
        "feature_desc": "Highest education allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSCHLP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSCHP": {
        "feature_desc": "School enrollment allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSCHP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSEMP": {
        "feature_desc": "Self-employment income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSEMP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSEXP": {
        "feature_desc": "Sex allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSEXP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSSIP": {
        "feature_desc": "Supplementary Security Income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSSIP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FSSP": {
        "feature_desc": "Social Security income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FSSP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FWAGP": {
        "feature_desc": "Wages and salary income allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FWAGP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FWKHP": {
        "feature_desc": "Usual hours worked per week past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FWKHP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FWKLP": {
        "feature_desc": "Last worked allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FWKLP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FWKWP": {
        "feature_desc": "Weeks worked past 12 months allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FWKWP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FWRKP": {
        "feature_desc": "Worked last week allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FWRKP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "FYOEP": {
        "feature_desc": "Year of entry allocation flag",
        "feature_type": "integer",
        "field_length": 1,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "No": "0",
            "Yes": "1"
        },
        "feature_notes": "Integer stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "FYOEP",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp1": {
        "feature_desc": "Person's Weight replicate 1",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp1",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp2": {
        "feature_desc": "Person's Weight replicate 2",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp2",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp3": {
        "feature_desc": "Person's Weight replicate 3",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp3",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp4": {
        "feature_desc": "Person's Weight replicate 4",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp4",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp5": {
        "feature_desc": "Person's Weight replicate 5",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp5",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp6": {
        "feature_desc": "Person's Weight replicate 6",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp6",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp7": {
        "feature_desc": "Person's Weight replicate 7",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp7",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp8": {
        "feature_desc": "Person's Weight replicate 8",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp8",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp9": {
        "feature_desc": "Person's Weight replicate 9",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp9",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp10": {
        "feature_desc": "Person's Weight replicate 10",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp10",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp11": {
        "feature_desc": "Person's Weight replicate 11",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp11",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp12": {
        "feature_desc": "Person's Weight replicate 12",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp12",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp13": {
        "feature_desc": "Person's Weight replicate 13",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp13",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp14": {
        "feature_desc": "Person's Weight replicate 14",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp14",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp15": {
        "feature_desc": "Person's Weight replicate 15",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp15",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp16": {
        "feature_desc": "Person's Weight replicate 16",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp16",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp17": {
        "feature_desc": "Person's Weight replicate 17",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp17",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp18": {
        "feature_desc": "Person's Weight replicate 18",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp18",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp19": {
        "feature_desc": "Person's Weight replicate 19",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp19",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp20": {
        "feature_desc": "Person's Weight replicate 20",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp20",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp21": {
        "feature_desc": "Person's Weight replicate 21",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp21",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp22": {
        "feature_desc": "Person's Weight replicate 22",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp22",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp23": {
        "feature_desc": "Person's Weight replicate 23",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp23",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp24": {
        "feature_desc": "Person's Weight replicate 24",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp24",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp25": {
        "feature_desc": "Person's Weight replicate 25",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp25",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp26": {
        "feature_desc": "Person's Weight replicate 26",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp26",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp27": {
        "feature_desc": "Person's Weight replicate 27",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp27",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp28": {
        "feature_desc": "Person's Weight replicate 28",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp28",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp29": {
        "feature_desc": "Person's Weight replicate 29",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp29",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp30": {
        "feature_desc": "Person's Weight replicate 30",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp30",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp31": {
        "feature_desc": "Person's Weight replicate 31",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp31",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp32": {
        "feature_desc": "Person's Weight replicate 32",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp32",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp33": {
        "feature_desc": "Person's Weight replicate 33",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp33",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp34": {
        "feature_desc": "Person's Weight replicate 34",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp34",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp35": {
        "feature_desc": "Person's Weight replicate 35",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp35",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp36": {
        "feature_desc": "Person's Weight replicate 36",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp36",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp37": {
        "feature_desc": "Person's Weight replicate 37",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp37",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp38": {
        "feature_desc": "Person's Weight replicate 38",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp38",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp39": {
        "feature_desc": "Person's Weight replicate 39",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp39",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp40": {
        "feature_desc": "Person's Weight replicate 40",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp40",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp41": {
        "feature_desc": "Person's Weight replicate 41",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp41",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp42": {
        "feature_desc": "Person's Weight replicate 42",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp42",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp43": {
        "feature_desc": "Person's Weight replicate 43",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp43",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp44": {
        "feature_desc": "Person's Weight replicate 44",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp44",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp45": {
        "feature_desc": "Person's Weight replicate 45",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp45",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp46": {
        "feature_desc": "Person's Weight replicate 46",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp46",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp47": {
        "feature_desc": "Person's Weight replicate 47",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp47",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp48": {
        "feature_desc": "Person's Weight replicate 48",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp48",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp49": {
        "feature_desc": "Person's Weight replicate 49",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp49",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp50": {
        "feature_desc": "Person's Weight replicate 50",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp50",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp51": {
        "feature_desc": "Person's Weight replicate 51",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp51",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp52": {
        "feature_desc": "Person's Weight replicate 52",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp52",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp53": {
        "feature_desc": "Person's Weight replicate 53",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp53",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp54": {
        "feature_desc": "Person's Weight replicate 54",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp54",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp55": {
        "feature_desc": "Person's Weight replicate 55",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp55",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp56": {
        "feature_desc": "Person's Weight replicate 56",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp56",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp57": {
        "feature_desc": "Person's Weight replicate 57",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp57",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp58": {
        "feature_desc": "Person's Weight replicate 58",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp58",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp59": {
        "feature_desc": "Person's Weight replicate 59",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp59",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp60": {
        "feature_desc": "Person's Weight replicate 60",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp60",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp61": {
        "feature_desc": "Person's Weight replicate 61",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp61",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp62": {
        "feature_desc": "Person's Weight replicate 62",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp62",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp63": {
        "feature_desc": "Person's Weight replicate 63",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp63",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp64": {
        "feature_desc": "Person's Weight replicate 64",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp64",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp65": {
        "feature_desc": "Person's Weight replicate 65",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp65",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp66": {
        "feature_desc": "Person's Weight replicate 66",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp66",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp67": {
        "feature_desc": "Person's Weight replicate 67",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp67",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp68": {
        "feature_desc": "Person's Weight replicate 68",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp68",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp69": {
        "feature_desc": "Person's Weight replicate 69",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp69",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp70": {
        "feature_desc": "Person's Weight replicate 70",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp70",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp71": {
        "feature_desc": "Person's Weight replicate 71",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp71",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp72": {
        "feature_desc": "Person's Weight replicate 72",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp72",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp73": {
        "feature_desc": "Person's Weight replicate 73",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp73",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp74": {
        "feature_desc": "Person's Weight replicate 74",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp74",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp75": {
        "feature_desc": "Person's Weight replicate 75",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp75",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp76": {
        "feature_desc": "Person's Weight replicate 76",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp76",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp77": {
        "feature_desc": "Person's Weight replicate 77",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp77",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp78": {
        "feature_desc": "Person's Weight replicate 78",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp78",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp79": {
        "feature_desc": "Person's Weight replicate 79",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp79",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    },
    "pwgtp80": {
        "feature_desc": "Person's Weight replicate 80",
        "feature_type": "floating_point",
        "field_length": 5,
        "contains_null": false,
        "field_density": "sparse",
        "bins": {
            "Integer weight of person": "(-9999, 9999, 100)"
        },
        "feature_notes": "Float stored as object",
        "model_info": {
            "model_name": "NoopModel",
            "model_type": "",
            "model_params": {},
            "hierarchy": {}
        },
        "encoder": {
            "encoder_type": "encoder.encoder.IdentityEncoder",
            "encoder_param": {
                "column": "pwgtp80",
                "indicator": true,
                "inplace": true
            }
        },
        "dependencies": []
    }
}